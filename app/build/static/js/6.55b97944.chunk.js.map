{"version":3,"sources":["layouts/inner-app-layout/index.js","constants/ChartConstant.js","components/shared-components/EllipsisDropdown/index.js","views/app-views/helpdesk/Conversation.js","views/app-views/helpdesk/ChatContent.js","components/shared-components/AvatarStatus/index.js","views/app-views/helpdesk/ChatMenu.js","views/app-views/helpdesk/index.js"],"names":["useBreakpoint","Grid","LeftSideContent","props","sideContent","sideContentWidth","border","className","style","width","fontSize","LeftSideContentMobile","visible","onSideContentClose","placement","closable","onClose","bodyStyle","paddingLeft","paddingRight","RightSideContent","size","color","PhoneOutlined","MailOutlined","InnerAppLayout","mainContent","pageHeader","sideContentGutter","isMobile","utils","getBreakPoint","includes","useState","setVisible","e","MenuOutlined","onClick","EllipsisDropdown","overlay","menu","trigger","EllipsisOutlined","defaultProps","Item","key","UserOutlined","AudioMutedOutlined","Divider","DeleteOutlined","Conversation","formRef","React","createRef","chatBodyRef","state","info","msgList","getConversation","currentId","data","ChatData","filter","elm","id","setState","msg","getMsgType","obj","msgType","text","src","alt","Flex","alignItems","FileOutlined","scrollToBottom","current","onSend","values","newMsg","newMsgData","avatar","from","time","setFieldsValue","emptyClick","preventDefault","chatContentHeader","name","status","marginTop","chatContentBody","ref","autoHide","map","i","chatContentFooter","onFinish","autoComplete","placeholder","suffix","href","PaperClipOutlined","shape","type","htmlType","SendOutlined","this","getUserId","prevProps","location","pathname","match","params","parseInt","Component","ConversationEmpty","ChatContent","path","url","component","AvatarStatus","subTitle","icon","gap","onNameClick","renderAvatar","ChatMenu","list","setList","history","useHistory","item","unread","push","openChat","length","borderRadius","margin","count","backgroundColor","Title","Typography","Option","Select","Helpdesk","gutter","span","level","onChange","query","target","value","toLowerCase","prefix","SearchOutlined","height","paddingTop","FilterOutlined","offset","defaultValue"],"mappings":"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","file":"static/js/6.55b97944.chunk.js","sourcesContent":["import React, { useState } from 'react'\r\nimport PropTypes from \"prop-types\";\r\nimport { Grid, Drawer, Avatar, Tag, Col } from \"antd\";\r\nimport utils from 'utils'\r\nimport { MenuOutlined, PhoneOutlined, MailOutlined } from '@ant-design/icons';\r\nimport { COLOR_4 } from 'constants/ChartConstant'\r\n\r\nconst { useBreakpoint } = Grid;\r\n\r\nconst LeftSideContent = props => {\r\n\tconst { sideContent, sideContentWidth = 250, border } = props\r\n\treturn (\r\n\t\t<div className={ `side-content ${ border ? 'with-border' : '' }` } style={{ width: `${sideContentWidth}px`, fontSize: '0.80rem' }}>\r\n\t\t\t{ sideContent }\r\n\t\t</div>\r\n\t)\r\n}\r\n\r\nconst LeftSideContentMobile = props => {\r\n\tconst { sideContent, visible, onSideContentClose } = props\r\n\treturn (\r\n\t\t<Drawer\r\n\t\t\twidth={ 320 }\r\n\t\t\tplacement=\"left\"\r\n\t\t\tclosable={ false }\r\n\t\t\tonClose={ onSideContentClose }\r\n\t\t\tvisible={ visible }\r\n\t\t\tbodyStyle={{ paddingLeft: 0, paddingRight: 0 }}\r\n\t\t>\r\n\t\t\t<div className=\"h-100\">\r\n\t\t\t\t{ sideContent }\r\n\t\t\t</div>\r\n\t\t</Drawer>\r\n\t)\r\n}\r\n\r\nconst RightSideContent = props => {\r\n\tconst { sideContentWidth = 250, border } = props\r\n\treturn (\r\n\t\t<div className={ `side-content ${ border ? 'with-border' : '' }` } style={{ width: `${sideContentWidth}px`, fontSize: '0.80rem', border: `1px solid ${COLOR_4}` }}>\r\n\t\t\t<div className=\"text-center mt-4 ml-4\" style={{ paddingLeft: '0.6rem' }}>\r\n\t\t\t\t<Avatar size={80} />\r\n\t\t\t\t<h4 className=\"mt-3 mb-0\">Dhruva Agrawal</h4>\r\n\t\t\t\t<Tag color=\"green\" className=\"ml-2 mt-2\">Online</Tag><br />\r\n\t\t\t\t{/* <Tag color=\"red\" className=\"mt-2\">Offine</Tag> */}\r\n\t\t\t\t<Tag color=\"default\" className=\"ml-2 mt-3\"><PhoneOutlined className=\"mr-1\" />Call</Tag>\r\n\t\t\t\t<Tag color=\"default\" className=\"mt-3\"><MailOutlined className=\"mr-1\" />E-mail</Tag><br />\r\n\t\t\t\t<p className=\"mt-3\">Room: <span className=\"ml-2\">102</span></p>\r\n\t\t\t\t<p>Category: <span className=\"ml-2\">Standard</span></p>\r\n\t\t\t\t<p>Country: <span className=\"ml-2\">India</span></p>\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t)\r\n}\r\n\r\nexport const InnerAppLayout = (props) => {\r\n\tconst { mainContent, pageHeader, sideContentGutter = true } = props\r\n\tconst isMobile = !utils.getBreakPoint(useBreakpoint()).includes('lg')\r\n\tconst [ visible, setVisible ] = useState(false);\r\n\r\n\tconst close = (e) => {\r\n\t\tsetVisible(false)\r\n\t} \r\n\r\n\tconst openSideContentMobile = () => {\r\n\t\tsetVisible(true)\r\n\t}\r\n\r\n\treturn (\r\n\t\t<div className=\"inner-app-layout\">\r\n\t\t\t{ isMobile ? \r\n\t\t\t\t<LeftSideContentMobile \r\n\t\t\t\t\tvisible={ visible }\r\n\t\t\t\t\tonSideContentClose={ close }\r\n\t\t\t\t\t{ ...props }\r\n\t\t\t\t/> \r\n\t\t\t\t: \r\n\t\t\t\t<LeftSideContent { ...props}  />\r\n\t\t\t}\r\n\t\t\t<div className={ `main-content ${ pageHeader? 'has-page-header' : '' } ${ sideContentGutter? 'gutter' : 'no-gutter' }` }>\r\n\t\t\t\t{ isMobile ? \r\n\t\t\t\t\t<div className={ `font-size-lg mb-3 ${ !sideContentGutter ? 'pt-3 px-3' : '' }` }>\r\n\t\t\t\t\t\t<MenuOutlined onClick={ () => openSideContentMobile() }/>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t:\r\n\t\t\t\t\tnull\r\n\t\t\t\t}\r\n\t\t\t\t{ mainContent }\r\n\t\t\t</div>\r\n\t\t\t<RightSideContent { ...props}  />\r\n\t\t</div>\r\n\t)\r\n}\r\n\r\nInnerAppLayout.propTypes = {\r\n\tsideContent: PropTypes.node,\r\n\tmainContent: PropTypes.node,\r\n\tpageHeader: PropTypes.bool,\r\n\tsideContentWidth: PropTypes.number,\r\n\tborder: PropTypes.bool,\r\n\tsideContentGutter: PropTypes.bool\r\n};\r\n\r\nexport default InnerAppLayout\r\n","export const COLOR_1 = '#B71540';  \r\nexport const COLOR_2 = '#5D001E';\r\nexport const COLOR_3 = '#57606F';\r\nexport const COLOR_4 = '#d1ccc0';  \r\nexport const COLOR_5 = '#F78888';  \r\nexport const COLOR_6 = '#9A1750';  \r\nexport const COLOR_7 = '#EE4C7C';  \r\nexport const COLOR_8 = '#44318D';  \r\nexport const COLOR_9 = '#FF1493'\r\n\r\nexport const COLOR_1_LIGHT = 'rgba(62, 130, 247, 0.15)';\r\nexport const COLOR_2_LIGHT = 'rgba(4, 209, 130, 0.1)';\r\nexport const COLOR_3_LIGHT = 'rgba(222, 68, 54, 0.1)';\r\nexport const COLOR_4_LIGHT = 'rgba(255, 193, 7, 0.1)';\r\nexport const COLOR_5_LIGHT = 'rgba(139, 75, 157, 0.1)';\r\nexport const COLOR_6_LIGHT = 'rgba(250, 140, 22, .1)';\r\nexport const COLOR_7_LIGHT = 'rgba(23, 188, 255, 0.15)';\r\n\r\nexport const COLORS = [\r\n\tCOLOR_1,\r\n\tCOLOR_2,\r\n\tCOLOR_3,\r\n\tCOLOR_4,\r\n\tCOLOR_5,\r\n\tCOLOR_6,\r\n\tCOLOR_7,\r\n\tCOLOR_8,\r\n\tCOLOR_9\r\n]\r\n\r\nexport const COLORS_LIGHT = [\r\n\tCOLOR_1_LIGHT,\r\n\tCOLOR_2_LIGHT,\r\n\tCOLOR_3_LIGHT,\r\n\tCOLOR_4_LIGHT,\r\n\tCOLOR_5_LIGHT,\r\n\tCOLOR_6_LIGHT,\r\n\tCOLOR_7_LIGHT\r\n]","import React from 'react'\r\nimport { Dropdown, Menu } from 'antd';\r\nimport { EllipsisOutlined } from '@ant-design/icons';\r\nimport PropTypes from 'prop-types'\r\n\r\nconst EllipsisDropdown = props => {\r\n\treturn (\r\n\t\t<Dropdown overlay={props.menu} placement={props.placement} trigger={['click']}>\r\n\t\t\t<div className=\"ellipsis-dropdown\">\r\n\t\t\t\t<EllipsisOutlined />\r\n\t\t\t</div>\r\n\t\t</Dropdown>\r\n\t)\r\n}\r\n\r\nEllipsisDropdown.propTypes = {\r\n\ttrigger: PropTypes.string,\r\n\tplacement: PropTypes.string\r\n}\r\n\r\nEllipsisDropdown.defaultProps = {\r\n\ttrigger: 'click',\r\n\tplacement: 'bottomRight',\r\n\tmenu: <Menu />\r\n};\r\n\r\nexport default EllipsisDropdown\r\n","import React from 'react'\nimport ChatData from \"assets/data/chat.data.json\"\nimport { Avatar, Divider, Input, Form, Button, Menu, Row, Badge } from 'antd';\nimport { \n\tFileOutlined, \n\tSendOutlined, \n\tPaperClipOutlined, \n\tAudioMutedOutlined,\n\tUserOutlined,\n\tDeleteOutlined\n} from '@ant-design/icons';\nimport { Scrollbars } from 'react-custom-scrollbars';\nimport Flex from 'components/shared-components/Flex';\nimport EllipsisDropdown from 'components/shared-components/EllipsisDropdown'\n\nconst menu = () => (\n\t<Menu>\n\t\t<Menu.Item key=\"0\">\n\t\t\t<UserOutlined />\n\t\t\t<span>User Info</span>\n\t\t</Menu.Item>\n\t\t<Menu.Item key=\"1\">\n\t\t\t<AudioMutedOutlined />\n\t\t\t<span>Mute Chat</span>\n\t\t</Menu.Item>\n\t\t<Menu.Divider />\n\t\t<Menu.Item key=\"3\">\n\t\t\t<DeleteOutlined />\n\t\t\t<span>Delete Chat</span>\n\t\t</Menu.Item>\n\t</Menu>\n);\n\nexport class Conversation extends React.Component {\n\tformRef = React.createRef();\n\tchatBodyRef = React.createRef()\n\n\tstate = {\n\t\tinfo: {},\n\t\tmsgList: [],\n\t}\n\t\n\tcomponentDidMount() {\n\t\tthis.getConversation(this.getUserId())\n\t}\n\n\tcomponentDidUpdate(prevProps) {\n\t\tif (this.props.location.pathname !== prevProps.location.pathname) {\n\t\t\tthis.getConversation(this.getUserId())\t\t\t\n\t\t}\n\t\tthis.scrollToBottom()\n\t}\n\t\n\tgetUserId() {\n\t\tconst { id } = this.props.match.params\n\t\treturn parseInt(parseInt(id))\n\t}\n\t\n\n\tgetConversation = currentId => {\n\t\tconst data = ChatData.filter(elm => elm.id === currentId)\n\t\tthis.setState({\n\t\t\tinfo: data[0],\n\t\t\tmsgList: data[0].msg\n\t\t})\t\n\t}\n\n\tgetMsgType = obj => {\n\t\tswitch (obj.msgType) {\n\t\t\tcase 'text':\n\t\t\t\treturn <span>{obj.text}</span>\n\t\t\tcase 'image':\n\t\t\t\treturn <img src={obj.text} alt={obj.text} />\n\t\t\tcase 'file':\n\t\t\t\treturn (\n\t\t\t\t<Flex alignItems=\"center\" className=\"msg-file\">\n\t\t\t\t\t<FileOutlined className=\"font-size-md\"/>\n\t\t\t\t\t<span className=\"ml-2 font-weight-semibold text-link pointer\">\n\t\t\t\t\t\t<u>{obj.text}</u>\n\t\t\t\t\t</span>\n\t\t\t\t</Flex>\n\t\t\t\t)\n\t\t\tdefault:\n\t\t\t\treturn null;\n\t\t}\n\t}\n\n\tscrollToBottom = () => {\n\t\tthis.chatBodyRef.current.scrollToBottom()\n\t}\n\n\tonSend = values => {\n\t\tif (values.newMsg) {\n\t\t\tconst newMsgData = {\n\t\t\t\tavatar: \"\",\n\t\t\t\tfrom: \"me\",\n\t\t\t\tmsgType: \"text\",\n\t\t\t\ttext: values.newMsg,\n\t\t\t\ttime: \"\",\n\t\t\t}\n\t\t\tthis.formRef.current.setFieldsValue({\n\t\t\t\tnewMsg: ''\n\t\t\t});\n\t\t\tthis.setState({\n\t\t\t\tmsgList: [...this.state.msgList, newMsgData]\n\t\t\t})\n\t\t}\n\t}\n\t\n\temptyClick = (e) => {\n    e.preventDefault();\n\t}\n\t\n\tchatContentHeader = (name, avatar) => (\n\t\t<div className=\"chat-content-header\">\n\t\t\t<Row>\n\t\t\t\t<Avatar src={ avatar } />\n\t\t\t\t<h4 className=\"mb-0 ml-2 pt-2\">{ name }</h4>\n\t\t\t\t<Badge status=\"success\" className=\"ml-2 pt-2\" style={{ marginTop: '2px' }} />\n\t\t\t\t<p className=\"pt-2 ml-5\">Room: <span className=\"ml-1\">102</span></p>\n\t\t\t\t<p className=\"pt-2 ml-5\">Oct 1 - Oct 12</p>\n\t\t\t</Row>\n\t\t\t<div>\n\t\t\t\t<EllipsisDropdown menu={menu}/>\n\t\t\t</div>\n\t\t</div>\n\t)\n\n\tchatContentBody = (props, id) => (\n\t\t<div className=\"chat-content-body\">\n\t\t\t<Scrollbars ref={this.chatBodyRef} autoHide>\n\t\t\t\t{\n\t\t\t\t\tprops.map((elm, i) => (\n\t\t\t\t\t\t<div \n\t\t\t\t\t\t\tkey={`msg-${id}-${i}`} \n\t\t\t\t\t\t\tclassName={`msg ${elm.msgType === 'date' ? 'datetime' : ''} ${elm.from === 'opposite' ? 'msg-recipient' : elm.from === 'me'? 'msg-sent' : ''}`}\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\telm.avatar? \n\t\t\t\t\t\t\t\t<div className=\"mr-2\">\n\t\t\t\t\t\t\t\t\t<Avatar src={elm.avatar} />\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t:\n\t\t\t\t\t\t\t\tnull\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\telm.text?\n\t\t\t\t\t\t\t\t<div className={`bubble ${!elm.avatar? 'ml-5' : ''}`}>\n\t\t\t\t\t\t\t\t\t<div className=\"bubble-wrapper\">\n\t\t\t\t\t\t\t\t\t\t{this.getMsgType(elm)}\n\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t:\n\t\t\t\t\t\t\t\tnull\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\telm.msgType === 'date'?\n\t\t\t\t\t\t\t\t<Divider>{elm.time}</Divider>\n\t\t\t\t\t\t\t\t: \n\t\t\t\t\t\t\t\tnull\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t</div>\n\t\t\t\t\t))\n\t\t\t\t}\n\t\t\t</Scrollbars>\n\t\t</div>\n\t)\n\n\tchatContentFooter = () => (\n\t\t<div className=\"chat-content-footer\">\n\t\t\t<Form name=\"msgInput\" ref={this.formRef} onFinish={this.onSend} className=\"w-100\">\n\t\t\t\t<Form.Item name=\"newMsg\" className=\"mb-0\">\n\t\t\t\t\t<Input \n\t\t\t\t\t\tautoComplete=\"off\" \n\t\t\t\t\t\tplaceholder=\"Reply...\"\n\t\t\t\t\t\tsuffix={\n\t\t\t\t\t\t\t<div className=\"d-flex align-items-center\">\n\t\t\t\t\t\t\t\t<a href=\"/#\" className=\"text-dark font-size-lg mr-3\" onClick={this.emptyClick}>\n\t\t\t\t\t\t\t\t\t<PaperClipOutlined />\n\t\t\t\t\t\t\t\t</a>\n\t\t\t\t\t\t\t\t<Button shape=\"circle\" type=\"primary\" size=\"small\" onClick={this.onSend} htmlType=\"submit\">\n\t\t\t\t\t\t\t\t\t<SendOutlined />\n\t\t\t\t\t\t\t\t</Button>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t}\n\t\t\t\t\t/>\n\t\t\t\t</Form.Item>\n\t\t\t</Form>\n\t\t</div>\n\t)\n\n\n\trender() {\n\t\tconst { id } = this.props.match.params\n\t\tconst { info, msgList } = this.state\n\t\treturn (\n\t\t\t<div className=\"chat-content\">\n\t\t\t\t{this.chatContentHeader(info.name, info.avatar)}\n\t\t\t\t{this.chatContentBody(msgList, id)}\n\t\t\t\t{this.chatContentFooter()}\n\t\t\t</div>\n\t\t)\n\t}\n}\n\n\nexport default Conversation","import React from 'react'\nimport { Route, Switch, } from 'react-router-dom';\nimport Conversation from './Conversation';\n\nconst ConversationEmpty = () => (\n  <div className=\"chat-content-empty\">\n    <div className=\"text-center\">\n      <h1 className=\"font-weight-light\">Start a conversation</h1>\n    </div>\n  </div>\n)\n\nconst ChatContent = ({match}) => {\n  return (\n    <Switch>\n      <Route path={`${match.url}/:id`} component={ Conversation } />\n      <Route path={`${match.url}`} component={ ConversationEmpty } />\n    </Switch>\n  )\n}\n\nexport default ChatContent","import React from 'react';\r\nimport PropTypes from 'prop-types'\r\nimport { Avatar } from 'antd';\r\n\r\nconst renderAvatar = props => {\r\n\treturn <Avatar {...props} className={`ant-avatar-${props.type}`}>{props.text}</Avatar>;\r\n}\r\n\r\nexport const AvatarStatus = props => {\r\n\tconst { name, suffix, subTitle, id, type, src, icon, size, shape, gap, text, onNameClick } = props\r\n\treturn (\r\n\t\t<div className=\"avatar-status d-flex align-items-center\">\r\n\t\t\t{ renderAvatar({ icon, src, type, size, shape, gap, text }) }\r\n\t\t\t<div className=\"ml-2\">\r\n\t\t\t\t<div>\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tonNameClick ? \r\n\t\t\t\t\t\t<div onClick={() => onNameClick({ name, subTitle, src, id })} className=\"avatar-status-name clickable\">{ name }</div> \r\n\t\t\t\t\t\t:\r\n\t\t\t\t\t\t<div className=\"avatar-status-name\">{ name }</div>\r\n\t\t\t\t\t}\r\n\t\t\t\t\t<span>{ suffix }</span>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className=\"text-muted avatar-status-subtitle\">{ subTitle }</div>\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t)\r\n}\r\n\r\nAvatarStatus.propTypes = {\r\n\tname: PropTypes.string,\r\n\tsrc: PropTypes.string,\r\n\ttype: PropTypes.string,\r\n\tonNameClick: PropTypes.func\r\n}\r\n\r\n\r\nexport default AvatarStatus;\r\n","import React, { useState } from 'react'\nimport ChatData from \"assets/data/chat.data.json\"\nimport { Badge } from 'antd';\nimport AvatarStatus from 'components/shared-components/AvatarStatus';\nimport { COLOR_1, COLOR_4 } from 'constants/ChartConstant';\nimport { useHistory } from \"react-router-dom\";\n\nconst ChatMenu = ({ match, location }) => {\n\tconst [ list, setList ] = useState(ChatData);\n\tlet history = useHistory();\n\tconst openChat = id => {\n\t\tconst data = list.map( elm => {\n\t\t\tif(elm.id === id) {\n\t\t\t\telm.unread = 0\n\t\t\t}\n\t\t\treturn elm\n\t\t})\n\t\tsetList(data)\n\t\thistory.push(`${match.url}/${id}`)\n\t}\n\n\tconst id = parseInt(location.pathname.match(/\\/([^/]+)\\/?$/)[1])\n\n\treturn (\n\t\t<div className=\"chat-menu\">\n\t\t\t<div className=\"chat-menu-list\">\n\t\t\t\t{\n\t\t\t\t\tlist.map( (item, i) => (\n\t\t\t\t\t\t<div \n\t\t\t\t\t\t\tkey={ `chat-item-${item.id}` } \n\t\t\t\t\t\t\tonClick={ () => openChat(item.id) } \n\t\t\t\t\t\t\tclassName={ `chat-menu-list-item ${ i === (list.length - 1)? 'last' : '' } ${ item.id === id ? 'selected' : '' }` }\n\t\t\t\t\t\t\tstyle={{ border: `1px solid ${COLOR_4}`, borderRadius: '4px', margin: '0 0 5px', paddingRight: '10px' }}\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\t<AvatarStatus src={ item.avatar } name={ item.name } subTitle={ item.msg[item.msg.length - 1].text } />\n\t\t\t\t\t\t\t<div className=\"text-right\">\n\t\t\t\t\t\t\t\t{ item.unread === 0 ? <span></span> : <Badge count={ item.unread } style={{ backgroundColor: COLOR_1, fontSize: '0.75rem' }} />}\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t))\n\t\t\t\t}\n\t\t\t</div>\n\t\t</div>\n\t)\n}\n\nexport default ChatMenu","import React, { useState } from 'react'\nimport { Button, Col, Input, Row, Typography, Select, Badge } from 'antd'\nimport { SearchOutlined, FilterOutlined } from '@ant-design/icons';\nimport InnerAppLayout from 'layouts/inner-app-layout';\nimport ChatContent from './ChatContent';\nimport ChatMenu from './ChatMenu';\nimport ChatData from \"assets/data/chat.data.json\"\n\nconst { Title } = Typography\nconst { Option } = Select\n\nconst Helpdesk = props => {\n\n    const [ list, setList ] = useState(ChatData);\n\n    const searchOnChange = e => {\n\t\tconst query = e.target.value;\n\t\tconst data = ChatData.filter(item => {\n\t\t\treturn query === '' ? item : item.name.toLowerCase().includes(query)\n\t\t})\n\t\tsetList(data)\n\t}\n\n\treturn (\n        <div>\n            <Row gutter={16} className=\"mb-2\">\n                <Col span={3} className=\"ml-2\">\n                    <Title level={ 2 }>Conversations</Title>\n                </Col>\n                <Col span={5}>\n                    <Input\n                        placeholder=\"Search\" \n                        onChange={ searchOnChange }\n                        prefix={\n                            <SearchOutlined />\n                        }\n                        style={{ height: '2rem', fontSize: '0.75rem', borderRadius: '10px' }}\n                    />\n                </Col>\n                <Col span={2}>\n                    <Button style={{ height: '2rem', paddingTop: '5px', backgroundColor: '#f7f1e3', fontSize: '0.75rem', border: 'transparent', borderRadius: '10px' }}>\n                        <FilterOutlined />\n                        Filter\n                    </Button>\n                </Col>\n                <Col span={2} offset={11}>\n                    <Select size=\"small\" defaultValue=\"online\" style={{ width: 100, fontSize: '0.75rem' }}>\n                        <Option value=\"online\"><Badge status=\"success\" />Online</Option>\n                        <Option value=\"offline\"><Badge status=\"error\" />Offline</Option>\n                    </Select>\n                </Col>\n            </Row>\n            <div className=\"chat\">\n                <InnerAppLayout \n                    sideContent={ <ChatMenu { ...props }/> }\n                    mainContent={ <ChatContent { ...props }/> }\n                    sideContentWidth={ 350 }\n                    sideContentGutter={ false }\n                    border\n                />\n            </div>\n        </div>\n\t)\n}\n\nexport default Helpdesk"],"sourceRoot":""}