{"version":3,"sources":["components/shared-components/Flex/index.js","redux/constants/Auth.js","redux/reducers/Auth.js","configs/AppConfig.js","constants/ThemeConstant.js","redux/reducers/Theme.js","redux/constants/Theme.js","redux/reducers/index.js","redux/sagas/Auth.js","redux/sagas/index.js","redux/store/index.js","components/util-components/IntlMessage/index.js","components/util-components/Icon/index.js","configs/NavigationConfig.js","redux/actions/Theme.js","components/layout-components/MenuContent.js","components/layout-components/SideNav.js","components/layout-components/TopNav.js","components/layout-components/Logo.js","components/layout-components/MobileNav.js","components/layout-components/NavProfile.js","components/layout-components/HeaderNav.js","components/layout-components/PageHeader.js","components/layout-components/Footer.js","components/shared-components/Loading/index.js","views/app-views/index.js","layouts/app-layout/index.js","views/auth-views/index.js","layouts/auth-layout/index.js","lang/index.js","lang/entries/en_US.js","views/index.js","App.js","serviceWorker.js","index.js","redux/actions/Auth.js","utils/index.js"],"names":["Flex","props","children","className","alignItems","justifyContent","mobileFlex","flexDirection","defaultProps","SIGNIN","AUTHENTICATED","SIGNOUT","SIGNOUT_SUCCESS","SIGNUP","SIGNUP_SUCCESS","SHOW_AUTH_MESSAGE","HIDE_AUTH_MESSAGE","SHOW_LOADING","AUTH_TOKEN","SIGNIN_WITH_GOOGLE","SIGNIN_WITH_GOOGLE_AUTHENTICATED","SIGNIN_WITH_FACEBOOK","SIGNIN_WITH_FACEBOOK_AUTHENTICATED","initState","loading","message","showMessage","redirect","token","localStorage","getItem","auth","state","action","type","THEME_CONFIG","navCollapsed","sideNavTheme","locale","navType","topNavColor","headerNavColor","mobileNav","initTheme","theme","reducers","combineReducers","Theme","Auth","signInWithFBEmail","signOut","signUpWithFBEmail","signInWithFBGoogle","signInWithFacebook","rootSaga","takeEvery","payload","email","password","call","FirebaseService","signInEmailRequest","user","put","showAuthMessage","setItem","uid","authenticated","signOutRequest","undefined","signOutUser","removeItem","signOutSuccess","signUpEmailRequest","signUpSuccess","signInGoogleRequest","signInWithGoogleAuthenticated","signInFacebookRequest","signInWithFacebookAuthenticated","all","fork","getState","sagaMiddleware","createSagaMiddleware","middlewares","store","preloadedState","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","createStore","applyMiddleware","run","configureStore","injectIntl","withRef","Icon","this","React","createElement","Component","dashBoardNavTree","key","path","title","icon","ClockCircleOutlined","breadcrumb","submenu","HomeOutlined","TeamOutlined","CommentOutlined","WalletOutlined","ShopOutlined","navigationConfig","onMobileNavToggle","SubMenu","Menu","useBreakpoint","Grid","setLocale","isLocaleOn","localeKey","id","toString","setDefaultOpen","keyList","keyString","arr","split","index","length","elm","push","SideNavContent","routeInfo","hideGroupTitle","localization","isMobile","utils","getBreakPoint","includes","closeMobileNav","mode","style","height","borderRight","background","defaultSelectedKeys","defaultOpenKeys","map","menu","ItemGroup","subMenuFirst","subMenuSecond","Item","onClick","to","TopNavContent","backgroundColor","popupClassName","connect","Sider","Layout","width","collapsed","autoHide","getColorContrast","getLogoWidthGutter","isNavTop","mobileLogo","getLogo","logoType","getLogoDisplay","src","alt","onClose","placement","closable","visible","bodyStyle","padding","ArrowLeftOutlined","menuItem","EditOutlined","SettingOutlined","profileMenu","el","i","href","legth","e","LogoutOutlined","overlay","trigger","Header","paddingLeft","PageHeader","display","Footer","Date","getFullYear","preventDefault","LoadingOutlined","fontSize","spin","Loading","align","cover","indicator","memo","fallback","component","lazy","from","Content","location","currentRouteInfo","getRouteInfo","pathname","isNavSide","AppViews","AuthLayout","AuthViews","AppLocale","en","antd","antdEnUS","messages","enMsg","RouteInterceptor","isAuthenticated","rest","render","withRouter","currentAppLocale","exact","App","Views","Boolean","hostname","match","ReactDOM","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","signIn","signInWithGoogle","hideAuthMessage","showLoading","Utils","name","initials","shift","pop","toUpperCase","navTree","route","p","hasOwnProperty","hex","cutHex","h","charAt","substring","parseInt","hexToG","hexToB","color","percent","R","G","B","RR","GG","BB","number","positive","negative","a","b","toLowerCase","list","value","data","filter","item","input","indexOf","searchText","screens","breakpoints"],"mappings":"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","file":"static/js/main.a22d7031.chunk.js","sourcesContent":["import React from 'react'\r\nimport PropTypes from 'prop-types'\r\n\r\nconst Flex = props => {\r\n\tconst { children, className, alignItems, justifyContent, mobileFlex, flexDirection } = props\r\n\tconst getFlexResponsive = () => mobileFlex ? 'd-flex' : 'd-md-flex'\r\n\treturn (\r\n\t\t<div className={`${getFlexResponsive()} ${className} ${flexDirection?('flex-' + flexDirection): ''} ${alignItems?('align-items-' + alignItems):''} ${justifyContent?('justify-content-' + justifyContent):''}` }>\r\n\t\t\t{children}\r\n\t\t</div>\r\n\t)\r\n}\r\n\r\nFlex.propTypes = {\r\n\tclassName: PropTypes.string,\r\n\talignItems: PropTypes.string,\r\n\tflexDirection: PropTypes.string,\r\n\tjustifyContent: PropTypes.string,\r\n\tmobileFlex: PropTypes.bool\r\n}\r\n\r\nFlex.defaultProps = {\r\n\tmobileFlex: true,\r\n\tflexDirection: 'row',\r\n\tclassName: ''\r\n};\r\n\r\n\r\nexport default Flex\r\n","export const SIGNIN = 'SIGNIN'; \r\nexport const AUTHENTICATED = 'AUTHENTICATED';\r\nexport const SIGNOUT = 'SIGNOUT';\r\nexport const SIGNOUT_SUCCESS = 'SIGNOUT_SUCCESS'\r\nexport const SIGNUP = 'SIGNUP';\r\nexport const SIGNUP_SUCCESS = 'SIGNUP_SUCCESS'\r\nexport const SHOW_AUTH_MESSAGE = 'SHOW_AUTH_MESSAGE'\r\nexport const HIDE_AUTH_MESSAGE = 'HIDE_AUTH_MESSAGE'\r\nexport const SHOW_LOADING = 'SHOW_LOADING'\r\nexport const AUTH_TOKEN = 'auth_token'\r\nexport const SIGNIN_WITH_GOOGLE = 'SIGNIN_WITH_GOOGLE'\r\nexport const SIGNIN_WITH_GOOGLE_AUTHENTICATED = 'SIGNIN_WITH_GOOGLE_AUTHENTICATED'\r\nexport const SIGNIN_WITH_FACEBOOK = 'SIGNIN_WITH_FACEBOOK'\r\nexport const SIGNIN_WITH_FACEBOOK_AUTHENTICATED = 'SIGNIN_WITH_FACEBOOK_AUTHENTICATED'","import {\r\n\tAUTH_TOKEN,\r\n\tAUTHENTICATED,\r\n\tSHOW_AUTH_MESSAGE,\r\n\tHIDE_AUTH_MESSAGE,\r\n\tSIGNOUT_SUCCESS,\r\n\tSIGNUP_SUCCESS,\r\n\tSHOW_LOADING,\r\n\tSIGNIN_WITH_GOOGLE_AUTHENTICATED,\r\n  SIGNIN_WITH_FACEBOOK_AUTHENTICATED\r\n} from '../constants/Auth';\r\n\r\nconst initState = {\r\n  loading: false,\r\n  message: '',\r\n  showMessage: false,\r\n  redirect: '',\r\n  token: localStorage.getItem(AUTH_TOKEN),\r\n}\r\n\r\nconst auth = (state = initState, action) => {\r\n\tswitch (action.type) {\r\n\t\tcase AUTHENTICATED:\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\tloading: false,\r\n\t\t\t\tredirect: '/',\r\n\t\t\t\ttoken: action.token\r\n\t\t\t}\r\n\t\tcase SHOW_AUTH_MESSAGE: \r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\tmessage: action.message,\r\n\t\t\t\tshowMessage: true,\r\n\t\t\t\tloading: false\r\n\t\t\t}\r\n\t\tcase HIDE_AUTH_MESSAGE: \r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\tmessage: '',\r\n\t\t\t\tshowMessage: false,\r\n\t\t\t}\r\n\t\tcase SIGNOUT_SUCCESS: {\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\ttoken: null,\r\n\t\t\t\tredirect: '/',\r\n\t\t\t\tloading: false\r\n\t\t\t}\r\n\t\t}\r\n\t\tcase SIGNUP_SUCCESS: {\r\n\t\t\treturn {\r\n\t\t\t  ...state,\r\n\t\t\t  loading: false,\r\n\t\t\t  token: action.token\r\n\t\t\t}\r\n\t\t}\r\n\t\tcase SHOW_LOADING: {\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\tloading: true\r\n\t\t\t}\r\n\t\t}\r\n\t\tcase SIGNIN_WITH_GOOGLE_AUTHENTICATED: {\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\tloading: false,\r\n\t\t\t\ttoken: action.token\r\n\t\t\t}\r\n\t\t}\r\n\t\tcase SIGNIN_WITH_FACEBOOK_AUTHENTICATED: {\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\tloading: false,\r\n\t\t\t\ttoken: action.token\r\n\t\t\t}\r\n\t\t}\r\n\t\tdefault:\r\n\t\t\treturn state;\r\n\t}\r\n}\r\n\r\nexport default auth","import { SIDE_NAV_LIGHT, NAV_TYPE_SIDE } from 'constants/ThemeConstant';\r\nimport { env } from './EnvironmentConfig'\r\n\r\nexport const APP_NAME = 'Twitter Helpdesk';\r\nexport const API_BASE_URL = env.API_ENDPOINT_URL\r\nexport const APP_PREFIX_PATH = '/app';\r\nexport const AUTH_PREFIX_PATH = '/auth';\r\n\r\nexport const THEME_CONFIG = {\r\n\tnavCollapsed: true,\r\n\tsideNavTheme: SIDE_NAV_LIGHT,\r\n\tlocale: 'en',\r\n\tnavType: NAV_TYPE_SIDE,\r\n\ttopNavColor: '#192a56',\r\n\theaderNavColor: '#ffffff',\r\n\tmobileNav: false\r\n};\r\n","export const ROW_GUTTER = 16;\r\nexport const SIDE_NAV_WIDTH = 250;\r\nexport const SIDE_NAV_COLLAPSED_WIDTH = 80;\r\nexport const SIDE_NAV_LIGHT = 'SIDE_NAV_LIGHT';\r\nexport const SIDE_NAV_DARK = 'SIDE_NAV_DARK';\r\nexport const NAV_TYPE_SIDE = 'SIDE'\r\nexport const NAV_TYPE_TOP = 'TOP'\r\n","import {\r\n  TOGGLE_COLLAPSED_NAV,\r\n  CHANGE_LOCALE,\r\n  SIDE_NAV_STYLE_CHANGE,\r\n  NAV_TYPE_CHANGE,\r\n  TOP_NAV_COLOR_CHANGE,\r\n  HEADER_NAV_COLOR_CHANGE,\r\n  TOGGLE_MOBILE_NAV\r\n} from '../constants/Theme';\r\nimport { THEME_CONFIG } from 'configs/AppConfig'\r\n\r\nconst initTheme = {...THEME_CONFIG};\r\n\r\nconst theme = (state = initTheme, action) => {\r\n  switch (action.type) {\r\n    case TOGGLE_COLLAPSED_NAV:\r\n      return {\r\n        ...state,\r\n        navCollapsed: action.navCollapsed\r\n      };\r\n    case SIDE_NAV_STYLE_CHANGE:\r\n      return {\r\n        ...state,\r\n        sideNavTheme: action.sideNavTheme\r\n      };\r\n    case CHANGE_LOCALE:\r\n      return {\r\n        ...state,\r\n        locale: action.locale\r\n      };\r\n    case NAV_TYPE_CHANGE:\r\n      return {\r\n        ...state,\r\n        navType: action.navType\r\n      };\r\n    case TOP_NAV_COLOR_CHANGE:\r\n      return {\r\n        ...state,\r\n        topNavColor: action.topNavColor\r\n      };\r\n    case HEADER_NAV_COLOR_CHANGE:\r\n      return {\r\n        ...state,\r\n        headerNavColor: action.headerNavColor\r\n      };\r\n    case TOGGLE_MOBILE_NAV:\r\n      return {\r\n        ...state,\r\n        mobileNav: action.mobileNav\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default theme","export const TOGGLE_COLLAPSED_NAV = 'TOGGLE_COLLAPSED_NAV';\r\nexport const CHANGE_LOCALE = 'CHANGE_LOCALE';\r\nexport const SIDE_NAV_STYLE_CHANGE = 'SIDE_NAV_STYLE_CHANGE';\r\nexport const NAV_TYPE_CHANGE = 'NAV_TYPE_CHANGE';\r\nexport const TOP_NAV_COLOR_CHANGE = 'TOP_NAV_COLOR_CHANGE';\r\nexport const HEADER_NAV_COLOR_CHANGE = 'HEADER_NAV_COLOR_CHANGE';\r\nexport const TOGGLE_MOBILE_NAV = 'TOGGLE_MOBILE_NAV'","import { combineReducers } from 'redux';\r\nimport Auth from './Auth';\r\nimport Theme from './Theme';\r\n\r\nconst reducers = combineReducers({\r\n    theme: Theme,\r\n    auth: Auth\r\n});\r\n\r\nexport default reducers;","import { all, takeEvery, put, fork, call } from 'redux-saga/effects';\r\nimport {\r\n\tAUTH_TOKEN,\r\n\tSIGNIN,\r\n\tSIGNOUT,\r\n\tSIGNUP,\r\n\tSIGNIN_WITH_GOOGLE,\r\n\tSIGNIN_WITH_FACEBOOK\r\n} from '../constants/Auth';\r\nimport {\r\n\tshowAuthMessage,\r\n\tauthenticated,\r\n\tsignOutSuccess,\r\n\tsignUpSuccess,\r\n\tsignInWithGoogleAuthenticated,\r\n\tsignInWithFacebookAuthenticated\r\n} from \"../actions/Auth\";\r\n\r\nimport FirebaseService from 'services/FirebaseService'\r\n\r\nexport function* signInWithFBEmail() {\r\n  yield takeEvery(SIGNIN, function* ({payload}) {\r\n\t\tconst {email, password} = payload;\r\n\t\ttry {\r\n\t\t\tconst user = yield call(FirebaseService.signInEmailRequest, email, password);\r\n\t\t\tif (user.message) {\r\n\t\t\t\tyield put(showAuthMessage(user.message));\r\n\t\t\t} else {\r\n\t\t\t\tlocalStorage.setItem(AUTH_TOKEN, user.user.uid);\r\n\t\t\t\tyield put(authenticated(user.user.uid));\r\n\t\t\t}\r\n\t\t} catch (err) {\r\n\t\t\tyield put(showAuthMessage(err));\r\n\t\t}\r\n\t});\r\n}\r\n\r\nexport function* signOut() {\r\n  yield takeEvery(SIGNOUT, function* () {\r\n\t\ttry {\r\n\t\t\tconst signOutUser = yield call(FirebaseService.signOutRequest);\r\n\t\t\tif (signOutUser === undefined) {\r\n\t\t\t\tlocalStorage.removeItem(AUTH_TOKEN);\r\n\t\t\t\tyield put(signOutSuccess(signOutUser));\r\n\t\t\t} else {\r\n\t\t\t\tyield put(showAuthMessage(signOutUser.message));\r\n\t\t\t}\r\n\t\t} catch (err) {\r\n\t\t\tyield put(showAuthMessage(err));\r\n\t\t}\r\n\t});\r\n}\r\n\r\nexport function* signUpWithFBEmail() {\r\n  yield takeEvery(SIGNUP, function* ({payload}) {\r\n\t\tconst {email, password} = payload;\r\n\t\ttry {\r\n\t\t\tconst user = yield call(FirebaseService.signUpEmailRequest, email, password);\r\n\t\t\tif (user.message) {\r\n\t\t\t\tyield put(showAuthMessage(user.message));\r\n\t\t\t} else {\r\n\t\t\t\tlocalStorage.setItem(AUTH_TOKEN, user.user.uid);\r\n\t\t\t\tyield put(signUpSuccess(user.user.uid));\r\n\t\t\t}\r\n\t\t} catch (error) {\r\n\t\t\tyield put(showAuthMessage(error));\r\n\t\t}\r\n\t}\r\n\t);\r\n}\r\n\r\nexport function* signInWithFBGoogle() {\r\n  yield takeEvery(SIGNIN_WITH_GOOGLE, function* () {\r\n\t\ttry {\r\n\t\t\tconst user = yield call(FirebaseService.signInGoogleRequest);\r\n\t\t\tif (user.message) {\r\n\t\t\t\tyield put(showAuthMessage(user.message));\r\n\t\t\t} else {\r\n\t\t\t\tlocalStorage.setItem(AUTH_TOKEN, user.user.uid);\r\n\t\t\t\tyield put(signInWithGoogleAuthenticated(user.user.uid));\r\n\t\t\t}\r\n\t\t} catch (error) {\r\n\t\t\tyield put(showAuthMessage(error));\r\n\t\t}\r\n\t});\r\n}\r\n\r\nexport function* signInWithFacebook() {\r\n  yield takeEvery(SIGNIN_WITH_FACEBOOK, function* () {\r\n\t\ttry {\r\n\t\t\tconst user = yield call(FirebaseService.signInFacebookRequest);\r\n\t\t\tif (user.message) {\r\n\t\t\t\tyield put(showAuthMessage(user.message));\r\n\t\t\t} else {\r\n\t\t\t\tlocalStorage.setItem(AUTH_TOKEN, user.user.uid);\r\n\t\t\t\tyield put(signInWithFacebookAuthenticated(user.user.uid));\r\n\t\t\t}\r\n\t\t} catch (error) {\r\n\t\t\tyield put(showAuthMessage(error));\r\n\t\t}\r\n\t});\r\n}\r\n\r\nexport default function* rootSaga() {\r\n  yield all([\r\n\t\tfork(signInWithFBEmail),\r\n\t\tfork(signOut),\r\n\t\tfork(signUpWithFBEmail),\r\n\t\tfork(signInWithFBGoogle),\r\n\t\tfork(signInWithFacebook)\r\n  ]);\r\n}\r\n","import { all } from 'redux-saga/effects';\r\nimport Auth from './Auth';\r\n\r\nexport default function* rootSaga(getState) {\r\n  yield all([\r\n    Auth(),\r\n  ]);\r\n}\r\n","import { createStore, applyMiddleware, compose } from \"redux\";\r\nimport reducers from \"../reducers\";\r\nimport createSagaMiddleware from \"redux-saga\";\r\nimport rootSaga from \"../sagas/index\";\r\n\r\nconst sagaMiddleware = createSagaMiddleware();\r\n\r\nconst middlewares = [sagaMiddleware];\r\n\r\nfunction configureStore(preloadedState) {\r\n\r\n  const composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\r\n  const store = createStore(reducers,  preloadedState, composeEnhancers(\r\n    applyMiddleware(...middlewares)\r\n  ));\r\n\r\n  sagaMiddleware.run(rootSaga);\r\n\r\n  if (module.hot) {\r\n    module.hot.accept(\"../reducers/index\", () => {\r\n      const nextRootReducer = require(\"../reducers/index\");\r\n      store.replaceReducer(nextRootReducer);\r\n    });\r\n  }\r\n\r\n  return store;\r\n}\r\n\r\nconst store = configureStore();\r\n\r\nexport default store;\r\n\r\n","import React from \"react\";\r\nimport { FormattedMessage, injectIntl } from \"react-intl\";\r\n\r\nconst IntlMessage = props => <FormattedMessage { ...props } />;\r\nexport default injectIntl(IntlMessage, {\r\n  withRef: false\r\n});\r\n","import React, { Component } from 'react'\r\n\r\nexport class Icon extends Component {\r\n\trender() {\r\n\t\tconst { type, className  } = this.props;\r\n\t\treturn (\r\n\t\t\t<>{React.createElement(type, { className: className })}</>\r\n\t\t)\r\n\t}\r\n}\r\n\r\nexport default Icon\r\n","import {\r\n  ClockCircleOutlined,\r\n  CommentOutlined,\r\n  HomeOutlined,\r\n  ShopOutlined,\r\n  TeamOutlined,\r\n  WalletOutlined,\r\n} from '@ant-design/icons';\r\nimport { APP_PREFIX_PATH } from 'configs/AppConfig'\r\n\r\nconst dashBoardNavTree = [\r\n  {\r\n    key: 'previous-history',\r\n    path: `${APP_PREFIX_PATH}/previous-history`,\r\n    title: 'History',\r\n    icon: ClockCircleOutlined,\r\n    breadcrumb: false,\r\n    submenu: []\r\n  },\r\n  {\r\n    key: 'home',\r\n    path: `${APP_PREFIX_PATH}/home`,\r\n    title: 'Home',\r\n    icon: HomeOutlined,\r\n    breadcrumb: false,\r\n    submenu: []\r\n  },\r\n  {\r\n    key: 'teams',\r\n    path: `${APP_PREFIX_PATH}/teams`,\r\n    title: 'Teams',\r\n    icon: TeamOutlined,\r\n    breadcrumb: false,\r\n    submenu: []\r\n  },\r\n  {\r\n    key: 'helpdesk',\r\n    path: `${APP_PREFIX_PATH}/helpdesk`,\r\n    title: 'Help Desk',\r\n    icon: CommentOutlined,\r\n    breadcrumb: false,\r\n    submenu: []\r\n  },\r\n  {\r\n    key: 'wallet',\r\n    path: `${APP_PREFIX_PATH}/wallet`,\r\n    title: 'Wallet',\r\n    icon: WalletOutlined,\r\n    breadcrumb: false,\r\n    submenu: []\r\n  },\r\n  {\r\n    key: 'oneline-shop',\r\n    path: `${APP_PREFIX_PATH}/online-shop`,\r\n    title: 'Shop',\r\n    icon: ShopOutlined,\r\n    breadcrumb: false,\r\n    submenu: []\r\n  }\r\n]\r\n\r\nconst navigationConfig = [\r\n  ...dashBoardNavTree\r\n]\r\n\r\nexport default navigationConfig;\r\n","import {\r\n  TOGGLE_COLLAPSED_NAV,\r\n  SIDE_NAV_STYLE_CHANGE,\r\n  CHANGE_LOCALE,\r\n  NAV_TYPE_CHANGE,\r\n  TOP_NAV_COLOR_CHANGE,\r\n  HEADER_NAV_COLOR_CHANGE,\r\n  TOGGLE_MOBILE_NAV\r\n} from '../constants/Theme';\r\n\r\nexport function toggleCollapsedNav(navCollapsed) {\r\n  return {\r\n    type: TOGGLE_COLLAPSED_NAV,\r\n    navCollapsed\r\n  };\r\n}\r\n\r\nexport function onNavStyleChange(sideNavTheme) {\r\n  return {\r\n    type: SIDE_NAV_STYLE_CHANGE,\r\n    sideNavTheme\r\n  };\r\n}\r\n\r\nexport function onLocaleChange(locale) {\r\n  return {\r\n    type: CHANGE_LOCALE,\r\n    locale\r\n  };\r\n}\r\n\r\nexport function onNavTypeChange(navType) {\r\n  return {\r\n    type: NAV_TYPE_CHANGE,\r\n    navType\r\n  };\r\n}\r\n\r\nexport function onTopNavColorChange(topNavColor) {\r\n  return {\r\n    type: TOP_NAV_COLOR_CHANGE,\r\n    topNavColor\r\n  };\r\n}\r\n\r\nexport function onHeaderNavColorChange(headerNavColor) {\r\n  return {\r\n    type: HEADER_NAV_COLOR_CHANGE,\r\n    headerNavColor\r\n  };\r\n}\r\n\r\nexport function onMobileNavToggle(mobileNav) {\r\n  return {\r\n    type: TOGGLE_MOBILE_NAV,\r\n    mobileNav\r\n  };\r\n}\r\n","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { Menu, Grid } from \"antd\";\r\nimport IntlMessage from \"../util-components/IntlMessage\";\r\nimport Icon from \"../util-components/Icon\";\r\nimport navigationConfig from \"configs/NavigationConfig\";\r\nimport { connect } from \"react-redux\";\r\nimport { SIDE_NAV_LIGHT, NAV_TYPE_SIDE } from \"constants/ThemeConstant\";\r\nimport utils from 'utils'\r\nimport { onMobileNavToggle } from \"redux/actions/Theme\";\r\n\r\nconst { SubMenu } = Menu;\r\nconst { useBreakpoint } = Grid;\r\n\r\nconst setLocale = (isLocaleOn, localeKey) =>\r\n  isLocaleOn ? <IntlMessage id={localeKey} /> : localeKey.toString();\r\n\r\nconst setDefaultOpen = (key) => {\r\n  let keyList = [];\r\n  let keyString = \"\";\r\n  if (key) {\r\n    const arr = key.split(\"-\");\r\n    for (let index = 0; index < arr.length; index++) {\r\n      const elm = arr[index];\r\n      index === 0 ? (keyString = elm) : (keyString = `${keyString}-${elm}`);\r\n      keyList.push(keyString);\r\n    }\r\n  }\r\n  return keyList;\r\n};\r\n\r\nconst SideNavContent = (props) => {\r\n\tconst { sideNavTheme, routeInfo, hideGroupTitle, localization, onMobileNavToggle } = props;\r\n\tconst isMobile = !utils.getBreakPoint(useBreakpoint()).includes('lg')\r\n\tconst closeMobileNav = () => {\r\n\t\tif (isMobile) {\r\n\t\t\tonMobileNavToggle(false)\r\n\t\t}\r\n\t}\r\n  return (\r\n    <Menu\r\n      theme={ sideNavTheme === SIDE_NAV_LIGHT ? \"light\" : \"dark\" }\r\n      mode=\"inline\"\r\n      style={{ height: \"100%\", borderRight: 0, background: '#f7f1e3' }}\r\n      defaultSelectedKeys={[routeInfo?.key]}\r\n      defaultOpenKeys={setDefaultOpen(routeInfo?.key)}\r\n      className={ hideGroupTitle ? \"hide-group-title\" : \"\" }\r\n    >\r\n      { navigationConfig.map((menu) =>\r\n        menu.submenu.length > 0 ? (\r\n          <Menu.ItemGroup\r\n            key={menu.key}\r\n            title={setLocale(localization, menu.title)}\r\n          >\r\n            {menu.submenu.map((subMenuFirst) =>\r\n              subMenuFirst.submenu.length > 0 ? (\r\n                <SubMenu\r\n                  icon={\r\n                    subMenuFirst.icon ? (\r\n                      <Icon type={subMenuFirst?.icon} />\r\n                    ) : null\r\n                  }\r\n                  key={subMenuFirst.key}\r\n                  title={setLocale(localization, subMenuFirst.title)}\r\n                >\r\n                  {subMenuFirst.submenu.map((subMenuSecond) => (\r\n                    <Menu.Item key={subMenuSecond.key}>\r\n                      {subMenuSecond.icon ? (\r\n                        <Icon type={subMenuSecond?.icon} />\r\n                      ) : null}\r\n                      <span>\r\n                        {setLocale(localization, subMenuSecond.title)}\r\n                      </span>\r\n                      <Link onClick={() => closeMobileNav()} to={subMenuSecond.path} />\r\n                    </Menu.Item>\r\n                  ))}\r\n                </SubMenu>\r\n              ) : (\r\n                <Menu.Item key={subMenuFirst.key}>\r\n                  {subMenuFirst.icon ? <Icon type={subMenuFirst.icon} /> : null}\r\n                  <span>{setLocale(localization, subMenuFirst.title)}</span>\r\n                  <Link onClick={() => closeMobileNav()} to={subMenuFirst.path} />\r\n                </Menu.Item>\r\n              )\r\n            )}\r\n          </Menu.ItemGroup>\r\n        ) : (\r\n          <Menu.Item key={menu.key}>\r\n            {menu.icon ? <Icon type={menu?.icon} /> : null}\r\n            <span>{setLocale(localization, menu?.title)}</span>\r\n            {menu.path ? <Link onClick={() => closeMobileNav()} to={menu.path} /> : null}\r\n          </Menu.Item>\r\n        )\r\n      )}\r\n    </Menu>\r\n  );\r\n};\r\n\r\nconst TopNavContent = (props) => {\r\n  const { topNavColor, localization } = props;\r\n  return (\r\n    <Menu mode=\"horizontal\" style={{ backgroundColor: topNavColor }}>\r\n      {navigationConfig.map((menu) =>\r\n        menu.submenu.length > 0 ? (\r\n          <SubMenu\r\n            key={menu.key}\r\n            popupClassName=\"top-nav-menu\"\r\n            title={\r\n              <span>\r\n                {menu.icon ? <Icon type={menu?.icon} /> : null}\r\n                <span>{setLocale(localization, menu.title)}</span>\r\n              </span>\r\n            }\r\n          >\r\n            {menu.submenu.map((subMenuFirst) =>\r\n              subMenuFirst.submenu.length > 0 ? (\r\n                <SubMenu\r\n                  key={subMenuFirst.key}\r\n                  icon={\r\n                    subMenuFirst.icon ? (\r\n                      <Icon type={subMenuFirst?.icon} />\r\n                    ) : null\r\n                  }\r\n                  title={setLocale(localization, subMenuFirst.title)}\r\n                >\r\n                  {subMenuFirst.submenu.map((subMenuSecond) => (\r\n                    <Menu.Item key={subMenuSecond.key}>\r\n                      <span>\r\n                        {setLocale(localization, subMenuSecond.title)}\r\n                      </span>\r\n                      <Link to={subMenuSecond.path} />\r\n                    </Menu.Item>\r\n                  ))}\r\n                </SubMenu>\r\n              ) : (\r\n                <Menu.Item key={subMenuFirst.key}>\r\n                  {subMenuFirst.icon ? (\r\n                    <Icon type={subMenuFirst?.icon} />\r\n                  ) : null}\r\n                  <span>{setLocale(localization, subMenuFirst.title)}</span>\r\n                  <Link to={subMenuFirst.path} />\r\n                </Menu.Item>\r\n              )\r\n            )}\r\n          </SubMenu>\r\n        ) : (\r\n          <Menu.Item key={menu.key}>\r\n            {menu.icon ? <Icon type={menu?.icon} /> : null}\r\n            <span>{setLocale(localization, menu?.title)}</span>\r\n            {menu.path ? <Link to={menu.path} /> : null}\r\n          </Menu.Item>\r\n        )\r\n      )}\r\n    </Menu>\r\n  );\r\n};\r\n\r\nconst MenuContent = (props) => {\r\n  return props.type === NAV_TYPE_SIDE ? (\r\n    <SideNavContent {...props} />\r\n  ) : (\r\n    <TopNavContent {...props} />\r\n  );\r\n};\r\n\r\nconst mapStateToProps = ({ theme }) => {\r\n  const { sideNavTheme, topNavColor } = theme;\r\n  return { sideNavTheme, topNavColor };\r\n};\r\n\r\nexport default connect(mapStateToProps, { onMobileNavToggle })(MenuContent);\r\n","import React from \"react\";\r\nimport { Layout } from 'antd';\r\nimport { connect } from 'react-redux';\r\nimport { SIDE_NAV_WIDTH, SIDE_NAV_DARK, NAV_TYPE_SIDE } from 'constants/ThemeConstant';\r\nimport { Scrollbars } from 'react-custom-scrollbars';\r\nimport MenuContent from './MenuContent'\r\n\r\nconst { Sider } = Layout;\r\n\r\nexport const SideNav = ({ navCollapsed, sideNavTheme, routeInfo, hideGroupTitle, localization = true }) => {\r\n  const props = { sideNavTheme, routeInfo , hideGroupTitle, localization}\r\n  return (\r\n    <Sider \r\n      className={ `side-nav ${ sideNavTheme === SIDE_NAV_DARK ? 'side-nav-dark' : '' }` } \r\n      width={ SIDE_NAV_WIDTH } \r\n      collapsed={ navCollapsed }\r\n      style={{ background: '#f7f1e3'}}\r\n    >\r\n      <Scrollbars autoHide>\r\n        <MenuContent\r\n          type={ NAV_TYPE_SIDE } \r\n          { ...props }\r\n        />\r\n      </Scrollbars>\r\n    </Sider>\r\n  )\r\n}\r\n\r\nconst mapStateToProps = ({ theme }) => {\r\n  const { navCollapsed, sideNavTheme } =  theme;\r\n  return { navCollapsed, sideNavTheme }\r\n};\r\n\r\nexport default connect(mapStateToProps)(SideNav);\r\n","import React from 'react'\r\nimport { connect } from 'react-redux';\r\nimport { NAV_TYPE_TOP } from 'constants/ThemeConstant';\r\nimport utils from 'utils'\r\nimport MenuContent from './MenuContent'\r\n\r\nexport const TopNav = ({ topNavColor, localization = true }) => {\r\n\tconst props = { topNavColor, localization }\r\n\treturn (\r\n\t\t<div className={`top-nav ${utils.getColorContrast(topNavColor)}`} style={{ backgroundColor: topNavColor }}>\r\n\t\t\t<div className=\"top-nav-wrapper\">\r\n\t\t\t\t<MenuContent\r\n\t\t\t\t\ttype={ NAV_TYPE_TOP } \r\n\t\t\t\t\t{ ...props }\r\n\t\t\t\t/>\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t)\r\n}\r\n\r\nconst mapStateToProps = ({ theme }) => {\r\n  const { topNavColor } =  theme;\r\n  return { topNavColor }\r\n};\r\n\r\nexport default connect(mapStateToProps)(TopNav);\r\n","import React from 'react'\r\nimport { SIDE_NAV_WIDTH, SIDE_NAV_COLLAPSED_WIDTH, NAV_TYPE_TOP } from 'constants/ThemeConstant';\r\nimport { APP_NAME } from 'configs/AppConfig';\r\nimport { connect } from \"react-redux\";\r\nimport utils from 'utils';\r\nimport { Grid } from 'antd';\r\n\r\nconst { useBreakpoint } = Grid;\r\n\r\nconst getLogoWidthGutter = (props, isMobile) => {\r\n  const { navCollapsed, navType } = props;\r\n  const isNavTop = navType === NAV_TYPE_TOP ? true : false\r\n  if(isMobile && !props.mobileLogo) {\r\n    return 0\r\n  }\r\n  if(isNavTop) {\r\n    return 'auto'\r\n  }\r\n  if(navCollapsed) {\r\n    return `${SIDE_NAV_COLLAPSED_WIDTH}px`\r\n  } else {\r\n    return `${SIDE_NAV_WIDTH}px`\r\n  }\r\n}\r\n\r\nconst getLogo = (props) => {\r\n  const { navCollapsed, logoType } = props;\r\n  if (logoType === 'light') {\r\n    if (navCollapsed) {\r\n      return 'red-diamond.png'\r\n    }\r\n    return 'red-diamond.png'\r\n  } \r\n\r\n  \r\n  if (navCollapsed) {\r\n    return 'red-diamond.png'\r\n  }\r\n  return 'red-diamond.png'\r\n}\r\n\r\nconst getLogoDisplay = (isMobile, mobileLogo) => {\r\n  if(isMobile && !mobileLogo) {\r\n    return 'd-none'\r\n  } else {\r\n    return 'logo'\r\n  }\r\n}\r\n\r\nexport const Logo = (props) => {\r\n  const isMobile = !utils.getBreakPoint(useBreakpoint()).includes('lg')\r\n  return (\r\n    <div\r\n      className={getLogoDisplay(isMobile, props.mobileLogo)} \r\n      style={{ width: `${getLogoWidthGutter(props, isMobile)}` }}>\r\n        <img src={getLogo(props)} alt={`${APP_NAME} logo`} style={{ width: props.navCollapsed ? '40px' : '40px' }} />\r\n    </div>\r\n  )\r\n}\r\n\r\nconst mapStateToProps = ({ theme }) => {\r\n  const { navCollapsed, navType } =  theme;\r\n  return { navCollapsed, navType }\r\n};\r\n\r\nexport default connect(mapStateToProps)(Logo);","import React from \"react\";\r\nimport { Drawer } from \"antd\";\r\nimport { connect } from \"react-redux\";\r\nimport { NAV_TYPE_SIDE } from \"constants/ThemeConstant\";\r\nimport { Scrollbars } from \"react-custom-scrollbars\";\r\nimport MenuContent from \"./MenuContent\";\r\nimport { onMobileNavToggle } from \"redux/actions/Theme\";\r\nimport Logo from \"./Logo\";\r\nimport Flex from \"components/shared-components/Flex\";\r\nimport { ArrowLeftOutlined } from \"@ant-design/icons\";\r\n\r\nexport const MobileNav = ({\r\n  sideNavTheme,\r\n  mobileNav,\r\n  onMobileNavToggle,\r\n  routeInfo,\r\n  hideGroupTitle,\r\n  localization = true,\r\n}) => {\r\n  const props = { sideNavTheme, routeInfo, hideGroupTitle, localization };\r\n\r\n  const onClose = () => {\r\n    onMobileNavToggle(false);\r\n  };\r\n\r\n  return (\r\n    <Drawer\r\n      placement=\"left\"\r\n      closable={false}\r\n      onClose={onClose}\r\n      visible={mobileNav}\r\n      bodyStyle={{ padding: 5 }}\r\n    >\r\n      <Flex flexDirection=\"column\" className=\"h-100\">\r\n        <Flex justifyContent=\"between\" alignItems=\"center\">\r\n          <Logo mobileLogo={true} />\r\n          <div className=\"nav-close\" onClick={() => onClose()}>\r\n            <ArrowLeftOutlined />\r\n          </div>\r\n        </Flex>\r\n        <div className=\"mobile-nav-menu\">\r\n          <Scrollbars autoHide>\r\n            <MenuContent type={NAV_TYPE_SIDE} {...props} />\r\n          </Scrollbars>\r\n        </div>\r\n      </Flex>\r\n    </Drawer>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = ({ theme }) => {\r\n  const { navCollapsed, sideNavTheme, mobileNav } = theme;\r\n  return { navCollapsed, sideNavTheme, mobileNav };\r\n};\r\n\r\nexport default connect(mapStateToProps, { onMobileNavToggle })(MobileNav);\r\n","import React from \"react\";\nimport { Menu, Dropdown, Avatar } from \"antd\";\nimport { Link } from 'react-router-dom'\nimport { connect } from 'react-redux'\nimport { \n  EditOutlined, \n  SettingOutlined, \n  ShopOutlined, \n  QuestionCircleOutlined, \n  LogoutOutlined \n} from '@ant-design/icons';\nimport Icon from 'components/util-components/Icon';\nimport { signOut } from 'redux/actions/Auth';\n\nconst menuItem = [\n\t{\n\t\ttitle: \"Edit Profile\",\n\t\ticon: EditOutlined ,\n\t\tpath: \"/\"\n    },\n    \n    {\n\t\ttitle: \"Account Setting\",\n\t\ticon: SettingOutlined,\n\t\tpath: \"/\"\n    }\n]\n\nexport const NavProfile = ({signOut}) => {\n    const profileImg = \"/img/avatars/thumb-1.jpg\";\n    const profileMenu = (\n        <div className=\"nav-profile nav-dropdown\">\n        <div className=\"nav-profile-header\">\n            <div className=\"d-flex\">\n            <img src=\"red-diamond.png\" style={{ height: 45 }} />\n            <div className=\"pl-3\">\n                <h4 className=\"mb-0\">Dhruva Agrawal</h4>\n                <span className=\"text-muted\">Agent</span>\n            </div>\n            </div>\n        </div>\n        <div className=\"nav-profile-body\">\n            <Menu>\n            {menuItem.map((el, i) => {\n                return (\n                <Menu.Item key={i}>\n                    <a href={el.path}>\n                    <Icon className=\"mr-3\" type={el.icon} />\n                    <span className=\"font-weight-normal\">{el.title}</span>\n                    </a>\n                </Menu.Item>\n                );\n            })}\n            <Menu.Item key={menuItem.legth + 1} onClick={e => signOut()}>\n                <span>\n                <LogoutOutlined className=\"mr-3\"/>\n                <span className=\"font-weight-normal\">Sign Out</span>\n                </span>\n            </Menu.Item>\n            </Menu>\n        </div>\n        </div>\n    )\n    return (\n        <Dropdown placement=\"bottomRight\" overlay={profileMenu} trigger={[\"click\"]}>\n            <Menu className=\"d-flex align-item-center\" mode=\"horizontal\">\n                <Menu.Item>\n                    <Link to=\"#\"><p className=\"ml-4 mr-4\">User: Dhruva Agrawal</p></Link> \n                </Menu.Item>\n            </Menu>\n        </Dropdown>\n    )\n}\n\nexport default connect(null, {signOut})(NavProfile)","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { Link } from 'react-router-dom'\r\nimport { Layout } from \"antd\";\r\nimport Logo from './Logo';\r\nimport { NAV_TYPE_TOP, SIDE_NAV_COLLAPSED_WIDTH, SIDE_NAV_WIDTH } from 'constants/ThemeConstant';\r\nimport utils from 'utils'\r\nimport NavProfile from './NavProfile'\r\n\r\nconst { Header } = Layout;\r\n\r\nexport const HeaderNav = props => {\r\n  const { navCollapsed, navType, headerNavColor, isMobile } = props;\r\n\r\n  const isNavTop = navType === NAV_TYPE_TOP ? true : false\r\n  const mode = utils.getColorContrast(headerNavColor)\r\n  const getNavWidth = () => {\r\n    if(isNavTop || isMobile) {\r\n      return '0px'\r\n    }\r\n    if(navCollapsed) {\r\n      return `${SIDE_NAV_COLLAPSED_WIDTH}px`\r\n    } else {\r\n      return `${SIDE_NAV_WIDTH}px`\r\n    }\r\n  }\r\n\r\n  return (\r\n    <Header className={`app-header ${mode}`} style={{ background: '#f7f1e3' }} >\r\n      <div className={ `app-header-wrapper ${ isNavTop ? 'layout-top-nav' : '' }` }>\r\n        <Logo logoType={ mode } />\r\n        <div className=\"nav\" style={{ width: `calc(100% - ${ getNavWidth() })`}}>\r\n        <div className=\"nav-left mt-4 ml-4\" style={{ paddingLeft: '10px' }}>\r\n            <Link to=\"#\"><p>Updates</p></Link>\r\n          </div>\r\n          <div className=\"nav-right mt-4\">\r\n            <Link to=\"#\"><p>Session: 34 minutes</p></Link>\r\n            <NavProfile />\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </Header>\r\n  )\r\n}\r\n\r\nconst mapStateToProps = ({ theme }) => {\r\n  const { navCollapsed, navType, headerNavColor, mobileNav } =  theme;\r\n  return { navCollapsed, navType, headerNavColor, mobileNav }\r\n};\r\n\r\nexport default connect(mapStateToProps)(HeaderNav);","import React from 'react'\nimport IntlMessage from '../util-components/IntlMessage';\n\nexport const PageHeader = ({ title, display }) => {\n\treturn (\n\t\tdisplay ? (\n\t\t\t<div className=\"app-page-header\">\n\t\t\t\t<h3 className=\"mb-0 mr-3 font-weight-semibold\">\n\t\t\t\t\t<IntlMessage id={title? title : 'home'} />\n\t\t\t\t</h3>\n\t\t\t</div>\n\t\t)\n\t\t: null\n\t)\n}\n\nexport default PageHeader","import React from 'react'\nimport { APP_NAME } from 'configs/AppConfig';\n\nexport default function Footer() {\n\treturn (\n\t\t<footer className=\"footer\">\n\t\t\t<span>Copyright  &copy;  {`${new Date().getFullYear()}`} <span className=\"font-weight-semibold\">{`${APP_NAME}`}</span> All rights reserved.</span>\n\t\t\t<div>\n\t\t\t\t<a className=\"text-gray\" href=\"/#\" onClick={e => e.preventDefault()}>Term & Conditions</a>\n\t\t\t\t<span className=\"mx-2 text-muted\"> | </span>\n\t\t\t\t<a className=\"text-gray\" href=\"/#\" onClick={e => e.preventDefault()}>Privacy & Policy</a>\n\t\t\t</div>\n\t\t</footer>\n\t)\n}\n\n","import React from 'react';\r\nimport { Spin } from 'antd';\r\nimport PropTypes from 'prop-types'\r\nimport { LoadingOutlined } from '@ant-design/icons';\r\n\r\nconst Icon = <LoadingOutlined style={{ fontSize: 35 }} spin />\r\n\r\nconst Loading = (props) => {\r\n\tconst { align, cover } = props\r\n\treturn (\r\n\t\t<div className={`loading text-${align} cover-${cover}`}>\r\n\t\t\t<Spin indicator={Icon} />\r\n\t\t</div>\r\n\t)\r\n}\r\n\r\nLoading.propTypes = {\r\n\tsize: PropTypes.string,\r\n\tcover: PropTypes.string\r\n}\r\n\r\nLoading.defaultProps = {\r\n\talign: 'center',\r\n\tcover: 'inline'\r\n};\r\n\r\nexport default Loading","import React, { lazy, Suspense, useState } from \"react\";\r\nimport { Switch, Route, Redirect } from \"react-router-dom\";\r\nimport Loading from 'components/shared-components/Loading';\r\nimport { APP_PREFIX_PATH } from 'configs/AppConfig'\r\n\r\nexport const AppViews = () => {\r\n  return (\r\n    <Suspense fallback={<Loading cover=\"content\" />}>\r\n      <Switch>\r\n        <Route path={`${APP_PREFIX_PATH}/helpdesk`} component={lazy(() => import(`./helpdesk`))} />\r\n        <Redirect from={`${APP_PREFIX_PATH}`} to={`${APP_PREFIX_PATH}/helpdesk`} />\r\n      </Switch>\r\n    </Suspense>\r\n  )\r\n}\r\n\r\nexport default React.memo(AppViews);","import React from 'react';\r\nimport { Layout, Grid } from 'antd';\r\nimport { connect } from 'react-redux';\r\nimport SideNav from 'components/layout-components/SideNav';\r\nimport TopNav from 'components/layout-components/TopNav';\r\nimport MobileNav from 'components/layout-components/MobileNav'\r\nimport HeaderNav from 'components/layout-components/HeaderNav';\r\nimport PageHeader from 'components/layout-components/PageHeader';\r\nimport Footer from 'components/layout-components/Footer';\r\nimport AppViews from 'views/app-views';\r\nimport navigationConfig from \"configs/NavigationConfig\";\r\nimport { \r\n  SIDE_NAV_WIDTH, \r\n  SIDE_NAV_COLLAPSED_WIDTH,\r\n  NAV_TYPE_SIDE,\r\n  NAV_TYPE_TOP\r\n} from 'constants/ThemeConstant';\r\nimport utils from 'utils';\r\n\r\nconst { Content } = Layout;\r\nconst { useBreakpoint } = Grid;\r\n\r\nexport const AppLayout = ({ navCollapsed, navType, location }) => {\r\n  const currentRouteInfo = utils.getRouteInfo(navigationConfig, location.pathname)\r\n  const screens = utils.getBreakPoint(useBreakpoint());\r\n  const isMobile = !screens.includes('lg')\r\n  const isNavSide = navType === NAV_TYPE_SIDE\r\n  const isNavTop = navType === NAV_TYPE_TOP\r\n  const getLayoutGutter = () => {\r\n    if(isNavTop || isMobile) {\r\n      return 0\r\n    }\r\n    return navCollapsed ? SIDE_NAV_COLLAPSED_WIDTH : SIDE_NAV_WIDTH\r\n  }\r\n  return (\r\n    <Layout>\r\n      <HeaderNav isMobile={isMobile}/>\r\n      {(isNavTop && !isMobile) ? <TopNav routeInfo={currentRouteInfo}/> : null}\r\n      <Layout className=\"app-container\">\r\n        {(isNavSide && !isMobile) ? <SideNav routeInfo={currentRouteInfo}/> : null }\r\n        <Layout className=\"app-layout\" style={{paddingLeft: getLayoutGutter()}}>\r\n          <div className={`app-content ${isNavTop ? 'layout-top-nav' : ''}`}>\r\n            <PageHeader display={currentRouteInfo?.breadcrumb} title={currentRouteInfo?.title} />\r\n            <Content>\r\n              <AppViews />\r\n            </Content>\r\n          </div>\r\n          <Footer />\r\n        </Layout>\r\n      </Layout>\r\n      {isMobile && <MobileNav />}\r\n    </Layout>\r\n  )\r\n}\r\n\r\nconst mapStateToProps = ({ theme }) => {\r\n  const { navCollapsed, navType, locale } =  theme;\r\n  return { navCollapsed, navType, locale }\r\n};\r\n\r\nexport default connect(mapStateToProps)(React.memo(AppLayout));","import React, { lazy, Suspense } from \"react\";\r\nimport { Switch, Route, Redirect } from \"react-router-dom\";\r\nimport Loading from 'components/shared-components/Loading';\r\nimport { AUTH_PREFIX_PATH } from 'configs/AppConfig'\r\n\r\nexport const AppViews = () => {\r\n  return (\r\n    <Suspense fallback={<Loading cover=\"page\"/>}>\r\n      <Switch>\r\n        <Route path={`${AUTH_PREFIX_PATH}/login`} component={lazy(() => import(`./authentication/login`))} />\r\n        <Redirect from={`${AUTH_PREFIX_PATH}`} to={`${AUTH_PREFIX_PATH}/login`} />\r\n      </Switch>\r\n    </Suspense>\r\n  )\r\n}\r\n\r\nexport default AppViews;\r\n\r\n","import React from 'react'\r\nimport { Switch, Route, } from \"react-router-dom\";\r\nimport AuthViews from 'views/auth-views'\r\n\r\nexport const AuthLayout = () => {\r\n\treturn (\r\n\t\t<div className=\"auth-container\">\r\n\t\t\t<Switch>\r\n\t\t\t\t<Route path=\"\" component={ AuthViews } />\r\n\t\t\t</Switch>\r\n\t\t</div>\r\n\t)\r\n}\r\n\r\n\r\nexport default AuthLayout\r\n","import enLang from './entries/en_US';\r\n\r\nconst AppLocale = {\r\n    en: enLang,\r\n};\r\n\r\nexport default AppLocale;","import antdEnUS from 'antd/es/locale/en_US';\r\nimport enMsg from \"../locales/en_US.json\";\r\n\r\nconst EnLang = {\r\n  antd: antdEnUS,\r\n  locale: 'en-US',\r\n  messages: {\r\n    ...enMsg\r\n  },\r\n};\r\nexport default EnLang;\r\n","import React from \"react\";\r\nimport { Route, Switch, Redirect, withRouter } from \"react-router-dom\";\r\nimport { connect } from \"react-redux\";\r\nimport AppLayout from \"layouts/app-layout\";\r\nimport AuthLayout from 'layouts/auth-layout';\r\nimport AppLocale from \"lang\";\r\nimport { IntlProvider } from \"react-intl\";\r\nimport { ConfigProvider } from 'antd';\r\nimport { APP_PREFIX_PATH, AUTH_PREFIX_PATH } from 'configs/AppConfig'\r\n\r\nfunction RouteInterceptor({ children, isAuthenticated, ...rest }) {\r\n  return (\r\n    <Route\r\n      {...rest}\r\n      render={({ location }) =>\r\n        isAuthenticated ? (\r\n          children\r\n        ) : (\r\n          <Redirect\r\n            to={{\r\n              pathname: AUTH_PREFIX_PATH,\r\n              state: { from: location }\r\n            }}\r\n          />\r\n        )\r\n      }\r\n    />\r\n  );\r\n}\r\n\r\nexport const Views = (props) => {\r\n  const { locale, token, location } = props;\r\n  const currentAppLocale = AppLocale[locale];\r\n  return (\r\n    <IntlProvider\r\n      locale={ currentAppLocale.locale }\r\n      messages={ currentAppLocale.messages }>\r\n      <ConfigProvider locale={ currentAppLocale.antd }>\r\n        <Switch>\r\n          <Route exact path=\"/\">\r\n            <Redirect to={ APP_PREFIX_PATH } />\r\n          </Route>\r\n          <Route path={ AUTH_PREFIX_PATH }>\r\n            <AuthLayout />\r\n          </Route>\r\n          <RouteInterceptor path={ APP_PREFIX_PATH } isAuthenticated={ token }>\r\n            <AppLayout location={ location }/>\r\n          </RouteInterceptor>\r\n        </Switch>\r\n      </ConfigProvider>\r\n    </IntlProvider>\r\n  )\r\n}\r\n\r\n\r\nconst mapStateToProps = ({ theme, auth }) => {\r\n  const { locale } =  theme;\r\n  const { token } = auth;\r\n  return { locale, token }\r\n};\r\n\r\nexport default withRouter(connect(mapStateToProps)(Views));","import React from 'react';\r\nimport { Provider } from 'react-redux';\r\nimport store from './redux/store';\r\nimport { HashRouter as Router } from 'react-router-dom';\r\nimport Views from './views';\r\nimport { Route, Switch } from 'react-router-dom';\r\n\r\nfunction App() {\r\n  return (\r\n    <div className=\"App\">\r\n      <Provider store={ store }>\r\n        <Router>\r\n          <Switch>\r\n            <Route path=\"/\" component={ Views }/>\r\n          </Switch>\r\n        </Router>\r\n      </Provider>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.scss';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n","import {\r\n  SIGNIN,\r\n  AUTHENTICATED,\r\n  SIGNOUT,\r\n  SIGNOUT_SUCCESS,\r\n  SHOW_AUTH_MESSAGE,\r\n  HIDE_AUTH_MESSAGE,\r\n  SIGNUP,\r\n  SIGNUP_SUCCESS,\r\n  SHOW_LOADING,\r\n  SIGNIN_WITH_GOOGLE,\r\n  SIGNIN_WITH_GOOGLE_AUTHENTICATED,\r\n  SIGNIN_WITH_FACEBOOK,\r\n  SIGNIN_WITH_FACEBOOK_AUTHENTICATED\r\n} from '../constants/Auth';\r\n\r\nexport const signIn = (user) => {\r\n  return {\r\n    type: SIGNIN,\r\n    payload: user\r\n  }\r\n};\r\n\r\nexport const authenticated = (token) => {\r\n  return {\r\n    type: AUTHENTICATED,\r\n    token\r\n  }\r\n};\r\n\r\nexport const signOut = () => {\r\n  return {\r\n    type: SIGNOUT\r\n  };\r\n};\r\n\r\nexport const signOutSuccess = () => {\r\n  return {\r\n    type: SIGNOUT_SUCCESS,\r\n  }\r\n};\r\n\r\nexport const signUp = (user) => {\r\n  return {\r\n    type: SIGNUP,\r\n    payload: user\r\n  };\r\n};\r\n\r\nexport const signUpSuccess = (token) => {\r\n  return {\r\n    type: SIGNUP_SUCCESS,\r\n    token\r\n  };\r\n};\r\n\r\nexport const signInWithGoogle = () => {\r\n  return {\r\n    type: SIGNIN_WITH_GOOGLE\r\n  };\r\n};\r\n\r\nexport const signInWithGoogleAuthenticated = (token) => {\r\n  return {\r\n    type: SIGNIN_WITH_GOOGLE_AUTHENTICATED,\r\n    token\r\n  };\r\n};\r\n\r\nexport const signInWithFacebook = () => {\r\n  return {\r\n    type: SIGNIN_WITH_FACEBOOK\r\n  };\r\n};\r\n\r\nexport const signInWithFacebookAuthenticated = (token) => {\r\n  return {\r\n    type: SIGNIN_WITH_FACEBOOK_AUTHENTICATED,\r\n    token\r\n  };\r\n};\r\n\r\nexport const showAuthMessage = (message) => {\r\n  return {\r\n    type: SHOW_AUTH_MESSAGE,\r\n    message\r\n  };\r\n};\r\n\r\nexport const hideAuthMessage = () => {\r\n  return {\r\n    type: HIDE_AUTH_MESSAGE,\r\n  };\r\n};\r\n\r\nexport const showLoading = () => {\r\n  return {\r\n    type: SHOW_LOADING,\r\n  };\r\n};\r\n","class Utils {\r\n\r\n\t/**\r\n\t * Get first character from first & last sentences of a username\r\n\t * @param {String} name - Username\r\n\t * @return {String} 2 characters string\r\n\t */\r\n\tstatic getNameInitial(name) {\r\n\t\tlet initials = name.match(/\\b\\w/g) || [];\r\n\t\treturn ((initials.shift() || '') + (initials.pop() || '')).toUpperCase();\r\n\t}\r\n\r\n\t/**\r\n\t * Get current path related object from Navigation Tree\r\n\t * @param {Array} navTree - Navigation Tree from directory 'configs/NavigationConfig'\r\n\t * @param {String} path - Location path you looking for e.g '/app/dashboards/analytic'\r\n\t * @return {Object} object that contained the path string\r\n\t */\r\n\tstatic getRouteInfo(navTree, path) {\r\n\t\tif( navTree.path === path ){\r\n\t\t  return navTree;\r\n\t\t}\r\n\t\tlet route; \r\n\t\tfor (let p in navTree) {\r\n\t\t  if( navTree.hasOwnProperty(p) && typeof navTree[p] === 'object' ) {\r\n\t\t\t\troute = this.getRouteInfo(navTree[p], path);\r\n\t\t\t\tif(route){\r\n\t\t\t\t\treturn route;\r\n\t\t\t\t}\r\n\t\t  }\r\n\t\t}\r\n\t\treturn route;\r\n\t}\t\r\n\r\n\t/**\r\n\t * Get accessible color contrast\r\n\t * @param {String} hex - Hex color code e.g '#3e82f7'\r\n\t * @return {String} 'dark' or 'light'\r\n\t */\r\n\tstatic getColorContrast(hex){\r\n\t\tconst threshold = 130;\r\n\t\tconst hRed = hexToR(hex);\r\n\t\tconst hGreen = hexToG(hex);\r\n\t\tconst hBlue = hexToB(hex);\r\n\t\tfunction hexToR(h) {return parseInt((cutHex(h)).substring(0,2),16)}\r\n\t\tfunction hexToG(h) {return parseInt((cutHex(h)).substring(2,4),16)}\r\n\t\tfunction hexToB(h) {return parseInt((cutHex(h)).substring(4,6),16)}\r\n\t\tfunction cutHex(h) {return (h.charAt(0) === '#') ? h.substring(1,7):h}\r\n\t\tconst cBrightness = ((hRed * 299) + (hGreen * 587) + (hBlue * 114)) / 1000;\r\n\t\tif (cBrightness > threshold){\r\n\t\t\treturn 'dark'\r\n\t\t} else { \r\n\t\t\treturn 'light'\r\n\t\t}\t\r\n\t}\r\n\r\n\t/**\r\n\t * Darken or lighten a hex color \r\n\t * @param {String} color - Hex color code e.g '#3e82f7'\r\n\t * @param {Number} percent - Percentage -100 to 100, positive for lighten, negative for darken\r\n\t * @return {String} Darken or lighten color \r\n\t */\r\n\tstatic shadeColor(color, percent) {\r\n\t\tlet R = parseInt(color.substring(1,3),16);\r\n\t\tlet G = parseInt(color.substring(3,5),16);\r\n\t\tlet B = parseInt(color.substring(5,7),16);\r\n\t\tR = parseInt(R * (100 + percent) / 100);\r\n\t\tG = parseInt(G * (100 + percent) / 100);\r\n\t\tB = parseInt(B * (100 + percent) / 100);\r\n\t\tR = (R<255)?R:255;  \r\n\t\tG = (G<255)?G:255;  \r\n\t\tB = (B<255)?B:255;  \r\n\t\tconst RR = ((R.toString(16).length === 1) ? `0${R.toString(16)}` : R.toString(16));\r\n\t\tconst GG = ((G.toString(16).length === 1) ? `0${G.toString(16)}` : G.toString(16));\r\n\t\tconst BB = ((B.toString(16).length === 1) ? `0${B.toString(16)}` : B.toString(16));\r\n\t\treturn `#${RR}${GG}${BB}`; \r\n\t}\r\n\r\n\t/**\r\n\t * Returns either a positive or negative \r\n\t * @param {Number} number - number value\r\n\t * @param {any} positive - value that return when positive\r\n\t * @param {any} negative - value that return when negative\r\n\t * @return {any} positive or negative value based on param\r\n\t */\r\n\tstatic getSignNum(number, positive, negative) {\r\n\t\tif (number > 0) {\r\n\t\t\treturn positive\r\n\t\t}\r\n\t\tif (number < 0) {\r\n\t\t\treturn negative\r\n\t\t}\r\n\t\treturn null\r\n\t}\r\n\r\n\t/**\r\n\t * Returns either ascending or descending value\r\n\t * @param {Object} a - antd Table sorter param a\r\n\t * @param {Object} b - antd Table sorter param b\r\n\t * @param {String} key - object key for compare\r\n\t * @return {any} a value minus b value\r\n\t */\r\n\tstatic antdTableSorter(a, b, key) {\r\n\t\tif(typeof a[key] === 'number' && typeof b[key] === 'number') {\r\n\t\t\treturn a[key] - b[key]\r\n\t\t}\r\n\r\n\t\tif(typeof a[key] === 'string' && typeof b[key] === 'string') {\r\n\t\t\ta = a[key].toLowerCase();\r\n\t\t\tb = b[key].toLowerCase();\r\n\t\t\treturn a > b ? -1 : b > a ? 1 : 0;\r\n\t\t}\r\n\t\treturn\r\n\t}\r\n\r\n\t/**\r\n\t * Filter array of object \r\n\t * @param {Array} list - array of objects that need to filter\r\n\t * @param {String} key - object key target\r\n\t * @param {any} value  - value that excluded from filter\r\n\t * @return {Array} a value minus b value\r\n\t */\r\n\tstatic filterArray(list, key, value) {\r\n\t\tlet data = list\r\n\t\tif(list) {\r\n\t\t\tdata = list.filter(item => item[key] === value)\r\n\t\t}\r\n\t\treturn data\r\n\t}\r\n\r\n\t/**\r\n\t * Remove object from array by value\r\n\t * @param {Array} list - array of objects\r\n\t * @param {String} key - object key target\r\n\t * @param {any} value  - target value\r\n\t * @return {Array} Array that removed target object\r\n\t */\r\n\tstatic deleteArrayRow(list, key, value) {\r\n\t\tlet data = list\r\n\t\tif(list) {\r\n\t\t\tdata = list.filter(item => item[key] !== value)\r\n\t\t}\r\n\t\treturn data\r\n\t}\r\n\r\n\t/**\r\n\t * Wild card search on all property of the object\r\n\t * @param {Number | String} input - any value to search\r\n\t * @param {Array} list - array for search\r\n\t * @return {Array} array of object contained keyword\r\n\t */\r\n\tstatic wildCardSearch(list, input) {\r\n\t\tconst searchText = (item) => {\r\n\t\t\tfor (let key in item) {\r\n\t\t\t\tif (item[key] == null) {\r\n\t\t\t\t\tcontinue;\r\n\t\t\t\t}\r\n\t\t\t\tif (item[key].toString().toUpperCase().indexOf(input.toString().toUpperCase()) !== -1) {\r\n\t\t\t\t\treturn true;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t};\r\n\t\tlist = list.filter(value => searchText(value));\r\n\t\treturn list;\r\n\t}\r\n\r\n\t/**\r\n\t * Get Breakpoint\r\n\t * @param {Object} screens - Grid.useBreakpoint() from antd\r\n\t * @return {Array} array of breakpoint size\r\n\t */\r\n\tstatic getBreakPoint(screens) {\r\n\t\tlet breakpoints = []\r\n\t\tfor (const key in screens) {\r\n\t\t\tif (screens.hasOwnProperty(key)) {\r\n\t\t\t\tconst element = screens[key];\r\n\t\t\t\tif (element) {\r\n\t\t\t\t\tbreakpoints.push(key)\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn breakpoints\r\n\t}\r\n}\r\n\r\nexport default Utils;"],"sourceRoot":""}