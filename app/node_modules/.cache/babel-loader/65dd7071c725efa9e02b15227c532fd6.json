{"ast":null,"code":"'use strict';\n\nconst url = require('url');\n\nfunction packageName(href) {\n  try {\n    let basePath = url.parse(href).pathname.substr(1);\n\n    if (!basePath.match(/^-/)) {\n      basePath = basePath.split('/');\n      var index = basePath.indexOf('_rewrite');\n\n      if (index === -1) {\n        index = basePath.length - 1;\n      } else {\n        index++;\n      }\n\n      return decodeURIComponent(basePath[index]);\n    }\n  } catch (_) {// this is ok\n  }\n}\n\nclass HttpErrorBase extends Error {\n  constructor(method, res, body, spec) {\n    super();\n    this.headers = res.headers.raw();\n    this.statusCode = res.status;\n    this.code = `E${res.status}`;\n    this.method = method;\n    this.uri = res.url;\n    this.body = body;\n    this.pkgid = spec ? spec.toString() : packageName(res.url);\n  }\n\n}\n\nmodule.exports.HttpErrorBase = HttpErrorBase;\n\nclass HttpErrorGeneral extends HttpErrorBase {\n  constructor(method, res, body, spec) {\n    super(method, res, body, spec);\n    this.message = `${res.status} ${res.statusText} - ${this.method.toUpperCase()} ${this.spec || this.uri}${body && body.error ? ' - ' + body.error : ''}`;\n    Error.captureStackTrace(this, HttpErrorGeneral);\n  }\n\n}\n\nmodule.exports.HttpErrorGeneral = HttpErrorGeneral;\n\nclass HttpErrorAuthOTP extends HttpErrorBase {\n  constructor(method, res, body, spec) {\n    super(method, res, body, spec);\n    this.message = 'OTP required for authentication';\n    this.code = 'EOTP';\n    Error.captureStackTrace(this, HttpErrorAuthOTP);\n  }\n\n}\n\nmodule.exports.HttpErrorAuthOTP = HttpErrorAuthOTP;\n\nclass HttpErrorAuthIPAddress extends HttpErrorBase {\n  constructor(method, res, body, spec) {\n    super(method, res, body, spec);\n    this.message = 'Login is not allowed from your IP address';\n    this.code = 'EAUTHIP';\n    Error.captureStackTrace(this, HttpErrorAuthIPAddress);\n  }\n\n}\n\nmodule.exports.HttpErrorAuthIPAddress = HttpErrorAuthIPAddress;\n\nclass HttpErrorAuthUnknown extends HttpErrorBase {\n  constructor(method, res, body, spec) {\n    super(method, res, body, spec);\n    this.message = 'Unable to authenticate, need: ' + res.headers.get('www-authenticate');\n    Error.captureStackTrace(this, HttpErrorAuthUnknown);\n  }\n\n}\n\nmodule.exports.HttpErrorAuthUnknown = HttpErrorAuthUnknown;","map":null,"metadata":{},"sourceType":"script"}