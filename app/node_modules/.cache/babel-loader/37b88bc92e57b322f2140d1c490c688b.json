{"ast":null,"code":"var _jsxFileName = \"/Users/dhruvaagrawal/Desktop/Work/Spocto/CMS/app/src/views/app-views/ops-admin/FileUploadForm.js\";\nimport React, { useState } from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { message, Typography, Form, Button, Checkbox, Row, Col, Select } from 'antd';\nimport { CloudUploadOutlined, LeftCircleOutlined, RightCircleOutlined } from '@ant-design/icons';\nimport axios from 'axios';\nimport { FILE_UPLOAD_URL } from 'constants/ApiConstant';\nimport XLSX from 'xlsx';\nimport readXlsxFile from 'read-excel-file';\nimport { StyledButton, StyledNavButton } from 'constants/StyledComponents';\nconst {\n  Title\n} = Typography;\nconst {\n  Option\n} = Select;\nconst useStyles = makeStyles({\n  table: {\n    minWidth: 650\n  }\n});\n\nconst FileUploadForm = props => {\n  let fileReader;\n  let newArr = [];\n  const checkedLanguages = [];\n  const selectedOptions = [];\n  const [file, setFile] = useState(null);\n  const [visible, setVisible] = useState(false);\n  const [buttonVisible, setButtonVisible] = useState(true);\n  const [checked, setChecked] = useState(false);\n  const [createTable, setCreateTable] = useState([]);\n  const [languages, setLanguages] = useState([]);\n  const [headers, setHeaders] = useState([]);\n  const classes = useStyles(); // Create a reference to the hidden file input element\n\n  const hiddenFileInput = React.useRef(null);\n  const formItemLayout = {\n    labelCol: {\n      span: 6\n    },\n    wrapperCol: {\n      span: 14\n    }\n  };\n\n  const showButtons = props => {\n    return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(StyledButton, {\n      onClick: handleClick,\n      style: {\n        marginTop: '6%'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(CloudUploadOutlined, {\n      style: {\n        marginRight: '2%'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 83\n      }\n    }), \" Upload File\"), /*#__PURE__*/React.createElement(Row, {\n      style: {\n        marginTop: '14%',\n        display: 'flex',\n        justifyContent: 'center',\n        alignItems: 'center'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(StyledNavButton, {\n      style: {\n        marginRight: '3%'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(LeftCircleOutlined, {\n      style: {\n        marginRight: '2%'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 67\n      }\n    }), \"Go to recommendations\"), /*#__PURE__*/React.createElement(StyledNavButton, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 21\n      }\n    }, \"Go to transactions\", /*#__PURE__*/React.createElement(RightCircleOutlined, {\n      style: {\n        marginLeft: '2%'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 56\n      }\n    }))));\n  };\n\n  const handleClick = event => {\n    hiddenFileInput.current.click();\n  };\n\n  const onChange = async e => {\n    let tableArray = [];\n    setFile(e.target.files[0]);\n    await readXlsxFile(e.target.files[0]).then(function (res) {\n      for (let i = 0; i < 3; i++) {\n        tableArray.push(res[i]);\n      }\n\n      console.log(tableArray);\n      setCreateTable(tableArray);\n      setVisible(true);\n      setButtonVisible(false);\n    });\n  };\n\n  const uploadFile = async file => {\n    const formData = new FormData();\n    formData.append('file', file);\n    let res = await axios.post(FILE_UPLOAD_URL, formData, {\n      headers: {\n        'content-type': 'multipart/form-data'\n      }\n    });\n    return res;\n  };\n\n  const onSubmit = async e => {\n    let res = await uploadFile(file);\n    console.log(res.data);\n    checkedLanguages = [];\n    selectedOptions = [];\n    message.success('Your file was successfully submitted and is now being processed');\n  };\n\n  const onCheck = event => {\n    checkedLanguages.push(event.target.value);\n    console.log(checkedLanguages);\n    setLanguages(checkedLanguages);\n  };\n\n  const onSelect = event => {\n    selectedOptions.push(event.value);\n    console.log(selectedOptions);\n  };\n\n  const renderLanguages = () => {\n    const languages = ['English', 'Hindi', 'Tamil', 'Telugu', 'Kannada', 'Marathi', 'Gujarati', 'Bengali', 'Punjabi', 'Malayalam'];\n    return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Form.Item, {\n      name: \"language\",\n      label: \"Language\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 121,\n        columnNumber: 17\n      }\n    }, languages.map(language => /*#__PURE__*/React.createElement(Checkbox.Group, {\n      className: \"pl-3\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 123,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(Col, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 124,\n        columnNumber: 33\n      }\n    }, /*#__PURE__*/React.createElement(Checkbox, {\n      value: language,\n      style: {\n        lineHeight: '32px'\n      },\n      onChange: onCheck,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 125,\n        columnNumber: 37\n      }\n    }, language))))));\n  };\n\n  const showTableHeaders = array => {\n    newArr = array[0];\n    console.log(newArr);\n    const headerObj = {\n      Stage: '',\n      Type: '',\n      Level: '',\n      Product: '',\n      Content: '',\n      Category: '',\n      Vendor: ''\n    };\n    return /*#__PURE__*/React.createElement(React.Fragment, null, newArr.map((num, index) => /*#__PURE__*/React.createElement(Form.Item, {\n      name: num,\n      label: num,\n      hasFeedback: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 153,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(Row, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 158,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(Select, {\n      key: index,\n      labelInValue: true,\n      placeholder: `Please enter ${num}`,\n      onSelect: onSelect,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 159,\n        columnNumber: 25\n      }\n    }, newArr.map((num, index) => {\n      headerObj[num] = num;\n      return /*#__PURE__*/React.createElement(Option, {\n        key: index,\n        value: num,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 162,\n          columnNumber: 40\n        }\n      }, num);\n    }))))));\n  };\n\n  return /*#__PURE__*/React.createElement(Form, Object.assign({\n    name: \"validate_other\"\n  }, formItemLayout, {\n    onFinish: onSubmit,\n    textAlign: \"center\",\n    style: buttonVisible ? {\n      height: '300px'\n    } : {\n      height: '100%'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 175,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(Form.Item, {\n    justify: \"center\",\n    style: {\n      textAlign: 'center',\n      marginTop: '1%',\n      marginBottom: '1%'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 182,\n      columnNumber: 4\n    }\n  }, /*#__PURE__*/React.createElement(Title, {\n    level: 1,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 183,\n      columnNumber: 17\n    }\n  }, \"Upload Transactions\")), /*#__PURE__*/React.createElement(Form.Item, {\n    style: {\n      display: 'flex',\n      justifyContent: 'center',\n      alignItems: 'center',\n      textAlign: 'center'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 185,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    type: \"file\",\n    onChange: onChange,\n    ref: hiddenFileInput,\n    style: {\n      display: 'none'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 186,\n      columnNumber: 8\n    }\n  }), buttonVisible ? showButtons() : /*#__PURE__*/React.createElement(Title, {\n    level: 3,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 187,\n      columnNumber: 51\n    }\n  }, \"Please map the headings\")), /*#__PURE__*/React.createElement(Form.Item, {\n    style: {\n      display: 'flex',\n      justifyContent: 'center',\n      alignItems: 'center'\n    },\n    className: \"mt-5\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 189,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Row, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 190,\n      columnNumber: 21\n    }\n  }, visible && renderLanguages()), /*#__PURE__*/React.createElement(Row, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 193,\n      columnNumber: 21\n    }\n  }, visible && showTableHeaders(createTable))), /*#__PURE__*/React.createElement(Form.Item, {\n    style: {\n      display: 'flex',\n      justifyContent: 'center',\n      alignItems: 'center'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 197,\n      columnNumber: 4\n    }\n  }, visible && /*#__PURE__*/React.createElement(Button, {\n    htmlType: \"submit\",\n    variant: \"contained\",\n    type: \"primary\",\n    style: {\n      width: '100%',\n      height: '3rem',\n      fontSize: '1.45rem'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 198,\n      columnNumber: 30\n    }\n  }, \"Create Transactions\")), console.log(languages, headers));\n};\n\nexport default FileUploadForm;","map":{"version":3,"sources":["/Users/dhruvaagrawal/Desktop/Work/Spocto/CMS/app/src/views/app-views/ops-admin/FileUploadForm.js"],"names":["React","useState","makeStyles","message","Typography","Form","Button","Checkbox","Row","Col","Select","CloudUploadOutlined","LeftCircleOutlined","RightCircleOutlined","axios","FILE_UPLOAD_URL","XLSX","readXlsxFile","StyledButton","StyledNavButton","Title","Option","useStyles","table","minWidth","FileUploadForm","props","fileReader","newArr","checkedLanguages","selectedOptions","file","setFile","visible","setVisible","buttonVisible","setButtonVisible","checked","setChecked","createTable","setCreateTable","languages","setLanguages","headers","setHeaders","classes","hiddenFileInput","useRef","formItemLayout","labelCol","span","wrapperCol","showButtons","handleClick","marginTop","marginRight","display","justifyContent","alignItems","marginLeft","event","current","click","onChange","e","tableArray","target","files","then","res","i","push","console","log","uploadFile","formData","FormData","append","post","onSubmit","data","success","onCheck","value","onSelect","renderLanguages","map","language","lineHeight","showTableHeaders","array","headerObj","Stage","Type","Level","Product","Content","Category","Vendor","num","index","height","textAlign","marginBottom","width","fontSize"],"mappings":"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","sourcesContent":["import React, { useState } from 'react'\nimport { makeStyles } from '@material-ui/core/styles';\nimport { message, Typography, Form, Button, Checkbox, Row, Col, Select } from 'antd'\nimport { CloudUploadOutlined, LeftCircleOutlined, RightCircleOutlined } from '@ant-design/icons'\nimport axios from 'axios'\nimport { FILE_UPLOAD_URL } from 'constants/ApiConstant'\nimport XLSX from 'xlsx'\nimport readXlsxFile from 'read-excel-file'\nimport { StyledButton, StyledNavButton } from 'constants/StyledComponents'\n\nconst { Title } = Typography\nconst { Option } = Select\n\nconst useStyles = makeStyles({\n    table: {\n        minWidth: 650,\n    },\n});\n\nconst FileUploadForm = props => {\n\n    let fileReader;\n\n    let newArr = []\n\n    const checkedLanguages = []\n    const selectedOptions = []\n\n    const [ file, setFile ] = useState(null)\n    const [ visible, setVisible ] = useState(false)\n    const [ buttonVisible, setButtonVisible ] = useState(true)\n    const [ checked, setChecked ] = useState(false)\n    const [ createTable, setCreateTable ] = useState([])\n    const [ languages, setLanguages ] = useState([])\n    const [ headers, setHeaders ] = useState([])\n\n    const classes = useStyles()\n\n    // Create a reference to the hidden file input element\n    const hiddenFileInput = React.useRef(null);\n\n    const formItemLayout = {\n        labelCol: {\n            span: 6,\n        },\n        wrapperCol: {\n            span: 14,\n        },\n    }; \n\n    const showButtons = props => {\n\n        return (\n            <>\n                <StyledButton onClick={ handleClick } style={{ marginTop: '6%' }}><CloudUploadOutlined style={{ marginRight: '2%' }} /> Upload File</StyledButton>\n                <Row style={{ marginTop: '14%', display: 'flex', justifyContent: 'center', alignItems: 'center'}}>\n                    <StyledNavButton style={{ marginRight: '3%'}}><LeftCircleOutlined style={{ marginRight: '2%' }} />Go to recommendations</StyledNavButton>\n                    <StyledNavButton>Go to transactions<RightCircleOutlined style={{ marginLeft: '2%' }} /></StyledNavButton>\n                </Row>\n            </>\n        )\n    }\n\n    const handleClick = event => {\n        hiddenFileInput.current.click()\n    }\n\t\n    const onChange = async (e) => {\n        let tableArray = []\n        setFile(e.target.files[0])\n        await readXlsxFile(e.target.files[0])\n        .then( function(res) {\n            for (let i = 0; i < 3; i++) {\n                tableArray.push(res[i])\n            } \n            console.log(tableArray)\n            setCreateTable(tableArray)\n            setVisible(true)\n            setButtonVisible(false)\n        })\n    }\n\n    const uploadFile = async (file) => {\n\n        const formData = new FormData();\n        \n        formData.append('file', file)\n        \n        let res =  await axios.post(FILE_UPLOAD_URL, formData, {\n            headers: {\n                'content-type': 'multipart/form-data'\n            }\n\t\t})\n\t\treturn res\n    }\n    \n    const onSubmit = async (e) => {\n        let res = await uploadFile(file);\n        console.log(res.data);\n        checkedLanguages = []\n        selectedOptions = []\n        message.success('Your file was successfully submitted and is now being processed')\n\t}\n      \n    const onCheck = event => {\n        checkedLanguages.push(event.target.value)\n        console.log(checkedLanguages)\n        setLanguages(checkedLanguages)\n    }\n\n    const onSelect = event => {\n        selectedOptions.push(event.value)\n        console.log(selectedOptions)\n    }\n    \n    const renderLanguages = () => {\n        const languages = ['English', 'Hindi', 'Tamil', 'Telugu', 'Kannada', 'Marathi', 'Gujarati', 'Bengali', 'Punjabi', 'Malayalam']\n\n        return (\n            <>\n                <Form.Item name=\"language\" label=\"Language\">\n                        { languages.map( language => (\n                            <Checkbox.Group className=\"pl-3\">\n                                <Col>\n                                    <Checkbox value={ language } style={{ lineHeight: '32px' }} onChange={ onCheck }>{ language }</Checkbox>\n                                </Col>\n                            </Checkbox.Group>\n                        )) }\n                </Form.Item>\n            </>\n        )\n    }\n    \n    const showTableHeaders = array => {\n\n        newArr = array[0]\n\n        console.log(newArr)\n\n        const headerObj = {\n            Stage: '',\n            Type: '',\n            Level: '',\n            Product: '',\n            Content: '',\n            Category: '',\n            Vendor: ''\n        }\n        \n        return (\n            <>\n            { newArr.map( (num, index) => (\n                <Form.Item\n                    name={ num }\n                    label={ num }\n                    hasFeedback\n                >\n                    <Row>\n                        <Select key={ index } labelInValue placeholder={`Please enter ${ num }`} onSelect={ onSelect }>\n                            { newArr.map( (num, index) => {\n                                headerObj[num] = num\n                                return <Option key={ index } value={ num }>{ num }</Option>\n                            }) }\n                        </Select>\n                    </Row>\n                </Form.Item>\n            ))}\n            {/* { setHeaders(headerObj) } */}\n            </>\n        )\n    }\n\n\n\treturn (\n        <Form\n            name=\"validate_other\"\n            { ...formItemLayout }\n            onFinish={ onSubmit }\n            textAlign=\"center\"\n            style={ buttonVisible ? { height: '300px' } : { height: '100%' }}\n        >\n\t\t\t<Form.Item justify=\"center\" style={{ textAlign: 'center', marginTop: '1%', marginBottom: '1%' }}>\n                <Title level={1}>Upload Transactions</Title>\n            </Form.Item>\n            <Form.Item style={{ display: 'flex', justifyContent: 'center', alignItems: 'center', textAlign: 'center' }}>\n\t\t\t    <input type=\"file\" onChange={ onChange } ref={ hiddenFileInput }  style={{ display: 'none' }} />\n                { buttonVisible ? showButtons() : <Title level={3}>Please map the headings</Title>}\n            </Form.Item>\n            <Form.Item style={{ display: 'flex', justifyContent: 'center', alignItems: 'center' }} className=\"mt-5\">\n                    <Row>\n                        { visible && renderLanguages() }\n                    </Row>\n                    <Row>\n                        { visible && showTableHeaders(createTable) }\n                    </Row>\n            </Form.Item>\n\t\t\t<Form.Item style={{ display: 'flex', justifyContent: 'center', alignItems: 'center' }}>\n                { visible && <Button htmlType=\"submit\" variant=\"contained\" type=\"primary\" style={{ width: '100%', height: '3rem', fontSize: '1.45rem' }}>Create Transactions</Button> }\n            </Form.Item>\n            { console.log(languages, headers) }\n\t\t</Form>\n\t)\n        \n}\nexport default FileUploadForm"]},"metadata":{},"sourceType":"module"}