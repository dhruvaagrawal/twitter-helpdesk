{"ast":null,"code":"var _jsxFileName = \"/Users/dhruvaagrawal/Desktop/Work/Spocto/CMS/app/src/views/app-views/journeys/journey-ivr/apr/index.js\";\nimport React from 'react';\nimport { Card, Form, Table, Tabs, Tag, Typography, Space, Button, message } from 'antd';\nimport { File } from 'better-xlsx';\nimport { saveAs } from 'file-saver';\nimport { LinkOutlined } from '@ant-design/icons';\nimport AvatarStatus from 'components/shared-components/AvatarStatus';\nconst {\n  TabPane\n} = Tabs;\nconst {\n  Title\n} = Typography;\n\nfunction APR() {\n  function ExportExcel(column, dataSource, fileName = 'apr') {\n    //  new working spectrum \n    const file = new File(); //  the new table \n\n    let sheet = file.addSheet('sheet-test'); //  gets the number of header rows \n\n    let depth = getDepth(column); //  gets the number of columns in the header \n\n    let columnNum = getColumns(column); //  new number of header rows \n\n    let rowArr = [];\n\n    for (let k = 0; k < depth; k++) {\n      rowArr.push(sheet.addRow());\n    } //  populate the cells according to the number of columns \n\n\n    rowArr.map(ele => {\n      for (let j = 0; j < columnNum; j++) {\n        let cell = ele.addCell();\n        cell.value = j;\n      }\n    }); //  initializes the header \n\n    init(column, 0, 0); //  unfold the columns in order \n\n    let columnLineArr = [];\n    columnLine(column); //  according to the column, the dataSource the data inside is sorted and converted into a two-dimensional array \n\n    let dataSourceArr = [];\n    dataSource.map(ele => {\n      let dataTemp = [];\n      columnLineArr.map(item => {\n        dataTemp.push({\n          [item.dataIndex]: ele[item.dataIndex],\n          value: ele[item.dataIndex]\n        });\n      });\n      dataSourceArr.push(dataTemp);\n    }); // debugger;\n    //  drawing table data \n\n    dataSourceArr.forEach((item, index) => {\n      // according to the data, create the corresponding number of rows \n      let row = sheet.addRow();\n      row.setHeightCM(0.8); // creates a cell for that number \n\n      item.map(ele => {\n        let cell = row.addCell();\n\n        if (ele.hasOwnProperty('num')) {\n          cell.value = index + 1;\n        } else {\n          cell.value = ele.value;\n        }\n\n        cell.style.align.v = 'center';\n        cell.style.align.h = 'center';\n      });\n    }); // set the width of each column \n\n    for (var i = 0; i < 4; i++) {\n      sheet.col(i).width = 20;\n    }\n\n    file.saveAs('blob').then(function (content) {\n      saveAs(content, fileName + '.xlsx');\n    }); //  unfold the columns in order \n\n    function columnLine(column) {\n      column.map(ele => {\n        if (ele.children === undefined || ele.children.length === 0) {\n          columnLineArr.push(ele);\n        } else {\n          columnLine(ele.children);\n        }\n      });\n    } //  initializes the header \n\n\n    function init(column, rowIndex, columnIndex) {\n      column.map((item, index) => {\n        let hCell = sheet.cell(rowIndex, columnIndex); //  if there are no child elements,   all the columns \n\n        if (item.title === ' operation ') {\n          hCell.value = '';\n          return;\n        } else if (item.children === undefined || item.children.length === 0) {\n          //  add a cell to the first row \n          hCell.value = item.title;\n          hCell.vMerge = depth - rowIndex - 1;\n          hCell.style.align.h = 'center';\n          hCell.style.align.v = 'center';\n          columnIndex++; // rowIndex++\n        } else {\n          let childrenNum = 0;\n\n          function getColumns(arr) {\n            arr.map(ele => {\n              if (ele.children) {\n                getColumns(ele.children);\n              } else {\n                childrenNum++;\n              }\n            });\n          }\n\n          getColumns(item.children);\n          hCell.hMerge = childrenNum - 1;\n          hCell.value = item.title;\n          hCell.style.align.h = 'center';\n          hCell.style.align.v = 'center';\n          let rowCopy = rowIndex;\n          rowCopy++;\n          init(item.children, rowCopy, columnIndex); //  next cell start \n\n          columnIndex = columnIndex + childrenNum;\n        }\n      });\n    } //  gets table head rows \n\n\n    function getDepth(arr) {\n      const eleDepths = [];\n      arr.forEach(ele => {\n        let depth = 0;\n\n        if (Array.isArray(ele.children)) {\n          depth = getDepth(ele.children);\n        }\n\n        eleDepths.push(depth);\n      });\n      return 1 + max(eleDepths);\n    }\n\n    function max(arr) {\n      return arr.reduce((accu, curr) => {\n        if (curr > accu) return curr;\n        return accu;\n      });\n    } //  calculates the number of header columns \n\n\n    function getColumns(arr) {\n      let columnNum = 0;\n      arr.map(ele => {\n        if (ele.children) {\n          getColumns(ele.children);\n        } else {\n          columnNum++;\n        }\n      });\n      return columnNum;\n    }\n  }\n\n  const handleLink = () => {\n    message.success('Download of your chat history will begin shortly');\n  };\n\n  const dataSource = [{\n    key: '1',\n    name: 'Puja Srivastava',\n    agent_id: 1,\n    campaign_id: 32,\n    chatCount: 5,\n    chatDuration: '0:10:30',\n    customerName: 'Bhavin',\n    customerPhone: '99XXXX7008',\n    loanAccNo: 'LPXXXX1234',\n    chatInTime: '13:00:00',\n    chatOutTime: '13:02:15',\n    totalChatDuration: '0:02:15',\n    botTime: '0:01:10',\n    language: ['English', 'Hindi']\n  }, {\n    key: '2',\n    name: 'Dhruva Agrawal',\n    agent_id: 2,\n    campaign_id: 4,\n    chatCount: 10,\n    chatDuration: '1:05:15',\n    customerName: 'Sumeet',\n    customerPhone: '99XXXX7008',\n    loanAccNo: 'LPXXXX1234',\n    chatInTime: '13:30:00',\n    chatOutTime: '13:34:55',\n    totalChatDuration: '0:04:55',\n    botTime: '0:02:45',\n    language: ['English', 'Hindi', 'Tamil', 'Telugu', 'Gujarati']\n  }, {\n    key: '3',\n    name: 'Sourabh Choudhary',\n    agent_id: 3,\n    campaign_id: 23,\n    chatCount: 2,\n    chatDuration: '0:02:45',\n    customerName: 'Kapil',\n    customerPhone: '99XXXX7008',\n    loanAccNo: 'LPXXXX1234',\n    chatInTime: '12:32:00',\n    chatOutTime: '12:32:45',\n    totalChatDuration: '0:00:45',\n    botTime: '0:02:15',\n    language: ['English', 'Gujarati']\n  }, {\n    key: '4',\n    name: 'Aaina Khan',\n    agent_id: 4,\n    campaign_id: 1,\n    chatCount: 5,\n    chatDuration: '1:05:10',\n    customerName: 'Namita',\n    customerPhone: '99XXXX7008',\n    loanAccNo: 'LPXXXX1234',\n    chatInTime: '09:00:00',\n    chatOutTime: '09:45:45',\n    totalChatDuration: '0:05:45',\n    botTime: '0:01:10',\n    language: ['Hindi', 'Tamil']\n  }, {\n    key: '5',\n    name: 'Vijay Gupta',\n    agent_id: 5,\n    campaign_id: 21,\n    chatCount: 10,\n    chatDuration: '0:30:00',\n    customerName: 'Shalini',\n    customerPhone: '99XXXX7008',\n    loanAccNo: 'LPXXXX1904',\n    chatInTime: '11:00:00',\n    chatOutTime: '11:01:05',\n    totalChatDuration: '0:01:05',\n    botTime: '0:03:30',\n    language: ['Telugu', 'Kannada']\n  }, {\n    key: '6',\n    name: 'Wasim Ansari',\n    agent_id: 6,\n    campaign_id: 20,\n    chatCount: 3,\n    chatDuration: '0:42:20',\n    customerName: 'Rahul',\n    customerPhone: '99XXXX7890',\n    loanAccNo: 'LPXXXX1174',\n    chatInTime: '13:18:00',\n    chatOutTime: '13:22:15',\n    totalChatDuration: '0:04:15',\n    botTime: '0:02:00',\n    language: ['Hindi', 'Gujarati', 'English']\n  }];\n  const columns_dashboard = [{\n    title: 'Agent ID',\n    key: 'agent_id',\n    dataIndex: 'agent_id'\n  }, {\n    title: 'Agent Name',\n    key: 'name',\n    dataIndex: 'name',\n    render: (_, record) => /*#__PURE__*/React.createElement(\"div\", {\n      className: \"d-flex\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 279,\n        columnNumber: 5\n      }\n    }, /*#__PURE__*/React.createElement(AvatarStatus, {\n      key: record.id,\n      src: \"/img/spoctocular_short.png\",\n      name: record.name,\n      subTitle: record.name.toLowerCase().split(' ').join('.') + \"@spocto.com\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 280,\n        columnNumber: 6\n      }\n    })),\n    sorter: {\n      compare: (a, b) => {\n        a = a.name.toLowerCase();\n        b = b.name.toLowerCase();\n        return a > b ? -1 : b > a ? 1 : 0;\n      }\n    }\n  }, {\n    title: 'Chat Count',\n    key: 'chatCount',\n    dataIndex: 'chatCount',\n    render: count => /*#__PURE__*/React.createElement(Tag, {\n      className: \"text-capitalize\",\n      color: count > 5 ? 'cyan' : 'red',\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 296,\n        columnNumber: 5\n      }\n    }, count),\n    sorter: {\n      compare: (a, b) => a.chatCount.length - b.chatCount.length\n    }\n  }, {\n    title: 'Total Chat Duration',\n    key: 'chatDuration',\n    dataIndex: 'chatDuration'\n  }];\n  const columns_data = [{\n    title: 'Customer Name',\n    key: 'customerName',\n    dataIndex: 'customerName'\n  }, {\n    title: 'Customer Phone Number',\n    key: 'customerPhone',\n    dataIndex: 'customerPhone'\n  }, {\n    title: 'Loan Account Number',\n    key: 'loanAccNo',\n    dataIndex: 'loanAccNo'\n  }, {\n    title: 'Agent Name',\n    key: 'name',\n    dataIndex: 'name'\n  }, {\n    title: 'Chat In-Time',\n    key: 'chatInTime',\n    dataIndex: 'chatInTime'\n  }, {\n    title: 'Chat Out-Time',\n    key: 'chatOutTime',\n    dataIndex: 'chatOutTime'\n  }, {\n    title: 'Chat Duration',\n    key: 'totaChatDuration',\n    dataIndex: 'totalChatDuration'\n  }, {\n    title: 'Bot Chat Time',\n    key: 'botTime',\n    dataIndex: 'botTime'\n  }, {\n    title: 'Chat History',\n    key: 'action',\n    render: (text, record) => /*#__PURE__*/React.createElement(Space, {\n      size: \"middle\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 354,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"a\", {\n      href: \"#\",\n      onClick: handleLink,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 355,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(LinkOutlined, {\n      style: {\n        color: 'blue',\n        fontSize: '1.5rem'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 356,\n        columnNumber: 25\n      }\n    })))\n  }];\n\n  function callback(key) {\n    console.log(key);\n  }\n\n  return /*#__PURE__*/React.createElement(Card, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 368,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Form.Item, {\n    justify: \"center\",\n    style: {\n      textAlign: 'center',\n      marginTop: '2%'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 369,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Title, {\n    level: 1,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 370,\n      columnNumber: 17\n    }\n  }, \"Agent Productivity Report\")), /*#__PURE__*/React.createElement(Tabs, {\n    defaultActiveKey: \"1\",\n    onChange: callback,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 372,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(TabPane, {\n    tab: \"Agent Dashboard\",\n    key: \"1\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 373,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Table, {\n    bordered: true,\n    dataSource: dataSource,\n    columns: columns_dashboard,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 374,\n      columnNumber: 17\n    }\n  })), /*#__PURE__*/React.createElement(TabPane, {\n    tab: \"Agent Data\",\n    key: \"2\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 380,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Table, {\n    bordered: true,\n    dataSource: dataSource,\n    columns: columns_data,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 381,\n      columnNumber: 17\n    }\n  }))));\n}\n\nexport default APR;","map":{"version":3,"sources":["/Users/dhruvaagrawal/Desktop/Work/Spocto/CMS/app/src/views/app-views/journeys/journey-ivr/apr/index.js"],"names":["React","Card","Form","Table","Tabs","Tag","Typography","Space","Button","message","File","saveAs","LinkOutlined","AvatarStatus","TabPane","Title","APR","ExportExcel","column","dataSource","fileName","file","sheet","addSheet","depth","getDepth","columnNum","getColumns","rowArr","k","push","addRow","map","ele","j","cell","addCell","value","init","columnLineArr","columnLine","dataSourceArr","dataTemp","item","dataIndex","forEach","index","row","setHeightCM","hasOwnProperty","style","align","v","h","i","col","width","then","content","children","undefined","length","rowIndex","columnIndex","hCell","title","vMerge","childrenNum","arr","hMerge","rowCopy","eleDepths","Array","isArray","max","reduce","accu","curr","handleLink","success","key","name","agent_id","campaign_id","chatCount","chatDuration","customerName","customerPhone","loanAccNo","chatInTime","chatOutTime","totalChatDuration","botTime","language","columns_dashboard","render","_","record","id","toLowerCase","split","join","sorter","compare","a","b","count","columns_data","text","color","fontSize","callback","console","log","textAlign","marginTop"],"mappings":"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","sourcesContent":["import React from 'react'\nimport { Card, Form, Table, Tabs, Tag, Typography, Space, Button, message } from 'antd'\nimport { File } from 'better-xlsx';\nimport { saveAs } from 'file-saver';\nimport { LinkOutlined } from '@ant-design/icons'\nimport AvatarStatus from 'components/shared-components/AvatarStatus';\n\nconst { TabPane } = Tabs;\nconst { Title } = Typography\n\nfunction APR() {\n\n    function ExportExcel(column, dataSource, fileName = 'apr') {\n\n        //  new working spectrum \n        const file = new File();\n        //  the new table \n        let sheet = file.addSheet('sheet-test');\n        //  gets the number of header rows \n        let depth = getDepth(column);\n        //  gets the number of columns in the header \n        let columnNum = getColumns(column);\n        //  new number of header rows \n        let rowArr = [];\n        for (let k = 0; k < depth; k++) {\n            rowArr.push(sheet.addRow());\n        }\n        //  populate the cells according to the number of columns \n        rowArr.map(ele => {\n            for (let j = 0; j < columnNum; j++) {\n            let cell = ele.addCell();\n            cell.value = j;\n            }\n        });\n\n        //  initializes the header \n        init(column, 0, 0);\n        //  unfold the columns in order \n        let columnLineArr = [];\n        columnLine(column);\n        //  according to the column, the dataSource the data inside is sorted and converted into a two-dimensional array \n        let dataSourceArr = [];\n        dataSource.map(ele => {\n            let dataTemp = [];\n            columnLineArr.map(item => {\n            dataTemp.push({\n                [item.dataIndex]: ele[item.dataIndex],\n                value: ele[item.dataIndex],\n            });\n            });\n            dataSourceArr.push(dataTemp);\n        });\n        // debugger;\n        //  drawing table data \n        dataSourceArr.forEach((item, index) => {\n            // according to the data, create the corresponding number of rows \n            let row = sheet.addRow();\n            row.setHeightCM(0.8);\n            // creates a cell for that number \n            item.map(ele => {\n            let cell = row.addCell();\n            if (ele.hasOwnProperty('num')) {\n                cell.value = index + 1;\n            } else {\n                cell.value = ele.value;\n            }\n            cell.style.align.v = 'center';\n            cell.style.align.h = 'center';\n            });\n        });\n        // set the width of each column \n        for (var i = 0; i < 4; i++) {\n            sheet.col(i).width = 20;\n        }\n        file.saveAs('blob').then(function(content) {\n            saveAs(content, fileName + '.xlsx');\n        });\n\n        //  unfold the columns in order \n        function columnLine(column) {\n            column.map(ele => {\n            if (ele.children === undefined || ele.children.length === 0) {\n                columnLineArr.push(ele);\n            } else {\n                columnLine(ele.children);\n            }\n            });\n        }\n\n        //  initializes the header \n        function init(column, rowIndex, columnIndex) {\n            column.map((item, index) => {\n            let hCell = sheet.cell(rowIndex, columnIndex);\n            //  if there are no child elements,   all the columns \n            if (item.title === ' operation ') {\n                hCell.value = '';\n                return;\n            } else if (item.children === undefined || item.children.length === 0) {\n                //  add a cell to the first row \n                hCell.value = item.title;\n                hCell.vMerge = depth - rowIndex - 1;\n                hCell.style.align.h = 'center';\n                hCell.style.align.v = 'center';\n                columnIndex++;\n                // rowIndex++\n            } else {\n                let childrenNum = 0;\n                function getColumns(arr) {\n                arr.map(ele => {\n                    if (ele.children) {\n                    getColumns(ele.children);\n                    } else {\n                    childrenNum++;\n                    }\n                });\n                }\n                getColumns(item.children);\n                hCell.hMerge = childrenNum - 1;\n                hCell.value = item.title;\n                hCell.style.align.h = 'center';\n                hCell.style.align.v = 'center';\n                let rowCopy = rowIndex;\n                rowCopy++;\n                init(item.children, rowCopy, columnIndex);\n                //  next cell start \n                columnIndex = columnIndex + childrenNum;\n            }\n            });\n        }\n\n        //  gets table head rows \n        function getDepth(arr) {\n            const eleDepths = [];\n            arr.forEach(ele => {\n            let depth = 0;\n            if (Array.isArray(ele.children)) {\n                depth = getDepth(ele.children);\n            }\n            eleDepths.push(depth);\n            });\n            return 1 + max(eleDepths);\n        }\n\n        function max(arr) {\n            return arr.reduce((accu, curr) => {\n            if (curr > accu) return curr;\n            return accu;\n            });\n        }\n        //  calculates the number of header columns \n        function getColumns(arr) {\n            let columnNum = 0;\n            arr.map(ele => {\n            if (ele.children) {\n                getColumns(ele.children);\n            } else {\n                columnNum++;\n            }\n            });\n            return columnNum;\n        }\n\n    }\n\n    const handleLink = () => {\n        message.success('Download of your chat history will begin shortly');\n    }\n    const dataSource = [\n        {\n            key: '1',\n            name: 'Puja Srivastava',\n            agent_id: 1,\n            campaign_id: 32,\n            chatCount: 5,\n            chatDuration: '0:10:30',\n            customerName: 'Bhavin',\n            customerPhone: '99XXXX7008',\n            loanAccNo: 'LPXXXX1234',\n            chatInTime: '13:00:00',\n            chatOutTime: '13:02:15',\n            totalChatDuration: '0:02:15',\n            botTime: '0:01:10',\n            language: ['English', 'Hindi']\n        },\n        {\n            key: '2',\n            name: 'Dhruva Agrawal',\n            agent_id: 2,\n            campaign_id: 4,\n            chatCount: 10,\n            chatDuration: '1:05:15',\n            customerName: 'Sumeet',\n            customerPhone: '99XXXX7008',\n            loanAccNo: 'LPXXXX1234',\n            chatInTime: '13:30:00',\n            chatOutTime: '13:34:55',\n            totalChatDuration: '0:04:55',\n            botTime: '0:02:45',\n            language: ['English', 'Hindi', 'Tamil', 'Telugu', 'Gujarati']\n        },\n        {\n            key: '3',\n            name: 'Sourabh Choudhary',\n            agent_id: 3,\n            campaign_id: 23,\n            chatCount: 2,\n            chatDuration: '0:02:45',\n            customerName: 'Kapil',\n            customerPhone: '99XXXX7008',\n            loanAccNo: 'LPXXXX1234',\n            chatInTime: '12:32:00',\n            chatOutTime: '12:32:45',\n            totalChatDuration: '0:00:45',\n            botTime: '0:02:15',\n            language: ['English', 'Gujarati']\n        },\n        {\n            key: '4',\n            name: 'Aaina Khan',\n            agent_id: 4,\n            campaign_id: 1,\n            chatCount: 5,\n            chatDuration: '1:05:10',\n            customerName: 'Namita',\n            customerPhone: '99XXXX7008',\n            loanAccNo: 'LPXXXX1234',\n            chatInTime: '09:00:00',\n            chatOutTime: '09:45:45',\n            totalChatDuration: '0:05:45',\n            botTime: '0:01:10',\n            language: ['Hindi', 'Tamil']\n        },\n        {\n            key: '5',\n            name: 'Vijay Gupta',\n            agent_id: 5,\n            campaign_id: 21,\n            chatCount: 10,\n            chatDuration: '0:30:00',\n            customerName: 'Shalini',\n            customerPhone: '99XXXX7008',\n            loanAccNo: 'LPXXXX1904',\n            chatInTime: '11:00:00',\n            chatOutTime: '11:01:05',\n            totalChatDuration: '0:01:05',\n            botTime: '0:03:30',\n            language: ['Telugu', 'Kannada']\n        },\n        {\n            key: '6',\n            name: 'Wasim Ansari',\n            agent_id: 6,\n            campaign_id: 20,\n            chatCount: 3,\n            chatDuration: '0:42:20',\n            customerName: 'Rahul',\n            customerPhone: '99XXXX7890',\n            loanAccNo: 'LPXXXX1174',\n            chatInTime: '13:18:00',\n            chatOutTime: '13:22:15',\n            totalChatDuration: '0:04:15',\n            botTime: '0:02:00',\n            language: ['Hindi', 'Gujarati', 'English']\n        }\n    ];\n\n\n    const columns_dashboard = [\n        {\n            title: 'Agent ID',\n            key: 'agent_id',\n\t\t\tdataIndex: 'agent_id',\n\t\t},\n\t\t{\n            title: 'Agent Name',\n            key: 'name',\n\t\t\tdataIndex: 'name',\n\t\t\trender: (_, record) => (\n\t\t\t\t<div className=\"d-flex\">\n\t\t\t\t\t<AvatarStatus  key={record.id} src=\"/img/spoctocular_short.png\" name={record.name} subTitle={record.name.toLowerCase().split(' ').join('.') + \"@spocto.com\"}/>\n\t\t\t\t</div>\n\t\t\t),\n\t\t\tsorter: {\n\t\t\t\tcompare: (a, b) => {\n\t\t\t\t\ta = a.name.toLowerCase();\n\t\t\t\t\tb = b.name.toLowerCase();\n\t\t\t\t\treturn a > b ? -1 : b > a ? 1 : 0;\n\t\t\t\t},\n\t\t\t},\n        },\n        {\n            title: 'Chat Count',\n            key: 'chatCount',\n            dataIndex: 'chatCount',\n            render: count => (\n\t\t\t\t<Tag className =\"text-capitalize\" color={ count > 5 ? 'cyan' : 'red' }>{ count }</Tag>\n\t\t\t),\n\t\t\tsorter: {\n\t\t\t\tcompare: (a, b) => a.chatCount.length - b.chatCount.length,\n\t\t\t}\n        },\n        {\n            title: 'Total Chat Duration',\n            key: 'chatDuration',\n            dataIndex: 'chatDuration'\n\t\t},\n    ]\n\n    const columns_data = [\n        {\n            title: 'Customer Name',\n            key: 'customerName',\n\t\t\tdataIndex: 'customerName',\n        },\n        {\n            title: 'Customer Phone Number',\n            key: 'customerPhone',\n\t\t\tdataIndex: 'customerPhone',\n        },\n        {\n            title: 'Loan Account Number',\n            key: 'loanAccNo',\n\t\t\tdataIndex: 'loanAccNo',\n\t\t},\n\t\t{\n            title: 'Agent Name',\n            key: 'name',\n\t\t\tdataIndex: 'name',\n        },\n        {\n            title: 'Chat In-Time',\n            key: 'chatInTime',\n\t\t\tdataIndex: 'chatInTime',\n        },\n        {\n            title: 'Chat Out-Time',\n            key: 'chatOutTime',\n\t\t\tdataIndex: 'chatOutTime',\n        },\n        {\n            title: 'Chat Duration',\n            key: 'totaChatDuration',\n\t\t\tdataIndex: 'totalChatDuration',\n        },\n        {\n            title: 'Bot Chat Time',\n            key: 'botTime',\n\t\t\tdataIndex: 'botTime',\n        },\n        {\n            title: 'Chat History',\n            key: 'action',\n            render: (text, record) => (\n                <Space size=\"middle\">\n                    <a href=\"#\" onClick={ handleLink }>\n                        <LinkOutlined style={{ color: 'blue', fontSize: '1.5rem' }} />\n                    </a> \n                </Space>\n            ),\n        }\n    ]\n\n    function callback(key) {\n        console.log(key);\n    }\n\n    return (\n        <Card>\n            <Form.Item justify=\"center\" style={{ textAlign: 'center', marginTop: '2%' }}>\n                <Title level={1}>Agent Productivity Report</Title>\n            </Form.Item>\n            <Tabs defaultActiveKey=\"1\" onChange={ callback }>\n                <TabPane tab=\"Agent Dashboard\" key=\"1\">\n                <Table\n                    bordered\n                    dataSource={ dataSource }\n                    columns={ columns_dashboard }\n                />\n                </TabPane>\n                <TabPane tab=\"Agent Data\" key=\"2\">\n                <Table\n                    bordered\n                    dataSource={ dataSource }\n                    columns={ columns_data }\n                />\n                </TabPane>\n            </Tabs>\n\t\t</Card>\n    )\n}\n\nexport default APR"]},"metadata":{},"sourceType":"module"}