{"ast":null,"code":"var _jsxFileName = \"/Users/dhruvaagrawal/Desktop/Work/Spocto/CMS/app/src/views/app-views/ops-admin/UploadTransactions.js\";\nimport React, { useState } from 'react';\nimport { useHistory } from 'react-router';\nimport { InboxOutlined } from '@ant-design/icons';\nimport { Form, Button, Upload, Typography, message } from 'antd';\nimport FileMapping from 'assets/functions/FileMapping';\nconst {\n  Title\n} = Typography;\nconst {\n  Dragger\n} = Upload;\nconst formItemLayout = {\n  labelCol: {\n    span: 6\n  },\n  wrapperCol: {\n    span: 14\n  }\n};\nconst dragProps = {\n  name: 'file',\n  multiple: true,\n  headers: {\n    authorization: 'authorization-text'\n  },\n\n  onChange(info) {\n    const status = info.file.status;\n\n    if (status !== 'uploading') {\n      console.log(info.file, info.fileList);\n    }\n\n    if (status === 'done') {\n      message.success(`${info.file.name} file uploaded successfully.`); // FileMapping(info.file)\n    } else if (status === 'error') {\n      message.error(`${info.file.name} file upload failed.`);\n    }\n  }\n\n};\n\nconst normFile = e => {\n  console.log('Upload event:', e);\n\n  if (Array.isArray(e)) {\n    return e;\n  }\n\n  return e && e.fileList;\n};\n\nfunction getBase64(img, callback) {\n  const reader = new FileReader();\n  reader.addEventListener('load', () => callback(reader.result));\n  reader.readAsDataURL(img);\n}\n\nfunction beforeUpload(file) {\n  const isSpreadsheet = file.type === 'text/csv' || 'application/vnd.openxmlformats-officedocument.spreadsheetml.sheet';\n\n  if (!isSpreadsheet) {\n    message.error('You can only upload .CSV or .XLSX  files!');\n  }\n\n  return isSpreadsheet;\n}\n\nconst UploadTransactions = props => {\n  const {\n    push\n  } = useHistory();\n  const [loading, setLoading] = useState(false);\n\n  const onFinish = values => {\n    console.log('Received values of form: ', values);\n  };\n\n  const handleChange = info => {\n    if (info.file.status === 'uploading') {\n      setLoading(true);\n      return;\n    }\n\n    if (info.file.status === 'done') {\n      // Get this url from response in real world.\n      getBase64(info.file.originFileObj, imageUrl => this.setState({\n        imageUrl,\n        loading: false\n      }));\n    }\n  };\n\n  return /*#__PURE__*/React.createElement(Form, Object.assign({\n    name: \"validate_other\"\n  }, formItemLayout, {\n    onFinish: onFinish,\n    initialValues: {\n      rate: 3.5\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(Form.Item, {\n    justify: \"center\",\n    style: {\n      textAlign: 'center',\n      marginTop: '1%'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Title, {\n    level: 1,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 17\n    }\n  }, \"Upload Transactions\")), /*#__PURE__*/React.createElement(Form.Item, {\n    justify: \"center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Form.Item, {\n    name: \"fileUpload\",\n    valuePropName: \"fileList\",\n    getValueFromEvent: normFile,\n    noStyle: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Dragger, Object.assign({}, dragProps, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 21\n    }\n  }), /*#__PURE__*/React.createElement(\"p\", {\n    className: \"ant-upload-drag-icon\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(InboxOutlined, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 29\n    }\n  })), /*#__PURE__*/React.createElement(\"p\", {\n    className: \"ant-upload-text\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 25\n    }\n  }, \"Click or drag file to this area to upload\"), /*#__PURE__*/React.createElement(\"p\", {\n    className: \"ant-upload-hint\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 25\n    }\n  }, \"Support for single and bulk upload.\")))), /*#__PURE__*/React.createElement(Form.Item, {\n    style: {\n      display: 'flex',\n      justifyContent: 'center',\n      alignItems: 'center'\n    },\n    className: \"mt-5\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    onClick: () => push(\"app/journeys/dashboard\"),\n    variant: \"contained\",\n    type: \"primary\",\n    style: {\n      width: '100%',\n      height: '3rem',\n      fontSize: '1.25rem'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 17\n    }\n  }, \"Create Transactions\")));\n};\n\nexport default UploadTransactions;","map":{"version":3,"sources":["/Users/dhruvaagrawal/Desktop/Work/Spocto/CMS/app/src/views/app-views/ops-admin/UploadTransactions.js"],"names":["React","useState","useHistory","InboxOutlined","Form","Button","Upload","Typography","message","FileMapping","Title","Dragger","formItemLayout","labelCol","span","wrapperCol","dragProps","name","multiple","headers","authorization","onChange","info","status","file","console","log","fileList","success","error","normFile","e","Array","isArray","getBase64","img","callback","reader","FileReader","addEventListener","result","readAsDataURL","beforeUpload","isSpreadsheet","type","UploadTransactions","props","push","loading","setLoading","onFinish","values","handleChange","originFileObj","imageUrl","setState","rate","textAlign","marginTop","display","justifyContent","alignItems","width","height","fontSize"],"mappings":"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","sourcesContent":["import React, { useState } from 'react'\nimport { useHistory } from 'react-router'\nimport { InboxOutlined } from '@ant-design/icons';\nimport { Form, Button, Upload, Typography, message } from 'antd';\nimport FileMapping from 'assets/functions/FileMapping'\n\nconst { Title } = Typography\nconst { Dragger } = Upload\n\nconst formItemLayout = {\n    labelCol: {\n        span: 6,\n    },\n    wrapperCol: {\n        span: 14,\n    },\n};\n\nconst dragProps = {\n    name: 'file',\n    multiple: true,\n    headers: {\n        authorization: 'authorization-text',\n    },\n    onChange(info) {\n        const status = info.file.status;\n        if (status !== 'uploading') {\n            console.log(info.file, info.fileList);\n        }\n        if (status === 'done') {\n            message.success(`${info.file.name} file uploaded successfully.`);\n            // FileMapping(info.file)\n        } else if (status === 'error') {\n            message.error(`${info.file.name} file upload failed.`);\n        } \n    },\n};\n  \nconst normFile = (e) => {\n    console.log('Upload event:', e);\n    if (Array.isArray(e)) {\n      return e;\n    }\n    return e && e.fileList;\n};\n  \nfunction getBase64(img, callback) {\n    const reader = new FileReader();\n    reader.addEventListener('load', () => callback(reader.result));\n    reader.readAsDataURL(img);\n  }\n  \nfunction beforeUpload(file) {\n    const isSpreadsheet = file.type === 'text/csv' || 'application/vnd.openxmlformats-officedocument.spreadsheetml.sheet';\n    if (!isSpreadsheet) {\n      message.error('You can only upload .CSV or .XLSX  files!');\n    }\n    return isSpreadsheet;\n}\n  \nconst UploadTransactions = props => {\n\n    const { push } = useHistory()\n\n    const [ loading, setLoading ] = useState(false)\n\n    const onFinish = (values) => {\n        console.log('Received values of form: ', values);\n    };\n\n    const handleChange = (info) => {\n        if (info.file.status === 'uploading') {\n            setLoading(true);\n            return;\n        }\n        if (info.file.status === 'done') {\n            // Get this url from response in real world.\n            getBase64(info.file.originFileObj, imageUrl => this.setState({\n            imageUrl,\n            loading: false,\n          }));\n        }\n      }\n\n    return (\n        <Form\n            name=\"validate_other\"\n            {...formItemLayout}\n            onFinish={onFinish}\n            initialValues={{ rate: 3.5 }}\n        >\n            <Form.Item justify=\"center\" style={{ textAlign: 'center', marginTop: '1%' }}>\n                <Title level={1}>Upload Transactions</Title>\n            </Form.Item>\n            <Form.Item justify=\"center\">\n                <Form.Item name=\"fileUpload\" valuePropName=\"fileList\" getValueFromEvent={ normFile } noStyle>\n                    <Dragger { ...dragProps }>\n                        <p className=\"ant-upload-drag-icon\">\n                            <InboxOutlined />\n                        </p>\n                        <p className=\"ant-upload-text\">Click or drag file to this area to upload</p>\n                        <p className=\"ant-upload-hint\">Support for single and bulk upload.</p>\n                    </Dragger>\n                </Form.Item>\n            </Form.Item>\n            <Form.Item style={{display: 'flex', justifyContent: 'center', alignItems: 'center'}} className=\"mt-5\">\n                <Button onClick={ () => push(\"app/journeys/dashboard\")} variant=\"contained\" type=\"primary\" style={{ width: '100%', height: '3rem', fontSize: '1.25rem' }}>Create Transactions</Button>\n            </Form.Item>\n      </Form>\n    );\n};  \n\nexport default UploadTransactions"]},"metadata":{},"sourceType":"module"}