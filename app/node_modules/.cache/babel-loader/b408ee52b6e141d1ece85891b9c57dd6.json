{"ast":null,"code":"var _jsxFileName = \"/Users/dhruvaagrawal/Desktop/Work/Spocto/CMS/app/src/views/app-views/ops-admin/FileUploadForm.js\";\nimport React, { useState, useRef } from 'react';\nimport { Link } from 'react-router-dom';\nimport { Typography, Form, Button, Tag, Row, Col, Card, Select, Divider, Input } from 'antd';\nimport { CloudUploadOutlined, LeftCircleOutlined, RightCircleOutlined, PlusOutlined } from '@ant-design/icons';\nimport axios from 'axios';\nimport readXlsxFile from 'read-excel-file';\nimport { API_LOCAL_BASE_URL, API_LOCAL_DATA_POST_URL } from 'constants/ApiConstant';\nimport { StyledButton, StyledNavButton } from 'constants/StyledComponents';\nimport { MONTHS } from 'constants/DateConstant';\nimport { APP_PREFIX_PATH } from 'configs/AppConfig';\nimport { getLangColor, getCustomerColor, getChannelColor, getProductColor, getSegmentColor } from 'constants/TagColor';\nconst {\n  Title\n} = Typography;\nconst {\n  Option\n} = Select;\nlet index = 0;\n\nconst FileUploadForm = props => {\n  // ---------------------------- VARIABLE ASSIGNMENT ---------------------------- //\n  // let fileReader;\n  const [file, setFile] = useState(null); // const [ rows, setRows ] = useState(null)\n\n  const [visible, setVisible] = useState(false); // const [ show, setShow ] = useState(false)\n\n  const [buttonVisible, setButtonVisible] = useState(true);\n  const [checked] = useState(false);\n  const [createTable, setCreateTable] = useState([]);\n  const [customer, setCustomer] = useState();\n  const [channel, setChannel] = useState();\n  const [product, setProduct] = useState();\n  const [segment, setSegment] = useState();\n  const [languages, setLanguages] = useState([]);\n  const [addName, setAddName] = useState('');\n  const [clients, setClients] = useState(['Axis Bank', 'ICICI Bank', 'RBL', 'TVS', 'SBI', 'IDFC', 'Bajaj', 'TCL', 'CBD', 'ENBD', 'TCHFL', 'Kotak', 'Avanse']); // Create a reference to the hidden file input element\n\n  const hiddenFileInput = useRef(null);\n  const formItemLayout = {\n    labelCol: {\n      span: 6\n    },\n    wrapperCol: {\n      span: 14\n    }\n  };\n  const map = {\n    'Product': 'product',\n    'Segment': 'segment',\n    'Type': 'type',\n    'Level': 'level',\n    'Category': 'category',\n    'Content': 'content',\n    'Vendor': 'vendor',\n    'Languages': 'languages',\n    'Status': 'status'\n  }; // --------------------------------------------------------------------- //\n  // ------------------------ FUNCTION ASSIGNMENT ------------------------ //\n  // --------------------------------------------------------------------- //\n\n  const showButtons = () => {\n    return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Card, {\n      style: {\n        width: '120%'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(Form.Item, {\n      style: {\n        display: 'flex',\n        justifyContent: 'center',\n        alignItems: 'center',\n        marginTop: 0,\n        marginBottom: 0,\n        paddingtop: 0,\n        paddingTop: 0\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(Row, {\n      gutter: 16,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(Col, {\n      span: 8,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 29\n      }\n    }, renderClients()), /*#__PURE__*/React.createElement(Col, {\n      span: 8,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 29\n      }\n    }, renderChannels()), /*#__PURE__*/React.createElement(Col, {\n      span: 8,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 29\n      }\n    }, renderProducts())), /*#__PURE__*/React.createElement(Row, {\n      gutter: 16,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(Col, {\n      span: 8,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 29\n      }\n    }, renderSegments()), /*#__PURE__*/React.createElement(Col, {\n      span: 16,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 29\n      }\n    }, renderLanguages())))), /*#__PURE__*/React.createElement(StyledButton, {\n      onClick: handleClick,\n      style: {\n        marginTop: '5%'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(CloudUploadOutlined, {\n      style: {\n        marginRight: '2%'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 83\n      }\n    }), \" Upload File\"), /*#__PURE__*/React.createElement(Row, {\n      style: {\n        marginTop: '7.5%',\n        display: 'flex',\n        justifyContent: 'center',\n        alignItems: 'center'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(StyledNavButton, {\n      style: {\n        marginRight: '3%'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(LeftCircleOutlined, {\n      style: {\n        marginRight: '2%'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 67\n      }\n    }), \"Go to recommendations\"), /*#__PURE__*/React.createElement(Link, {\n      to: `${APP_PREFIX_PATH}/journeys/journey-ivr/transaction`,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(StyledNavButton, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 25\n      }\n    }, \"Go to transactions\", /*#__PURE__*/React.createElement(RightCircleOutlined, {\n      style: {\n        marginLeft: '2%'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 60\n      }\n    })))));\n  };\n\n  const handleClick = () => {\n    hiddenFileInput.current.click();\n  };\n\n  const onChange = async e => {\n    e.preventDefault();\n    let tableArray = [];\n    const formData = new FormData();\n    let todayDate = new Date();\n    let formattedDay = `${todayDate.getDate() > 3 && todayDate.getDate() < 21 ? `${todayDate.getDate()}th` : todayDate.getDate() in [1, 21, 31] ? `${todayDate.getDate()}st` : todayDate.getDate() in [2, 22] ? `${todayDate.getDate()}nd` : `${todayDate.getDate()}rd`}`;\n    let formattedTime = `${todayDate.getHours()}:${todayDate.getMinutes() < 10 ? `0${todayDate.getMinutes()}` : todayDate.getMinutes()} hrs`;\n    setFile(e.target.files[0]);\n    await readXlsxFile(e.target.files[0], {\n      map\n    }).then(async ({\n      rows\n    }) => {\n      rows.forEach(row => (row.customer_name = customer, row.channel = channel, row.language = languages, row.status = 'Client Approved', row.last_updated_on = `${formattedDay} ${MONTHS[todayDate.getMonth()]}, ${todayDate.getFullYear()} at ${formattedTime}`, row.last_updated_by = 'Admin', row.version = 1));\n      formData.append('client_data', rows);\n      await axios({\n        method: 'post',\n        baseURL: API_LOCAL_BASE_URL,\n        url: API_LOCAL_DATA_POST_URL,\n        data: rows\n      }).then(res => console.log(`Connection with STATUS ${res.status} has been established.`)).catch(function (err) {\n        if (err.response) {\n          console.log(err.response, err.response.data, err.response.status, err.response.headers);\n        } else if (err.request) {\n          console.log(err.request);\n        } else {\n          console.log('Error', err.message);\n        }\n\n        console.log(err.config);\n      });\n    }).then( // function(res) {\n    // for (let i = 0; i < 3; i++) {\n    //     tableArray.push(res[i])\n    // }\n    console.log(tableArray), setCreateTable(tableArray), setVisible(true), setButtonVisible(false));\n  };\n\n  const onSelectCustomer = event => setCustomer(event);\n\n  const onSelectChannel = event => setChannel(event);\n\n  const onSelectProduct = event => setProduct(event);\n\n  const onSelectSegment = event => setSegment(event);\n\n  const onSelectLanguages = event => setLanguages(event);\n\n  const onNameChange = event => {\n    setAddName(event.target.value);\n  };\n\n  const onShowTableSelect = () => {\n    console.log('Hurray!');\n  };\n\n  const renderClients = () => {\n    const addItem = () => {\n      console.log('addItem');\n      setClients([...clients, addName || `New customer ${index++}`]);\n      setAddName('');\n    };\n\n    return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Form.Item, {\n      name: \"client\",\n      label: \"Client\",\n      rules: [{\n        required: true,\n        message: 'Please select a client'\n      }],\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 191,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(Select, {\n      showArrow: true,\n      style: {\n        width: '100%'\n      },\n      onChange: onSelectCustomer,\n      dropdownRender: menu => /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 197,\n          columnNumber: 29\n        }\n      }, menu, /*#__PURE__*/React.createElement(Divider, {\n        style: {\n          margin: '4px 0'\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 199,\n          columnNumber: 33\n        }\n      }), /*#__PURE__*/React.createElement(\"div\", {\n        style: {\n          display: 'flex',\n          flexWrap: 'nowrap',\n          padding: 8\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 200,\n          columnNumber: 37\n        }\n      }, /*#__PURE__*/React.createElement(Input, {\n        style: {\n          flex: 'auto'\n        },\n        value: addName,\n        onChange: onNameChange,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 201,\n          columnNumber: 41\n        }\n      }), /*#__PURE__*/React.createElement(\"a\", {\n        style: {\n          flex: 'none',\n          padding: '8px',\n          display: 'block',\n          cursor: 'pointer'\n        },\n        onClick: addItem,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 202,\n          columnNumber: 41\n        }\n      }, /*#__PURE__*/React.createElement(PlusOutlined, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 206,\n          columnNumber: 45\n        }\n      })))),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 192,\n        columnNumber: 21\n      }\n    }, clients.map(client => /*#__PURE__*/React.createElement(Option, {\n      value: client,\n      style: {\n        lineHeight: '32px',\n        width: '100%'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 213,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(Tag, {\n      color: getCustomerColor(client),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 214,\n        columnNumber: 33\n      }\n    }, client))))));\n  };\n\n  const renderChannels = () => {\n    const channels = ['smartVoice', 'smartText', 'smartEmail'];\n    return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Form.Item, {\n      name: \"channel\",\n      label: \"Channel\",\n      rules: [{\n        required: true,\n        message: 'Please select a channel'\n      }],\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 228,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(Select, {\n      showArrow: true,\n      style: {\n        width: '100%'\n      },\n      onChange: onSelectChannel,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 229,\n        columnNumber: 21\n      }\n    }, channels.map(channel => /*#__PURE__*/React.createElement(Option, {\n      value: channel,\n      style: {\n        lineHeight: '32px',\n        width: '100%'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 231,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(Tag, {\n      color: getChannelColor(channel),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 232,\n        columnNumber: 33\n      }\n    }, channel))))));\n  };\n\n  const renderProducts = () => {\n    const products = ['MFI', 'Loan', 'Credit Card', 'Auto Loan', 'Agri Loan', 'Tractor Loan', 'EMI on Debit Card', 'CD-SNC', 'Common Borrwers', 'Pay Later'];\n    return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Form.Item, {\n      name: \"product\",\n      label: \"Product\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 246,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(Select, {\n      showArrow: true,\n      style: {\n        width: '100%'\n      },\n      onChange: onSelectProduct,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 247,\n        columnNumber: 21\n      }\n    }, products.map(product => /*#__PURE__*/React.createElement(Option, {\n      value: product,\n      style: {\n        lineHeight: '32px',\n        width: '100%'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 249,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(Tag, {\n      color: getProductColor(product),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 250,\n        columnNumber: 33\n      }\n    }, product))))));\n  };\n\n  const renderLanguages = () => {\n    const languages = ['English', 'Hindi', 'Tamil', 'Telugu', 'Kannada', 'Marathi', 'Gujarati', 'Bengali', 'Punjabi', 'Malayalam'];\n    return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Form.Item, {\n      name: \"language\",\n      label: \"Languages\",\n      rules: [{\n        required: true,\n        message: 'Please select the languages'\n      }],\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 264,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(Select, {\n      mode: \"multiple\",\n      showArrow: true,\n      style: {\n        width: '100%'\n      },\n      onChange: onSelectLanguages,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 265,\n        columnNumber: 21\n      }\n    }, languages.map(language => /*#__PURE__*/React.createElement(Option, {\n      value: language,\n      style: {\n        lineHeight: '32px',\n        width: '100%'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 267,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(Tag, {\n      color: getLangColor(language),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 268,\n        columnNumber: 33\n      }\n    }, language))))));\n  };\n\n  const renderSegments = () => {\n    const segments = ['Pre Due', 'Post Due', 'Bucket X', 'NPA', 'W/Off', 'Phase 1', 'Phase 2', 'Phase 3', 'Phase 4 (Pre 90)', 'Phase 4 (90+)'];\n    return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Form.Item, {\n      name: \"segment\",\n      label: \"Segment\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 282,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(Select, {\n      showArrow: true,\n      style: {\n        width: '100%'\n      },\n      onChange: onSelectSegment,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 283,\n        columnNumber: 21\n      }\n    }, segments.map(segment => /*#__PURE__*/React.createElement(Option, {\n      value: segment,\n      style: {\n        lineHeight: '32px',\n        width: '100%'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 285,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(Tag, {\n      color: getSegmentColor(segment),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 286,\n        columnNumber: 33\n      }\n    }, segment))))));\n  }; // const showTableHeaders = array => {\n  //     newArr = array[0]\n  //     console.log(newArr)\n  //     return (\n  //         <>\n  //         { newArr.map( (num, index) => (\n  //             <Form.Item\n  //                 name={ num }\n  //                 label={ num }\n  //                 hasFeedback\n  //             >\n  //                 <Row>\n  //                     <Select key={ index } labelInValue placeholder={`Please enter ${ num }`} onSelect={ onShowTableSelect }>\n  //                         { newArr.map( (num, index) => {\n  //                             return <Option key={ index } value={ num }>{ num }</Option>\n  //                         }) }\n  //                     </Select>\n  //                 </Row>\n  //             </Form.Item>\n  //         ))}\n  //         </>\n  //     )\n  // }\n  // --------------------------------------------------------------------- //\n  // --------------------------------------------------------------------- //\n  // --------------------------------------------------------------------- //\n\n\n  return /*#__PURE__*/React.createElement(Form, Object.assign({\n    name: \"validate_other\"\n  }, formItemLayout, {\n    textAlign: \"center\",\n    style: buttonVisible ? {\n      height: '500px'\n    } : {\n      height: '100%'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 328,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(Form.Item, {\n    style: {\n      display: 'flex',\n      justifyContent: 'center',\n      alignItems: 'center',\n      textAlign: 'center'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 334,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    type: \"file\",\n    onChange: onChange,\n    ref: hiddenFileInput,\n    style: {\n      display: 'none',\n      left: '15%'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 335,\n      columnNumber: 8\n    }\n  }), buttonVisible ? showButtons() : /*#__PURE__*/React.createElement(Title, {\n    level: 3,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 336,\n      columnNumber: 51\n    }\n  }, \"Please map the headings\")));\n};\n\nexport default FileUploadForm;","map":{"version":3,"sources":["/Users/dhruvaagrawal/Desktop/Work/Spocto/CMS/app/src/views/app-views/ops-admin/FileUploadForm.js"],"names":["React","useState","useRef","Link","Typography","Form","Button","Tag","Row","Col","Card","Select","Divider","Input","CloudUploadOutlined","LeftCircleOutlined","RightCircleOutlined","PlusOutlined","axios","readXlsxFile","API_LOCAL_BASE_URL","API_LOCAL_DATA_POST_URL","StyledButton","StyledNavButton","MONTHS","APP_PREFIX_PATH","getLangColor","getCustomerColor","getChannelColor","getProductColor","getSegmentColor","Title","Option","index","FileUploadForm","props","file","setFile","visible","setVisible","buttonVisible","setButtonVisible","checked","createTable","setCreateTable","customer","setCustomer","channel","setChannel","product","setProduct","segment","setSegment","languages","setLanguages","addName","setAddName","clients","setClients","hiddenFileInput","formItemLayout","labelCol","span","wrapperCol","map","showButtons","width","display","justifyContent","alignItems","marginTop","marginBottom","paddingtop","paddingTop","renderClients","renderChannels","renderProducts","renderSegments","renderLanguages","handleClick","marginRight","marginLeft","current","click","onChange","e","preventDefault","tableArray","formData","FormData","todayDate","Date","formattedDay","getDate","formattedTime","getHours","getMinutes","target","files","then","rows","forEach","row","customer_name","language","status","last_updated_on","getMonth","getFullYear","last_updated_by","version","append","method","baseURL","url","data","res","console","log","catch","err","response","headers","request","message","config","onSelectCustomer","event","onSelectChannel","onSelectProduct","onSelectSegment","onSelectLanguages","onNameChange","value","onShowTableSelect","addItem","required","menu","margin","flexWrap","padding","flex","cursor","client","lineHeight","channels","products","segments","height","textAlign","left"],"mappings":"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","sourcesContent":["import React, { useState, useRef } from 'react'\nimport { Link } from 'react-router-dom'\nimport { Typography, Form, Button, Tag, Row, Col, Card, Select, Divider, Input } from 'antd'\nimport { CloudUploadOutlined, LeftCircleOutlined, RightCircleOutlined, PlusOutlined } from '@ant-design/icons'\nimport axios from 'axios'\nimport readXlsxFile from 'read-excel-file'\nimport { API_LOCAL_BASE_URL, API_LOCAL_DATA_POST_URL, } from 'constants/ApiConstant'\nimport { StyledButton, StyledNavButton } from 'constants/StyledComponents'\nimport { MONTHS } from 'constants/DateConstant'\nimport { APP_PREFIX_PATH } from 'configs/AppConfig'\nimport { getLangColor, getCustomerColor, getChannelColor, getProductColor, getSegmentColor } from 'constants/TagColor'\n\nconst { Title } = Typography\nconst { Option } = Select\n\nlet index = 0\n\nconst FileUploadForm = props => {\n\n    // ---------------------------- VARIABLE ASSIGNMENT ---------------------------- //\n\n    // let fileReader;\n\n    const [ file, setFile ] = useState(null)\n    // const [ rows, setRows ] = useState(null)\n    const [ visible, setVisible ] = useState(false)\n    // const [ show, setShow ] = useState(false)\n    const [ buttonVisible, setButtonVisible ] = useState(true)\n    const [ checked ] = useState(false)\n    const [ createTable, setCreateTable ] = useState([])\n    const [ customer, setCustomer ] = useState()\n    const [ channel, setChannel ] = useState()\n    const [ product, setProduct ] = useState()\n    const [ segment, setSegment ] = useState()\n    const [ languages, setLanguages ] = useState([])\n    const [ addName, setAddName ] = useState('')\n    const [ clients, setClients ] = useState(['Axis Bank', 'ICICI Bank', 'RBL', 'TVS', 'SBI', 'IDFC', 'Bajaj', 'TCL', 'CBD', 'ENBD', 'TCHFL', 'Kotak', 'Avanse'])\n\n    // Create a reference to the hidden file input element\n    const hiddenFileInput = useRef(null);\n\n    const formItemLayout = {\n        labelCol: {\n            span: 6,\n        },\n        wrapperCol: {\n            span: 14,\n        },\n    }; \n\n    const map = {\n        'Product': 'product',\n        'Segment': 'segment',\n        'Type': 'type',\n        'Level': 'level',\n        'Category': 'category',\n        'Content': 'content',\n        'Vendor': 'vendor',\n        'Languages': 'languages',\n        'Status': 'status'\n    }\n\n    // --------------------------------------------------------------------- //\n    // ------------------------ FUNCTION ASSIGNMENT ------------------------ //\n    // --------------------------------------------------------------------- //\n\n    const showButtons = () => {\n\n        return (\n            <>\n                <Card style={{ width: '120%' }}>\n                    <Form.Item style={{ display: 'flex', justifyContent: 'center', alignItems: 'center', marginTop: 0, marginBottom: 0, paddingtop: 0, paddingTop: 0 }}>\n                        <Row gutter={16}>\n                            <Col span={8}>\n                                { renderClients() }\n                            </Col>\n                            <Col span={8}>\n                                { renderChannels() }\n                            </Col>\n                            <Col span={8}>\n                                { renderProducts() }\n                            </Col>\n                        </Row>\n                        <Row gutter={16}>\n                            <Col span={8}>\n                                { renderSegments() }\n                            </Col>\n                            <Col span={16}>\n                                { renderLanguages() }\n                            </Col>\n                        </Row>\n                    </Form.Item>\n                </Card>\n                <StyledButton onClick={ handleClick } style={{ marginTop: '5%' }}><CloudUploadOutlined style={{ marginRight: '2%' }} /> Upload File</StyledButton>\n                <Row style={{ marginTop: '7.5%', display: 'flex', justifyContent: 'center', alignItems: 'center'}}>\n                    <StyledNavButton style={{ marginRight: '3%'}}><LeftCircleOutlined style={{ marginRight: '2%' }} />Go to recommendations</StyledNavButton>\n                    <Link to={`${APP_PREFIX_PATH}/journeys/journey-ivr/transaction`}>\n                        <StyledNavButton>Go to transactions<RightCircleOutlined style={{ marginLeft: '2%' }} /></StyledNavButton>\n                    </Link>\n                </Row>\n            </>\n        )\n    }\n\n    const handleClick = () => {\n        hiddenFileInput.current.click()\n    }\n\t\n    const onChange = async (e) => {\n        e.preventDefault()\n\n        let tableArray = []\n        const formData = new FormData()\n\n        let todayDate = new Date()\n        let formattedDay = `${ todayDate.getDate() > 3 && todayDate.getDate() < 21 ? `${todayDate.getDate()}th` : todayDate.getDate() in [1, 21, 31] ? `${todayDate.getDate()}st` : todayDate.getDate() in [2, 22] ? `${todayDate.getDate()}nd` : `${todayDate.getDate()}rd` }`\n        let formattedTime = `${todayDate.getHours()}:${todayDate.getMinutes() < 10 ? `0${todayDate.getMinutes()}` : todayDate.getMinutes()} hrs`\n        \n        setFile(e.target.files[0])\n\n        await readXlsxFile(e.target.files[0], { map })\n        .then( async ({ rows }) => {\n            rows.forEach( row => (\n                row.customer_name = customer,\n                row.channel = channel,\n                row.language = languages,\n                row.status = 'Client Approved',\n                row.last_updated_on = `${formattedDay} ${MONTHS[todayDate.getMonth()]}, ${todayDate.getFullYear()} at ${formattedTime}`,\n                row.last_updated_by = 'Admin',\n                row.version = 1\n            ))\n            formData.append('client_data', rows)\n            await axios({\n                method: 'post',\n                baseURL: API_LOCAL_BASE_URL,\n                url: API_LOCAL_DATA_POST_URL,\n                data: rows\n            })\n            .then( res => console.log(`Connection with STATUS ${res.status} has been established.`))\n            .catch( function(err) {\n                if (err.response) {\n                    console.log(err.response, err.response.data, err.response.status, err.response.headers)\n                } else if (err.request) {\n                    console.log(err.request)\n                } else {\n                    console.log('Error', err.message);\n                }\n                console.log(err.config);\n            })\n        })\n        .then( \n            // function(res) {\n            // for (let i = 0; i < 3; i++) {\n            //     tableArray.push(res[i])\n            // }\n            console.log(tableArray),\n            setCreateTable(tableArray),\n            setVisible(true),\n            setButtonVisible(false)\n        )\n    }\n\n    const onSelectCustomer = event => setCustomer(event)\n\n    const onSelectChannel = event => setChannel(event)\n\n    const onSelectProduct = event => setProduct(event)\n\n    const onSelectSegment = event => setSegment(event)\n\n    const onSelectLanguages = event => setLanguages(event)\n\n    const onNameChange = event => {\n        setAddName(event.target.value)\n    }\n\n    const onShowTableSelect = () => {\n        console.log('Hurray!')\n    }\n    \n    const renderClients = () => {\n\n        const addItem = () => {\n            console.log('addItem')\n            setClients([ ...clients, addName || `New customer ${index++}`])\n            setAddName('')\n        }\n\n        return (\n            <>\n                <Form.Item name=\"client\" label=\"Client\" rules={[{ required: true, message: 'Please select a client' }]}>\n                    <Select \n                        showArrow \n                        style={{ width: '100%' }}\n                        onChange={ onSelectCustomer }\n                        dropdownRender={ menu => (\n                            <div>\n                                { menu }\n                                <Divider style={{ margin: '4px 0' }} />\n                                    <div style={{ display: 'flex', flexWrap: 'nowrap', padding: 8 }}>\n                                        <Input style={{ flex: 'auto' }} value={ addName } onChange={ onNameChange } />\n                                        <a\n                                            style={{ flex: 'none', padding: '8px', display: 'block', cursor: 'pointer' }}\n                                            onClick={ addItem }\n                                        >\n                                            <PlusOutlined />\n                                        </a>\n                                    </div>\n                            </div>\n                        )}\n                    >\n                        { clients.map( client => (\n                            <Option value={ client } style={{ lineHeight: '32px', width: '100%' }}>\n                                <Tag color={ getCustomerColor(client) }>{ client }</Tag>\n                            </Option>\n                        )) }\n                    </Select>\n                </Form.Item>  \n            </> \n        )\n    }\n\n    const renderChannels = () => {\n        const channels = ['smartVoice', 'smartText', 'smartEmail']\n\n        return (\n            <>\n                <Form.Item name=\"channel\" label=\"Channel\" rules={[{ required: true, message: 'Please select a channel' }]}>\n                    <Select showArrow style={{ width: '100%' }} onChange={ onSelectChannel }>\n                        { channels.map( channel => (\n                            <Option value={ channel } style={{ lineHeight: '32px', width: '100%' }}>\n                                <Tag color={ getChannelColor(channel) }>{ channel }</Tag>\n                            </Option>\n                        )) }\n                    </Select>\n                </Form.Item>\n            </>\n        )\n    }\n\n    const renderProducts = () => {\n        const products = ['MFI', 'Loan', 'Credit Card', 'Auto Loan', 'Agri Loan', 'Tractor Loan', 'EMI on Debit Card', 'CD-SNC', 'Common Borrwers', 'Pay Later']\n\n        return (\n            <>\n                <Form.Item name=\"product\" label=\"Product\">\n                    <Select showArrow style={{ width: '100%' }} onChange={ onSelectProduct }>\n                        { products.map( product => (\n                            <Option value={ product } style={{ lineHeight: '32px', width: '100%' }}>\n                                <Tag color={ getProductColor(product) }>{ product }</Tag>\n                            </Option>\n                        )) }\n                    </Select>\n                </Form.Item>\n            </>\n        )\n    }\n\n    const renderLanguages = () => {\n        const languages = ['English', 'Hindi', 'Tamil', 'Telugu', 'Kannada', 'Marathi', 'Gujarati', 'Bengali', 'Punjabi', 'Malayalam']\n\n        return (\n            <>\n                <Form.Item name=\"language\" label=\"Languages\" rules={[{ required: true, message: 'Please select the languages' }]}>\n                    <Select mode=\"multiple\" showArrow style={{ width: '100%' }} onChange={ onSelectLanguages }>\n                        { languages.map( language => (\n                            <Option value={ language } style={{ lineHeight: '32px', width: '100%' }}>\n                                <Tag color={ getLangColor(language) }>{ language }</Tag>\n                            </Option>\n                        )) }\n                    </Select>\n                </Form.Item>\n            </>\n        )\n    }\n\n    const renderSegments = () => {\n        const segments = ['Pre Due', 'Post Due', 'Bucket X', 'NPA', 'W/Off', 'Phase 1', 'Phase 2', 'Phase 3', 'Phase 4 (Pre 90)', 'Phase 4 (90+)']\n\n        return (\n            <>\n                <Form.Item name=\"segment\" label=\"Segment\">\n                    <Select showArrow style={{ width: '100%' }} onChange={ onSelectSegment }>\n                        { segments.map( segment => (\n                            <Option value={ segment } style={{ lineHeight: '32px', width: '100%' }}>\n                                <Tag color={ getSegmentColor(segment) }>{ segment }</Tag>\n                            </Option>\n                        )) }\n                    </Select>\n                </Form.Item>\n            </>\n        )\n    }\n\n    \n    // const showTableHeaders = array => {\n\n    //     newArr = array[0]\n\n    //     console.log(newArr)\n        \n    //     return (\n    //         <>\n    //         { newArr.map( (num, index) => (\n    //             <Form.Item\n    //                 name={ num }\n    //                 label={ num }\n    //                 hasFeedback\n    //             >\n    //                 <Row>\n    //                     <Select key={ index } labelInValue placeholder={`Please enter ${ num }`} onSelect={ onShowTableSelect }>\n    //                         { newArr.map( (num, index) => {\n    //                             return <Option key={ index } value={ num }>{ num }</Option>\n    //                         }) }\n    //                     </Select>\n    //                 </Row>\n    //             </Form.Item>\n    //         ))}\n    //         </>\n    //     )\n    // }\n\n    // --------------------------------------------------------------------- //\n    // --------------------------------------------------------------------- //\n    // --------------------------------------------------------------------- //\n\n\treturn (\n        <Form\n            name=\"validate_other\"\n            { ...formItemLayout }\n            textAlign=\"center\"\n            style={ buttonVisible ? { height: '500px' } : { height: '100%' }}\n        >\n            <Form.Item style={{ display: 'flex', justifyContent: 'center', alignItems: 'center', textAlign: 'center' }}>\n\t\t\t    <input type=\"file\" onChange={ onChange } ref={ hiddenFileInput }  style={{ display: 'none', left: '15%' }} />\n                { buttonVisible ? showButtons() : <Title level={3}>Please map the headings</Title>}\n            </Form.Item>\n            {/* <Form.Item style={{ display: 'flex', justifyContent: 'center', alignItems: 'center' }} className=\"mt-5\">\n                    <Row>\n                        { visible && showTableHeaders(createTable) }\n                    </Row>\n            </Form.Item> */}\n\t\t</Form>\n\t)\n        \n}\nexport default FileUploadForm"]},"metadata":{},"sourceType":"module"}