{"ast":null,"code":"var _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) {\n  return typeof obj;\n} : function (obj) {\n  return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj;\n};\n\nexport default function convertMapToSchema(map) {\n  var schema = {};\n\n  for (var _iterator = Object.keys(map), _isArray = Array.isArray(_iterator), _i = 0, _iterator = _isArray ? _iterator : _iterator[Symbol.iterator]();;) {\n    var _ref;\n\n    if (_isArray) {\n      if (_i >= _iterator.length) break;\n      _ref = _iterator[_i++];\n    } else {\n      _i = _iterator.next();\n      if (_i.done) break;\n      _ref = _i.value;\n    }\n\n    var key = _ref;\n    var prop = map[key];\n    var type = void 0;\n\n    if ((typeof prop === 'undefined' ? 'undefined' : _typeof(prop)) === 'object') {\n      prop = Object.keys(map[key])[0];\n      type = convertMapToSchema(map[key][prop]);\n    }\n\n    schema[key] = {\n      prop: prop\n    };\n\n    if (type) {\n      schema[key].type = type;\n    }\n  }\n\n  return schema;\n}","map":null,"metadata":{},"sourceType":"module"}