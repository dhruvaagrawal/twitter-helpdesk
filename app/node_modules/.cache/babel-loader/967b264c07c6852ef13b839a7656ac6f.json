{"ast":null,"code":"var _jsxFileName = \"/Users/dhruvaagrawal/Desktop/Work/Spocto/CMS/app/src/views/app-views/ops-admin/FormOptions.js\";\nimport React, { useState } from 'react';\nimport { Form, Select, Button, Checkbox, Row, Col, Typography, Input, Tag } from 'antd';\nimport { getLangColor } from 'constants/TagColor';\nimport { StyledButton } from 'constants/StyledComponents';\nimport axios from 'axios';\nimport { API_LOCAL_BASE_URL, API_LOCAL_DATA_POST_URL } from 'constants/ApiConstant';\nimport { MONTHS } from 'constants/DateConstant';\nconst {\n  Option\n} = Select;\nconst {\n  TextArea\n} = Input;\nconst formItemLayout = {\n  labelCol: {\n    span: 6\n  },\n  wrapperCol: {\n    span: 14\n  }\n};\n\nconst FormOptions = props => {\n  let row = {};\n\n  const onFinish = values => {\n    console.log('Received values of form: ', values);\n  };\n\n  const [languages, setLanguages] = useState([]);\n  const [customer, setCustomer] = useState();\n  const [channel, setChannel] = useState();\n  const [product, setProduct] = useState();\n  const [segment, setSegment] = useState();\n  const [type, setType] = useState();\n  const [level, setLevel] = useState();\n  const [category, setCategory] = useState();\n  const [content, setContent] = useState();\n\n  const onSelectCustomer = event => setCustomer(event);\n\n  const onSelectChannel = event => setChannel(event);\n\n  const onSelectProduct = event => setProduct(event);\n\n  const onSelectSegment = event => setSegment(event);\n\n  const onSelectType = event => setType(event);\n\n  const onSelectLevel = event => setLevel(event);\n\n  const onSelectCategory = event => setCategory(event);\n\n  const onSelectContent = event => setContent(event.value);\n\n  const onSelectLanguages = event => setLanguages(event);\n\n  const onDataUpload = async e => {\n    e.preventDefault();\n    const formData = new FormData();\n    let todayDate = new Date();\n    let formattedDay = `${todayDate.getDate() > 3 && todayDate.getDate() < 21 ? `${todayDate.getDate()}th` : todayDate.getDate() in [1, 21, 31] ? `${todayDate.getDate()}st` : todayDate.getDate() in [2, 22] ? `${todayDate.getDate()}nd` : `${todayDate.getDate()}rd`}`;\n    let formattedTime = `${todayDate.getHours()}:${todayDate.getMinutes() < 10 ? `0${todayDate.getMinutes()}` : todayDate.getMinutes()} hrs`;\n    return row.customer_name = customer, row.channel = channel, row.segment = segment, row.product = product, row.type = type, row.level = level, row.category = category, row.category = category, row.content = content, row.status = 'Client Approved', row.last_updated_on = `${formattedDay} ${MONTHS[todayDate.getMonth()]}, ${todayDate.getFullYear()} at ${formattedTime}`, row.last_updated_by = 'Admin', row.version = 1, console.log(row); // formData.append('client_data', row)\n    // props.esData(row)\n    // await axios({\n    //     method: 'post',\n    //     baseURL: API_LOCAL_BASE_URL,\n    //     url: API_LOCAL_DATA_POST_URL,\n    //     data: row\n    // })\n    // .then( res => console.log(`Connection with STATUS ${res.status} has been established.`))\n    // .catch( function(err) {\n    //     if (err.response) {\n    //         console.log(err.response, err.response.data, err.response.status, err.response.headers)\n    //     } else if (err.request) {\n    //         console.log(err.request)\n    //     } else {\n    //         console.log('Error', err.message);\n    //     }\n    //     console.log(err.config);\n    // })\n  };\n\n  const renderClients = () => {\n    const clients = ['AXIS Bank', 'ICICI Bank', 'RBL Bank', 'TVS', 'SBI Bank', 'IDFC Bank', 'Bajaj Auto Finance', 'TCL', 'CBD', 'ENBD', 'TCHFL', 'Kotak Mahindra', 'Avanse'];\n    return /*#__PURE__*/React.createElement(React.Fragment, null, clients.map(client => /*#__PURE__*/React.createElement(Option, {\n      value: client,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 21\n      }\n    }, client)));\n  };\n\n  const renderLanguages = () => {\n    const languages = ['English', 'Hindi', 'Tamil', 'Telugu', 'Kannada', 'Marathi', 'Gujarati', 'Bengali', 'Punjabi', 'Malayalam'];\n    return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Select, {\n      mode: \"multiple\",\n      showArrow: true,\n      style: {\n        width: '100%'\n      },\n      onChange: onSelectLanguages,\n      placeholder: \"Please select the languages\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 17\n      }\n    }, languages.map(language => /*#__PURE__*/React.createElement(Option, {\n      value: language,\n      style: {\n        lineHeight: '32px',\n        width: '100%'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(Tag, {\n      color: getLangColor(language),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 29\n      }\n    }, language)))));\n  };\n\n  const renderProducts = () => {\n    const products = ['Loan', 'Credit Card', 'MFI', 'EMI On Debit Card', 'Agri Loan', 'Tractor Loan', 'CD-SNC', 'Common Borrowers', 'Pay Later'];\n    return /*#__PURE__*/React.createElement(React.Fragment, null, products.map(product => /*#__PURE__*/React.createElement(Option, {\n      value: product,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 130,\n        columnNumber: 21\n      }\n    }, product)));\n  };\n\n  const renderSegments = () => {\n    const segments = ['Pre Due', 'Post Due', 'Bucket X', 'NPA', 'W/Off', 'Phase 1', 'Phase 2', 'Phase 3', 'Phase 4 (Pre 90)', 'Phase 4 (90+)'];\n    return /*#__PURE__*/React.createElement(React.Fragment, null, segments.map(segment => /*#__PURE__*/React.createElement(Option, {\n      value: segment,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 142,\n        columnNumber: 21\n      }\n    }, segment)));\n  };\n\n  const renderTypes = () => {\n    const types = ['Reminder', 'Impact', 'Legal', 'Follow up', 'Relationship', 'Action', 'Urgency'];\n    return /*#__PURE__*/React.createElement(React.Fragment, null, types.map(type => /*#__PURE__*/React.createElement(Option, {\n      value: type,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 154,\n        columnNumber: 21\n      }\n    }, type)));\n  };\n\n  const renderLevels = () => {\n    const levels = [1, 2, 3, 4, 5, 6];\n    return /*#__PURE__*/React.createElement(React.Fragment, null, levels.map(level => /*#__PURE__*/React.createElement(Option, {\n      value: level,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 166,\n        columnNumber: 21\n      }\n    }, level)));\n  };\n\n  const renderCategories = () => {\n    const categories = ['Basic', 'Detailed', 'Urgency', 'Charges', 'Clean Track', 'Good', 'CIBIL', 'Credit', 'Action', 'NC_1', 'NC_2', 'Awareness', 'Soft Reminder', 'Collection Reminder', 'Impact Reminder 1', 'Impact Reminder 2', 'Good Order', 'Long Lasting', 'Relationship Status', 'Avoid Action', 'Action To Be Initiated', 'Action Initiated', 'Degradation Of Account', 'Legal Inbound', 'Legal', 'Reminder', 'PTP Reminder', 'Broken PTP', 'Default', 'Delinquent', 'Legal Reminder', 'Legal Action', 'Legal To Be Initiated', 'Other', 'Reacted', 'Reaction'];\n    return /*#__PURE__*/React.createElement(React.Fragment, null, categories.map(category => /*#__PURE__*/React.createElement(Option, {\n      value: category,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 178,\n        columnNumber: 21\n      }\n    }, category)));\n  };\n\n  return /*#__PURE__*/React.createElement(Form, Object.assign({\n    name: \"validate_other\"\n  }, formItemLayout, {\n    onFinish: onFinish,\n    textAlign: \"center\",\n    initialValues: {\n      rate: 3.5\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 185,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(Form.Item, {\n    name: \"select\",\n    label: \"Client Name\",\n    hasFeedback: true,\n    rules: [{\n      required: true,\n      message: 'Please select a client'\n    }],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 192,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Select, {\n    placeholder: \"Please select a client\",\n    onChange: onSelectCustomer,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 198,\n      columnNumber: 17\n    }\n  }, renderClients())), /*#__PURE__*/React.createElement(Form.Item, {\n    name: \"channel\",\n    label: \"Channel\",\n    hasFeedback: true,\n    rules: [{\n      required: true,\n      message: 'Please select a channel'\n    }],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 203,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Select, {\n    placeholder: \"Please select the channel\",\n    onChange: onSelectChannel,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 209,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Option, {\n    value: \"smartVoice\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 210,\n      columnNumber: 21\n    }\n  }, \"smartVoice\"), /*#__PURE__*/React.createElement(Option, {\n    value: \"smartText\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 211,\n      columnNumber: 21\n    }\n  }, \"smartText\"), /*#__PURE__*/React.createElement(Option, {\n    value: \"smartEmail\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 212,\n      columnNumber: 21\n    }\n  }, \"smartEmail\"))), /*#__PURE__*/React.createElement(Form.Item, {\n    name: \"language\",\n    label: \"Languages\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 216,\n      columnNumber: 13\n    }\n  }, renderLanguages()), /*#__PURE__*/React.createElement(Form.Item, {\n    name: \"product\",\n    label: \"Product\",\n    hasFeedback: true,\n    rules: [{\n      required: true,\n      message: 'Please select a product'\n    }],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 220,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Select, {\n    placeholder: \"Please select a product\",\n    onChange: onSelectProduct,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 226,\n      columnNumber: 17\n    }\n  }, renderProducts())), /*#__PURE__*/React.createElement(Form.Item, {\n    name: \"segment\",\n    label: \"Segment\",\n    hasFeedback: true,\n    rules: [{\n      required: true,\n      message: 'Please select a segment'\n    }],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 231,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Select, {\n    placeholder: \"Please select a segment\",\n    onChange: onSelectSegment,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 237,\n      columnNumber: 17\n    }\n  }, renderSegments())), /*#__PURE__*/React.createElement(Form.Item, {\n    name: \"type\",\n    label: \"Type\",\n    hasFeedback: true,\n    rules: [{\n      message: 'Please select a type'\n    }],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 242,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Select, {\n    placeholder: \"Please select a type\",\n    onChange: onSelectType,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 248,\n      columnNumber: 17\n    }\n  }, renderTypes())), /*#__PURE__*/React.createElement(Form.Item, {\n    name: \"level\",\n    label: \"Level\",\n    hasFeedback: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 253,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Select, {\n    placeholder: \"Please select a level\",\n    onChange: onSelectLevel,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 258,\n      columnNumber: 17\n    }\n  }, renderLevels())), /*#__PURE__*/React.createElement(Form.Item, {\n    name: \"category\",\n    label: \"Category\",\n    hasFeedback: true,\n    rules: [{\n      required: true,\n      message: 'Please select a category'\n    }],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 263,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Select, {\n    placeholder: \"Please select a category\",\n    onChange: onSelectCategory,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 269,\n      columnNumber: 17\n    }\n  }, renderCategories())), /*#__PURE__*/React.createElement(Form.Item, {\n    name: \"content\",\n    label: \"Content\",\n    rules: [{\n      required: true,\n      message: 'Please enter the content'\n    }],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 274,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(TextArea, {\n    rows: 4,\n    onChange: onSelectContent,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 279,\n      columnNumber: 17\n    }\n  })), /*#__PURE__*/React.createElement(Form.Item, {\n    style: {\n      display: 'flex',\n      justifyContent: 'center',\n      alignItems: 'center',\n      marginLeft: '20%'\n    },\n    className: \"mt-5\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 282,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(StyledButton, {\n    variant: \"contained\",\n    type: \"primary\",\n    style: {\n      width: '80%',\n      height: '3rem',\n      fontSize: '1.25rem',\n      textAlign: 'center',\n      alignItems: 'center'\n    },\n    onClick: onDataUpload,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 283,\n      columnNumber: 17\n    }\n  }, \"Upload the transaction\")));\n};\n\nexport default FormOptions;","map":{"version":3,"sources":["/Users/dhruvaagrawal/Desktop/Work/Spocto/CMS/app/src/views/app-views/ops-admin/FormOptions.js"],"names":["React","useState","Form","Select","Button","Checkbox","Row","Col","Typography","Input","Tag","getLangColor","StyledButton","axios","API_LOCAL_BASE_URL","API_LOCAL_DATA_POST_URL","MONTHS","Option","TextArea","formItemLayout","labelCol","span","wrapperCol","FormOptions","props","row","onFinish","values","console","log","languages","setLanguages","customer","setCustomer","channel","setChannel","product","setProduct","segment","setSegment","type","setType","level","setLevel","category","setCategory","content","setContent","onSelectCustomer","event","onSelectChannel","onSelectProduct","onSelectSegment","onSelectType","onSelectLevel","onSelectCategory","onSelectContent","value","onSelectLanguages","onDataUpload","e","preventDefault","formData","FormData","todayDate","Date","formattedDay","getDate","formattedTime","getHours","getMinutes","customer_name","status","last_updated_on","getMonth","getFullYear","last_updated_by","version","renderClients","clients","map","client","renderLanguages","width","language","lineHeight","renderProducts","products","renderSegments","segments","renderTypes","types","renderLevels","levels","renderCategories","categories","rate","required","message","display","justifyContent","alignItems","marginLeft","height","fontSize","textAlign"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,SAASC,IAAT,EAAeC,MAAf,EAAuBC,MAAvB,EAA+BC,QAA/B,EAAyCC,GAAzC,EAA8CC,GAA9C,EAAmDC,UAAnD,EAA+DC,KAA/D,EAAsEC,GAAtE,QAAiF,MAAjF;AACA,SAASC,YAAT,QAA6B,oBAA7B;AACA,SAASC,YAAT,QAA6B,4BAA7B;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAASC,kBAAT,EAA6BC,uBAA7B,QAA6D,uBAA7D;AACA,SAASC,MAAT,QAAuB,wBAAvB;AAEA,MAAM;AAAEC,EAAAA;AAAF,IAAad,MAAnB;AACA,MAAM;AAAEe,EAAAA;AAAF,IAAeT,KAArB;AAEA,MAAMU,cAAc,GAAG;AACnBC,EAAAA,QAAQ,EAAE;AACNC,IAAAA,IAAI,EAAE;AADA,GADS;AAInBC,EAAAA,UAAU,EAAE;AACRD,IAAAA,IAAI,EAAE;AADE;AAJO,CAAvB;;AASA,MAAME,WAAW,GAAGC,KAAK,IAAI;AAEzB,MAAIC,GAAG,GAAG,EAAV;;AAEA,QAAMC,QAAQ,GAAIC,MAAD,IAAY;AAC3BC,IAAAA,OAAO,CAACC,GAAR,CAAY,2BAAZ,EAAyCF,MAAzC;AACD,GAFD;;AAIA,QAAM,CAAEG,SAAF,EAAaC,YAAb,IAA8B9B,QAAQ,CAAC,EAAD,CAA5C;AACA,QAAM,CAAE+B,QAAF,EAAYC,WAAZ,IAA4BhC,QAAQ,EAA1C;AACA,QAAM,CAAEiC,OAAF,EAAWC,UAAX,IAA0BlC,QAAQ,EAAxC;AACA,QAAM,CAAEmC,OAAF,EAAWC,UAAX,IAA0BpC,QAAQ,EAAxC;AACA,QAAM,CAAEqC,OAAF,EAAWC,UAAX,IAA0BtC,QAAQ,EAAxC;AACA,QAAM,CAAEuC,IAAF,EAAQC,OAAR,IAAoBxC,QAAQ,EAAlC;AACA,QAAM,CAAEyC,KAAF,EAASC,QAAT,IAAsB1C,QAAQ,EAApC;AACA,QAAM,CAAE2C,QAAF,EAAYC,WAAZ,IAA4B5C,QAAQ,EAA1C;AACA,QAAM,CAAE6C,OAAF,EAAWC,UAAX,IAA0B9C,QAAQ,EAAxC;;AAEA,QAAM+C,gBAAgB,GAAGC,KAAK,IAAIhB,WAAW,CAACgB,KAAD,CAA7C;;AACA,QAAMC,eAAe,GAAGD,KAAK,IAAId,UAAU,CAACc,KAAD,CAA3C;;AACA,QAAME,eAAe,GAAGF,KAAK,IAAIZ,UAAU,CAACY,KAAD,CAA3C;;AACA,QAAMG,eAAe,GAAGH,KAAK,IAAIV,UAAU,CAACU,KAAD,CAA3C;;AACA,QAAMI,YAAY,GAAGJ,KAAK,IAAIR,OAAO,CAACQ,KAAD,CAArC;;AACA,QAAMK,aAAa,GAAGL,KAAK,IAAIN,QAAQ,CAACM,KAAD,CAAvC;;AACA,QAAMM,gBAAgB,GAAGN,KAAK,IAAIJ,WAAW,CAACI,KAAD,CAA7C;;AACA,QAAMO,eAAe,GAAGP,KAAK,IAAIF,UAAU,CAACE,KAAK,CAACQ,KAAP,CAA3C;;AAEA,QAAMC,iBAAiB,GAAGT,KAAK,IAAIlB,YAAY,CAACkB,KAAD,CAA/C;;AAEA,QAAMU,YAAY,GAAG,MAAOC,CAAP,IAAa;AAC9BA,IAAAA,CAAC,CAACC,cAAF;AAEA,UAAMC,QAAQ,GAAG,IAAIC,QAAJ,EAAjB;AAEA,QAAIC,SAAS,GAAG,IAAIC,IAAJ,EAAhB;AACA,QAAIC,YAAY,GAAI,GAAGF,SAAS,CAACG,OAAV,KAAsB,CAAtB,IAA2BH,SAAS,CAACG,OAAV,KAAsB,EAAjD,GAAuD,GAAEH,SAAS,CAACG,OAAV,EAAoB,IAA7E,GAAmFH,SAAS,CAACG,OAAV,MAAuB,CAAC,CAAD,EAAI,EAAJ,EAAQ,EAAR,CAAvB,GAAsC,GAAEH,SAAS,CAACG,OAAV,EAAoB,IAA5D,GAAkEH,SAAS,CAACG,OAAV,MAAuB,CAAC,CAAD,EAAI,EAAJ,CAAvB,GAAkC,GAAEH,SAAS,CAACG,OAAV,EAAoB,IAAxD,GAA+D,GAAEH,SAAS,CAACG,OAAV,EAAoB,IAAK,EAAtQ;AACA,QAAIC,aAAa,GAAI,GAAEJ,SAAS,CAACK,QAAV,EAAqB,IAAGL,SAAS,CAACM,UAAV,KAAyB,EAAzB,GAA+B,IAAGN,SAAS,CAACM,UAAV,EAAuB,EAAzD,GAA6DN,SAAS,CAACM,UAAV,EAAuB,MAAnI;AAEA,WACI7C,GAAG,CAAC8C,aAAJ,GAAoBvC,QAApB,EACAP,GAAG,CAACS,OAAJ,GAAcA,OADd,EAEAT,GAAG,CAACa,OAAJ,GAAcA,OAFd,EAGAb,GAAG,CAACW,OAAJ,GAAcA,OAHd,EAIAX,GAAG,CAACe,IAAJ,GAAWA,IAJX,EAKAf,GAAG,CAACiB,KAAJ,GAAYA,KALZ,EAMAjB,GAAG,CAACmB,QAAJ,GAAeA,QANf,EAOAnB,GAAG,CAACmB,QAAJ,GAAeA,QAPf,EAQAnB,GAAG,CAACqB,OAAJ,GAAcA,OARd,EASArB,GAAG,CAAC+C,MAAJ,GAAa,iBATb,EAUA/C,GAAG,CAACgD,eAAJ,GAAuB,GAAEP,YAAa,IAAGlD,MAAM,CAACgD,SAAS,CAACU,QAAV,EAAD,CAAuB,KAAIV,SAAS,CAACW,WAAV,EAAwB,OAAMP,aAAc,EAVtH,EAWA3C,GAAG,CAACmD,eAAJ,GAAsB,OAXtB,EAYAnD,GAAG,CAACoD,OAAJ,GAAc,CAZd,EAaAjD,OAAO,CAACC,GAAR,CAAYJ,GAAZ,CAdJ,CAT8B,CAyB9B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACH,GA5CD;;AA8CA,QAAMqD,aAAa,GAAG,MAAM;AACxB,UAAMC,OAAO,GAAG,CAAC,WAAD,EAAc,YAAd,EAA4B,UAA5B,EAAwC,KAAxC,EAA+C,UAA/C,EAA2D,WAA3D,EAAwE,oBAAxE,EAA8F,KAA9F,EAAqG,KAArG,EAA4G,MAA5G,EAAoH,OAApH,EAA6H,gBAA7H,EAA+I,QAA/I,CAAhB;AAEA,wBACI,0CACMA,OAAO,CAACC,GAAR,CAAaC,MAAM,iBACjB,oBAAC,MAAD;AAAQ,MAAA,KAAK,EAAGA,MAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAA2BA,MAA3B,CADF,CADN,CADJ;AAOH,GAVD;;AAYA,QAAMC,eAAe,GAAG,MAAM;AAC1B,UAAMpD,SAAS,GAAG,CAAC,SAAD,EAAY,OAAZ,EAAqB,OAArB,EAA8B,QAA9B,EAAwC,SAAxC,EAAmD,SAAnD,EAA8D,UAA9D,EAA0E,SAA1E,EAAqF,SAArF,EAAgG,WAAhG,CAAlB;AAEA,wBACI,uDACI,oBAAC,MAAD;AAAQ,MAAA,IAAI,EAAC,UAAb;AAAwB,MAAA,SAAS,MAAjC;AAAkC,MAAA,KAAK,EAAE;AAAEqD,QAAAA,KAAK,EAAE;AAAT,OAAzC;AAA4D,MAAA,QAAQ,EAAGzB,iBAAvE;AAA2F,MAAA,WAAW,EAAC,6BAAvG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACM5B,SAAS,CAACkD,GAAV,CAAeI,QAAQ,iBACrB,oBAAC,MAAD;AAAQ,MAAA,KAAK,EAAGA,QAAhB;AAA2B,MAAA,KAAK,EAAE;AAAEC,QAAAA,UAAU,EAAE,MAAd;AAAsBF,QAAAA,KAAK,EAAE;AAA7B,OAAlC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI,oBAAC,GAAD;AAAK,MAAA,KAAK,EAAGxE,YAAY,CAACyE,QAAD,CAAzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAwCA,QAAxC,CADJ,CADF,CADN,CADJ,CADJ;AAWH,GAdD;;AAgBA,QAAME,cAAc,GAAG,MAAM;AACzB,UAAMC,QAAQ,GAAG,CAAC,MAAD,EAAS,aAAT,EAAwB,KAAxB,EAA+B,mBAA/B,EAAoD,WAApD,EAAiE,cAAjE,EAAiF,QAAjF,EAA2F,kBAA3F,EAA+G,WAA/G,CAAjB;AAEA,wBACI,0CACMA,QAAQ,CAACP,GAAT,CAAc5C,OAAO,iBACnB,oBAAC,MAAD;AAAQ,MAAA,KAAK,EAAGA,OAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAA4BA,OAA5B,CADF,CADN,CADJ;AAOH,GAVD;;AAYA,QAAMoD,cAAc,GAAG,MAAM;AACzB,UAAMC,QAAQ,GAAG,CAAC,SAAD,EAAY,UAAZ,EAAwB,UAAxB,EAAoC,KAApC,EAA2C,OAA3C,EAAoD,SAApD,EAA+D,SAA/D,EAA0E,SAA1E,EAAqF,kBAArF,EAAyG,eAAzG,CAAjB;AAEA,wBACI,0CACKA,QAAQ,CAACT,GAAT,CAAc1C,OAAO,iBAClB,oBAAC,MAAD;AAAQ,MAAA,KAAK,EAAGA,OAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAA4BA,OAA5B,CADH,CADL,CADJ;AAOH,GAVD;;AAYA,QAAMoD,WAAW,GAAG,MAAM;AACtB,UAAMC,KAAK,GAAG,CAAC,UAAD,EAAa,QAAb,EAAuB,OAAvB,EAAgC,WAAhC,EAA6C,cAA7C,EAA6D,QAA7D,EAAuE,SAAvE,CAAd;AAEA,wBACI,0CACKA,KAAK,CAACX,GAAN,CAAWxC,IAAI,iBACZ,oBAAC,MAAD;AAAQ,MAAA,KAAK,EAAGA,IAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAyBA,IAAzB,CADH,CADL,CADJ;AAOH,GAVD;;AAYA,QAAMoD,YAAY,GAAG,MAAM;AACvB,UAAMC,MAAM,GAAG,CAAC,CAAD,EAAI,CAAJ,EAAO,CAAP,EAAU,CAAV,EAAa,CAAb,EAAgB,CAAhB,CAAf;AAEA,wBACI,0CACMA,MAAM,CAACb,GAAP,CAAYtC,KAAK,iBACf,oBAAC,MAAD;AAAQ,MAAA,KAAK,EAAGA,KAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAA0BA,KAA1B,CADF,CADN,CADJ;AAOH,GAVD;;AAYA,QAAMoD,gBAAgB,GAAG,MAAM;AAC3B,UAAMC,UAAU,GAAG,CAAC,OAAD,EAAU,UAAV,EAAsB,SAAtB,EAAiC,SAAjC,EAA4C,aAA5C,EAA2D,MAA3D,EAAmE,OAAnE,EAA4E,QAA5E,EAAsF,QAAtF,EAAgG,MAAhG,EAAwG,MAAxG,EAAgH,WAAhH,EAA6H,eAA7H,EAA8I,qBAA9I,EAAqK,mBAArK,EAA0L,mBAA1L,EAA+M,YAA/M,EAA6N,cAA7N,EAA6O,qBAA7O,EAAoQ,cAApQ,EAAoR,wBAApR,EAA8S,kBAA9S,EAAkU,wBAAlU,EAA4V,eAA5V,EAA6W,OAA7W,EAAsX,UAAtX,EAAkY,cAAlY,EAAkZ,YAAlZ,EAAga,SAAha,EAA2a,YAA3a,EAAyb,gBAAzb,EAA2c,cAA3c,EAA2d,uBAA3d,EAAof,OAApf,EAA6f,SAA7f,EAAwgB,UAAxgB,CAAnB;AAEA,wBACI,0CACMA,UAAU,CAACf,GAAX,CAAgBpC,QAAQ,iBACtB,oBAAC,MAAD;AAAQ,MAAA,KAAK,EAAGA,QAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAA6BA,QAA7B,CADF,CADN,CADJ;AAOH,GAVD;;AAYA,sBACI,oBAAC,IAAD;AACI,IAAA,IAAI,EAAC;AADT,KAESzB,cAFT;AAGI,IAAA,QAAQ,EAAGO,QAHf;AAII,IAAA,SAAS,EAAC,QAJd;AAKI,IAAA,aAAa,EAAE;AAAEsE,MAAAA,IAAI,EAAE;AAAR,KALnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAOI,oBAAC,IAAD,CAAM,IAAN;AACI,IAAA,IAAI,EAAC,QADT;AAEI,IAAA,KAAK,EAAC,aAFV;AAGI,IAAA,WAAW,MAHf;AAII,IAAA,KAAK,EAAE,CAAC;AAAEC,MAAAA,QAAQ,EAAE,IAAZ;AAAkBC,MAAAA,OAAO,EAAE;AAA3B,KAAD,CAJX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAMI,oBAAC,MAAD;AAAQ,IAAA,WAAW,EAAC,wBAApB;AAA6C,IAAA,QAAQ,EAAGlD,gBAAxD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACM8B,aAAa,EADnB,CANJ,CAPJ,eAkBI,oBAAC,IAAD,CAAM,IAAN;AACI,IAAA,IAAI,EAAC,SADT;AAEI,IAAA,KAAK,EAAC,SAFV;AAGI,IAAA,WAAW,MAHf;AAII,IAAA,KAAK,EAAE,CAAC;AAAEmB,MAAAA,QAAQ,EAAE,IAAZ;AAAkBC,MAAAA,OAAO,EAAE;AAA3B,KAAD,CAJX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAMI,oBAAC,MAAD;AAAQ,IAAA,WAAW,EAAC,2BAApB;AAAgD,IAAA,QAAQ,EAAGhD,eAA3D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,MAAD;AAAQ,IAAA,KAAK,EAAC,YAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADJ,eAEI,oBAAC,MAAD;AAAQ,IAAA,KAAK,EAAC,WAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBAFJ,eAGI,oBAAC,MAAD;AAAQ,IAAA,KAAK,EAAC,YAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAHJ,CANJ,CAlBJ,eA+BI,oBAAC,IAAD,CAAM,IAAN;AAAW,IAAA,IAAI,EAAC,UAAhB;AAA2B,IAAA,KAAK,EAAC,WAAjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACMgC,eAAe,EADrB,CA/BJ,eAmCI,oBAAC,IAAD,CAAM,IAAN;AACI,IAAA,IAAI,EAAC,SADT;AAEI,IAAA,KAAK,EAAC,SAFV;AAGI,IAAA,WAAW,MAHf;AAII,IAAA,KAAK,EAAE,CAAC;AAAEe,MAAAA,QAAQ,EAAE,IAAZ;AAAkBC,MAAAA,OAAO,EAAE;AAA3B,KAAD,CAJX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAMI,oBAAC,MAAD;AAAQ,IAAA,WAAW,EAAC,yBAApB;AAA8C,IAAA,QAAQ,EAAG/C,eAAzD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACMmC,cAAc,EADpB,CANJ,CAnCJ,eA8CI,oBAAC,IAAD,CAAM,IAAN;AACI,IAAA,IAAI,EAAC,SADT;AAEI,IAAA,KAAK,EAAC,SAFV;AAGI,IAAA,WAAW,MAHf;AAII,IAAA,KAAK,EAAE,CAAC;AAAEW,MAAAA,QAAQ,EAAE,IAAZ;AAAkBC,MAAAA,OAAO,EAAE;AAA3B,KAAD,CAJX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAMI,oBAAC,MAAD;AAAQ,IAAA,WAAW,EAAC,yBAApB;AAA8C,IAAA,QAAQ,EAAG9C,eAAzD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACMoC,cAAc,EADpB,CANJ,CA9CJ,eAyDI,oBAAC,IAAD,CAAM,IAAN;AACI,IAAA,IAAI,EAAC,MADT;AAEI,IAAA,KAAK,EAAC,MAFV;AAGI,IAAA,WAAW,MAHf;AAII,IAAA,KAAK,EAAE,CAAC;AAAEU,MAAAA,OAAO,EAAE;AAAX,KAAD,CAJX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAMI,oBAAC,MAAD;AAAQ,IAAA,WAAW,EAAC,sBAApB;AAA2C,IAAA,QAAQ,EAAG7C,YAAtD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACMqC,WAAW,EADjB,CANJ,CAzDJ,eAoEI,oBAAC,IAAD,CAAM,IAAN;AACI,IAAA,IAAI,EAAC,OADT;AAEI,IAAA,KAAK,EAAC,OAFV;AAGI,IAAA,WAAW,MAHf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAKI,oBAAC,MAAD;AAAQ,IAAA,WAAW,EAAC,uBAApB;AAA4C,IAAA,QAAQ,EAAGpC,aAAvD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACMsC,YAAY,EADlB,CALJ,CApEJ,eA8EI,oBAAC,IAAD,CAAM,IAAN;AACI,IAAA,IAAI,EAAC,UADT;AAEI,IAAA,KAAK,EAAC,UAFV;AAGI,IAAA,WAAW,MAHf;AAII,IAAA,KAAK,EAAE,CAAC;AAAEK,MAAAA,QAAQ,EAAE,IAAZ;AAAkBC,MAAAA,OAAO,EAAE;AAA3B,KAAD,CAJX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAMI,oBAAC,MAAD;AAAQ,IAAA,WAAW,EAAC,0BAApB;AAA+C,IAAA,QAAQ,EAAG3C,gBAA1D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACMuC,gBAAgB,EADtB,CANJ,CA9EJ,eAyFI,oBAAC,IAAD,CAAM,IAAN;AACI,IAAA,IAAI,EAAC,SADT;AAEI,IAAA,KAAK,EAAC,SAFV;AAGI,IAAA,KAAK,EAAE,CAAC;AAAEG,MAAAA,QAAQ,EAAE,IAAZ;AAAkBC,MAAAA,OAAO,EAAE;AAA3B,KAAD,CAHX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAKI,oBAAC,QAAD;AAAU,IAAA,IAAI,EAAE,CAAhB;AAAmB,IAAA,QAAQ,EAAG1C,eAA9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IALJ,CAzFJ,eAiGI,oBAAC,IAAD,CAAM,IAAN;AAAW,IAAA,KAAK,EAAE;AAAE2C,MAAAA,OAAO,EAAE,MAAX;AAAmBC,MAAAA,cAAc,EAAE,QAAnC;AAA6CC,MAAAA,UAAU,EAAE,QAAzD;AAAmEC,MAAAA,UAAU,EAAE;AAA/E,KAAlB;AAA0G,IAAA,SAAS,EAAC,MAApH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,YAAD;AAAc,IAAA,OAAO,EAAC,WAAtB;AAAkC,IAAA,IAAI,EAAC,SAAvC;AAAiD,IAAA,KAAK,EAAE;AAAEnB,MAAAA,KAAK,EAAE,KAAT;AAAgBoB,MAAAA,MAAM,EAAE,MAAxB;AAAgCC,MAAAA,QAAQ,EAAE,SAA1C;AAAqDC,MAAAA,SAAS,EAAE,QAAhE;AAA0EJ,MAAAA,UAAU,EAAE;AAAtF,KAAxD;AAA0J,IAAA,OAAO,EAAG1C,YAApK;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,8BADJ,CAjGJ,CADJ;AAuGH,CA1QD;;AA4QA,eAAepC,WAAf","sourcesContent":["import React, { useState } from 'react'\nimport { Form, Select, Button, Checkbox, Row, Col, Typography, Input, Tag } from 'antd';\nimport { getLangColor } from 'constants/TagColor'\nimport { StyledButton } from 'constants/StyledComponents'\nimport axios from 'axios'\nimport { API_LOCAL_BASE_URL, API_LOCAL_DATA_POST_URL, } from 'constants/ApiConstant'\nimport { MONTHS } from 'constants/DateConstant'\n\nconst { Option } = Select;\nconst { TextArea } = Input\n\nconst formItemLayout = {\n    labelCol: {\n        span: 6,\n    },\n    wrapperCol: {\n        span: 14,\n    },\n};\n  \nconst FormOptions = props => {\n\n    let row = {}\n\n    const onFinish = (values) => {\n      console.log('Received values of form: ', values);\n    }\n\n    const [ languages, setLanguages ] = useState([])\n    const [ customer, setCustomer ] = useState()\n    const [ channel, setChannel ] = useState()\n    const [ product, setProduct ] = useState()\n    const [ segment, setSegment ] = useState()\n    const [ type, setType ] = useState()\n    const [ level, setLevel ] = useState()\n    const [ category, setCategory ] = useState()\n    const [ content, setContent ] = useState()\n\n    const onSelectCustomer = event => setCustomer(event)\n    const onSelectChannel = event => setChannel(event)\n    const onSelectProduct = event => setProduct(event)\n    const onSelectSegment = event => setSegment(event)\n    const onSelectType = event => setType(event)\n    const onSelectLevel = event => setLevel(event)\n    const onSelectCategory = event => setCategory(event)\n    const onSelectContent = event => setContent(event.value)\n\n    const onSelectLanguages = event => setLanguages(event)\n\n    const onDataUpload = async (e) => {\n        e.preventDefault()\n\n        const formData = new FormData()\n\n        let todayDate = new Date()\n        let formattedDay = `${ todayDate.getDate() > 3 && todayDate.getDate() < 21 ? `${todayDate.getDate()}th` : todayDate.getDate() in [1, 21, 31] ? `${todayDate.getDate()}st` : todayDate.getDate() in [2, 22] ? `${todayDate.getDate()}nd` : `${todayDate.getDate()}rd` }`\n        let formattedTime = `${todayDate.getHours()}:${todayDate.getMinutes() < 10 ? `0${todayDate.getMinutes()}` : todayDate.getMinutes()} hrs`\n        \n        return (\n            row.customer_name = customer,\n            row.channel = channel,\n            row.segment = segment,\n            row.product = product,\n            row.type = type,\n            row.level = level,\n            row.category = category,\n            row.category = category,\n            row.content = content,\n            row.status = 'Client Approved',\n            row.last_updated_on = `${formattedDay} ${MONTHS[todayDate.getMonth()]}, ${todayDate.getFullYear()} at ${formattedTime}`,\n            row.last_updated_by = 'Admin',\n            row.version = 1,\n            console.log(row)\n        )\n        // formData.append('client_data', row)\n        // props.esData(row)\n        // await axios({\n        //     method: 'post',\n        //     baseURL: API_LOCAL_BASE_URL,\n        //     url: API_LOCAL_DATA_POST_URL,\n        //     data: row\n        // })\n        // .then( res => console.log(`Connection with STATUS ${res.status} has been established.`))\n        // .catch( function(err) {\n        //     if (err.response) {\n        //         console.log(err.response, err.response.data, err.response.status, err.response.headers)\n        //     } else if (err.request) {\n        //         console.log(err.request)\n        //     } else {\n        //         console.log('Error', err.message);\n        //     }\n        //     console.log(err.config);\n        // })\n    }\n    \n    const renderClients = () => {\n        const clients = ['AXIS Bank', 'ICICI Bank', 'RBL Bank', 'TVS', 'SBI Bank', 'IDFC Bank', 'Bajaj Auto Finance', 'TCL', 'CBD', 'ENBD', 'TCHFL', 'Kotak Mahindra', 'Avanse']\n\n        return (\n            <>\n                { clients.map( client => (\n                    <Option value={ client }>{ client }</Option>\n                )) }    \n            </>\n        )\n    }\n\n    const renderLanguages = () => {\n        const languages = ['English', 'Hindi', 'Tamil', 'Telugu', 'Kannada', 'Marathi', 'Gujarati', 'Bengali', 'Punjabi', 'Malayalam']\n\n        return (\n            <>\n                <Select mode=\"multiple\" showArrow style={{ width: '100%' }} onChange={ onSelectLanguages } placeholder=\"Please select the languages\">\n                    { languages.map( language => (\n                        <Option value={ language } style={{ lineHeight: '32px', width: '100%' }}>\n                            <Tag color={ getLangColor(language) }>{ language }</Tag>\n                        </Option>\n                    )) }\n                </Select>\n            </>\n        )\n    }\n\n    const renderProducts = () => {\n        const products = ['Loan', 'Credit Card', 'MFI', 'EMI On Debit Card', 'Agri Loan', 'Tractor Loan', 'CD-SNC', 'Common Borrowers', 'Pay Later']\n\n        return (\n            <>\n                { products.map( product => (\n                    <Option value={ product }>{ product }</Option>\n                )) }    \n            </>   \n        )\n    }\n\n    const renderSegments = () => {\n        const segments = ['Pre Due', 'Post Due', 'Bucket X', 'NPA', 'W/Off', 'Phase 1', 'Phase 2', 'Phase 3', 'Phase 4 (Pre 90)', 'Phase 4 (90+)']\n\n        return (\n            <>\n                {segments.map( segment => (\n                    <Option value={ segment }>{ segment }</Option>\n                ))}    \n            </>  \n        )\n    }\n\n    const renderTypes = () => {\n        const types = ['Reminder', 'Impact', 'Legal', 'Follow up', 'Relationship', 'Action', 'Urgency']\n\n        return (\n            <>\n                {types.map( type => (\n                    <Option value={ type }>{ type }</Option>\n                ))}    \n            </>  \n        )\n    }\n\n    const renderLevels = () => {\n        const levels = [1, 2, 3, 4, 5, 6]\n\n        return (\n            <>\n                { levels.map( level => (\n                    <Option value={ level }>{ level }</Option>\n                )) }    \n            </>  \n        )\n    }\n\n    const renderCategories = () => {\n        const categories = ['Basic', 'Detailed', 'Urgency', 'Charges', 'Clean Track', 'Good', 'CIBIL', 'Credit', 'Action', 'NC_1', 'NC_2', 'Awareness', 'Soft Reminder', 'Collection Reminder', 'Impact Reminder 1', 'Impact Reminder 2', 'Good Order', 'Long Lasting', 'Relationship Status', 'Avoid Action', 'Action To Be Initiated', 'Action Initiated', 'Degradation Of Account', 'Legal Inbound', 'Legal', 'Reminder', 'PTP Reminder', 'Broken PTP', 'Default', 'Delinquent', 'Legal Reminder', 'Legal Action', 'Legal To Be Initiated', 'Other', 'Reacted', 'Reaction']\n\n        return (\n            <>\n                { categories.map( category => (\n                    <Option value={ category }>{ category }</Option>\n                )) }    \n            </>  \n        )\n    }\n\n    return (\n        <Form\n            name=\"validate_other\"\n            { ...formItemLayout }\n            onFinish={ onFinish }\n            textAlign=\"center\"\n            initialValues={{ rate: 3.5 }}\n        >\n            <Form.Item\n                name=\"select\"\n                label=\"Client Name\"\n                hasFeedback\n                rules={[{ required: true, message: 'Please select a client' }]}\n            >\n                <Select placeholder=\"Please select a client\" onChange={ onSelectCustomer }>\n                    { renderClients() }\n                </Select>\n            </Form.Item>\n\n            <Form.Item\n                name=\"channel\"\n                label=\"Channel\"\n                hasFeedback\n                rules={[{ required: true, message: 'Please select a channel' }]}\n            >\n                <Select placeholder=\"Please select the channel\" onChange={ onSelectChannel }>\n                    <Option value=\"smartVoice\">smartVoice</Option>\n                    <Option value=\"smartText\">smartText</Option>\n                    <Option value=\"smartEmail\">smartEmail</Option>\n                </Select>\n            </Form.Item>\n\n            <Form.Item name=\"language\" label=\"Languages\">\n                { renderLanguages() }\n            </Form.Item>\n\n            <Form.Item\n                name=\"product\"\n                label=\"Product\"\n                hasFeedback\n                rules={[{ required: true, message: 'Please select a product' }]}\n            >\n                <Select placeholder=\"Please select a product\" onChange={ onSelectProduct }>\n                    { renderProducts() }\n                </Select>\n            </Form.Item>\n\n            <Form.Item\n                name=\"segment\"\n                label=\"Segment\"\n                hasFeedback\n                rules={[{ required: true, message: 'Please select a segment' }]}\n            >\n                <Select placeholder=\"Please select a segment\" onChange={ onSelectSegment}>\n                    { renderSegments() }\n                </Select>\n            </Form.Item>\n\n            <Form.Item\n                name=\"type\"\n                label=\"Type\"\n                hasFeedback\n                rules={[{ message: 'Please select a type' }]}\n            >\n                <Select placeholder=\"Please select a type\" onChange={ onSelectType }>\n                    { renderTypes() }\n                </Select>\n            </Form.Item>\n\n            <Form.Item\n                name=\"level\"\n                label=\"Level\"\n                hasFeedback\n            >\n                <Select placeholder=\"Please select a level\" onChange={ onSelectLevel }>\n                    { renderLevels() }\n                </Select>\n            </Form.Item>\n\n            <Form.Item\n                name=\"category\"\n                label=\"Category\"\n                hasFeedback\n                rules={[{ required: true, message: 'Please select a category' }]}\n            >\n                <Select placeholder=\"Please select a category\" onChange={ onSelectCategory }>\n                    { renderCategories() }\n                </Select>\n            </Form.Item>\n\n            <Form.Item\n                name=\"content\"\n                label=\"Content\"\n                rules={[{ required: true, message: 'Please enter the content' }]}\n            >\n                <TextArea rows={4} onChange={ onSelectContent } />\n            </Form.Item>\n\n            <Form.Item style={{ display: 'flex', justifyContent: 'center', alignItems: 'center', marginLeft: '20%' }} className=\"mt-5\">\n                <StyledButton variant=\"contained\" type=\"primary\" style={{ width: '80%', height: '3rem', fontSize: '1.25rem', textAlign: 'center', alignItems: 'center' }} onClick={ onDataUpload } >Upload the transaction</StyledButton>\n            </Form.Item>\n        </Form>\n    )\n};  \n\nexport default FormOptions"]},"metadata":{},"sourceType":"module"}