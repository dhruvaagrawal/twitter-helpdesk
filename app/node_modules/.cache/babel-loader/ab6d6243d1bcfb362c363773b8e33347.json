{"ast":null,"code":"var _jsxFileName = \"/Users/dhruvaagrawal/Desktop/Work/Spocto/CMS/app/src/views/app-views/journeys/journey-ivr/transaction/index.js\";\n\n/* eslint-disable no-unused-vars */\nimport React, { useState, useEffect } from 'react';\nimport { Card, Table, Select, Input, Button, Badge, Menu, Tag, Pagination } from 'antd';\nimport OrderListData from 'assets/data/order-list.data.json';\nimport { EyeOutlined, CloudDownloadOutlined, SearchOutlined, PlusCircleOutlined } from '@ant-design/icons';\nimport EllipsisDropdown from 'components/shared-components/EllipsisDropdown';\nimport Flex from 'components/shared-components/Flex';\nimport NumberFormat from 'react-number-format';\nimport moment from 'moment';\nimport { DATE_FORMAT_DD_MM_YYYY } from 'constants/DateConstant';\nimport { getChannelColor, getLangColor, getCustomerColor, getProductColor, getTransactionStatus, getUserStatus } from 'constants/TagColor';\nimport utils from 'utils';\nimport axios from 'axios';\nconst {\n  Option\n} = Select;\nconst transactionStatusList = ['Client Approved', 'IVR', 'Testing', 'Approved'];\n\nconst fetchData = async () => await axios({\n  method: 'get',\n  url: 'https://68ef17ae206a41b485fa164d62a92012.us-east-1.aws.found.io:9243/sc_transaction_demo/_search?size=10000',\n  auth: {\n    username: 'sp_es_write',\n    password: 'JxpZzs8hRV4X7'\n  }\n});\n\nexport default function Dashboard() {\n  const [selectedRows, setSelectedRows] = useState([]);\n  const [selectedRowKeys, setSelectedRowKeys] = useState([]);\n  const [esData, setEsData] = useState([]);\n  const [list, setList] = useState([]);\n  useEffect(() => {\n    fetchData().then(res => setEsData(res.data.hits.hits));\n    setList(esData);\n  }, []);\n\n  const handleShowStatus = value => {\n    if (value !== 'All') {\n      const key = 'transactionStatus';\n      const data = utils.filterArray(esData, key, value);\n      setList(data);\n    } else {\n      setList(esData);\n    }\n  };\n\n  const dropdownMenu = row => /*#__PURE__*/React.createElement(Menu, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 3\n    }\n  }, /*#__PURE__*/React.createElement(Menu.Item, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 4\n    }\n  }, /*#__PURE__*/React.createElement(Flex, {\n    alignItems: \"center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(EyeOutlined, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 6\n    }\n  }), /*#__PURE__*/React.createElement(\"span\", {\n    className: \"ml-2\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 6\n    }\n  }, \"View Details\"))), /*#__PURE__*/React.createElement(Menu.Item, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 4\n    }\n  }, /*#__PURE__*/React.createElement(Flex, {\n    alignItems: \"center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(PlusCircleOutlined, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 6\n    }\n  }), /*#__PURE__*/React.createElement(\"span\", {\n    className: \"ml-2\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 6\n    }\n  }, \"Add to remark\"))));\n\n  const tableColumns = [{\n    title: 'ID',\n    dataIndex: 'id',\n    key: 'id'\n  }, {\n    title: 'Channel',\n    dataIndex: 'channel',\n    render: (_, record) => /*#__PURE__*/React.createElement(\"div\", {\n      className: \"d-flex\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 5\n      }\n    }, /*#__PURE__*/React.createElement(Tag, {\n      color: getChannelColor(record.channel),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 6\n      }\n    }, record.channel)),\n    sorter: (a, b) => utils.antdTableSorter(a, b, 'channel'),\n    key: 'channel'\n  }, {\n    title: 'Customer Name',\n    dataIndex: 'customer_name',\n    render: (_, record) => /*#__PURE__*/React.createElement(\"div\", {\n      className: \"d-flex\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 5\n      }\n    }, /*#__PURE__*/React.createElement(Tag, {\n      color: getCustomerColor(record.customer_name),\n      style: {\n        letterSpacing: '1px'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 6\n      }\n    }, record.customer_name)),\n    sorter: (a, b) => utils.antdTableSorter(a, b, 'customer_name'),\n    key: 'customer_name'\n  }, {\n    title: 'Content Name',\n    dataIndex: 'content_name',\n    render: (_, record) => /*#__PURE__*/React.createElement(\"div\", {\n      className: \"d-flex\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 5\n      }\n    }, /*#__PURE__*/React.createElement(\"span\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 6\n      }\n    }, record.content_name)),\n    sorter: (a, b) => utils.antdTableSorter(a, b, 'content_name'),\n    key: 'content_name'\n  }, {\n    title: 'Product',\n    dataIndex: 'product',\n    render: (_, record) => /*#__PURE__*/React.createElement(\"div\", {\n      className: \"d-flex\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 5\n      }\n    }, /*#__PURE__*/React.createElement(\"span\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 6\n      }\n    }, record.product)),\n    sorter: (a, b) => utils.antdTableSorter(a, b, 'product'),\n    key: 'product'\n  }, {\n    title: 'Segment',\n    dataIndex: 'stage',\n    render: (_, record) => /*#__PURE__*/React.createElement(\"div\", {\n      className: \"d-flex\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 123,\n        columnNumber: 5\n      }\n    }, /*#__PURE__*/React.createElement(\"span\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 124,\n        columnNumber: 6\n      }\n    }, record.segment)),\n    sorter: (a, b) => utils.antdTableSorter(a, b, 'segment'),\n    key: 'segment'\n  }, {\n    title: 'Type',\n    dataIndex: 'type',\n    render: (_, record) => /*#__PURE__*/React.createElement(\"div\", {\n      className: \"d-flex\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 134,\n        columnNumber: 5\n      }\n    }, /*#__PURE__*/React.createElement(\"span\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 135,\n        columnNumber: 6\n      }\n    }, record.type)),\n    sorter: (a, b) => utils.antdTableSorter(a, b, 'type'),\n    key: 'type'\n  }, {\n    title: 'Level',\n    dataIndex: 'level',\n    render: (_, record) => /*#__PURE__*/React.createElement(\"div\", {\n      className: \"d-flex\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 145,\n        columnNumber: 5\n      }\n    }, /*#__PURE__*/React.createElement(\"span\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 146,\n        columnNumber: 6\n      }\n    }, record.level)),\n    sorter: (a, b) => utils.antdTableSorter(a, b, 'level'),\n    key: 'level'\n  }, {\n    title: 'Language',\n    key: 'language',\n    dataIndex: 'language',\n    render: (_, record) => /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Tag, {\n      color: getLangColor(record.language),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 157,\n        columnNumber: 7\n      }\n    }, record.language)),\n    sorter: (a, b) => utils.antdTableSorter(a, b, 'language')\n  }, {\n    title: 'Version',\n    dataIndex: 'version',\n    key: 'version',\n    render: (_, record) => /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Tag, {\n      color: record.version === 1 ? 'geekblue' : 'success',\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 166,\n        columnNumber: 7\n      }\n    }, record.version)),\n    sorter: (a, b) => utils.antdTableSorter(a, b, 'language')\n  }, {\n    title: 'Transaction Status',\n    dataIndex: 'status',\n    render: (_, record) => /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Tag, {\n      color: getTransactionStatus(record.status),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 174,\n        columnNumber: 7\n      }\n    }, record.status)),\n    sorter: (a, b) => utils.antdTableSorter(a, b, 'status'),\n    key: 'status'\n  }, {\n    title: 'Last Updated',\n    dataIndex: 'last_updated_on',\n    render: (_, record) => /*#__PURE__*/React.createElement(\"span\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 183,\n        columnNumber: 5\n      }\n    }, moment.unix(record.last_updated_on).format(DATE_FORMAT_DD_MM_YYYY)),\n    sorter: (a, b) => utils.antdTableSorter(a, b, 'last_updated_on'),\n    key: 'last_updated_on'\n  }, {\n    title: 'Last Updated By',\n    dataIndex: 'last_updated_by',\n    render: (_, record) => /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Tag, {\n      color: getUserStatus(record.last_updated_by),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 192,\n        columnNumber: 7\n      }\n    }, record.last_updated_by)),\n    sorter: (a, b) => utils.antdTableSorter(a, b, 'last_updated_by'),\n    key: 'last_updated_by'\n  }, {\n    title: '',\n    dataIndex: 'actions',\n    render: (_, elm) => /*#__PURE__*/React.createElement(\"div\", {\n      className: \"text-right\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 201,\n        columnNumber: 5\n      }\n    }, /*#__PURE__*/React.createElement(EllipsisDropdown, {\n      menu: dropdownMenu(elm),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 202,\n        columnNumber: 6\n      }\n    })),\n    key: 'actions'\n  }];\n  const rowSelection = {\n    onChange: (key, rows) => {\n      setSelectedRows(rows);\n      setSelectedRowKeys(key);\n    }\n  };\n\n  const onSearch = e => {\n    const value = e.currentTarget.value;\n    const searchArray = e.currentTarget.value ? list : OrderListData;\n    const data = utils.wildCardSearch(searchArray, value);\n    setList(data);\n    setSelectedRowKeys([]);\n  };\n\n  return /*#__PURE__*/React.createElement(Card, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 225,\n      columnNumber: 3\n    }\n  }, /*#__PURE__*/React.createElement(Flex, {\n    alignItems: \"center\",\n    justifyContent: \"between\",\n    mobileFlex: false,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 226,\n      columnNumber: 4\n    }\n  }, /*#__PURE__*/React.createElement(Flex, {\n    className: \"mb-1\",\n    mobileFlex: false,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 227,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"mr-md-3 mb-3\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 228,\n      columnNumber: 6\n    }\n  }, /*#__PURE__*/React.createElement(Input, {\n    placeholder: \"Search\",\n    prefix: /*#__PURE__*/React.createElement(SearchOutlined, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 229,\n        columnNumber: 43\n      }\n    }),\n    onChange: e => onSearch(e),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 229,\n      columnNumber: 7\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"mb-3\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 231,\n      columnNumber: 6\n    }\n  }, /*#__PURE__*/React.createElement(Select, {\n    defaultValue: \"All\",\n    className: \"w-100\",\n    style: {\n      minWidth: 180\n    },\n    onChange: handleShowStatus,\n    placeholder: \"Status\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 232,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Option, {\n    value: \"All\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 239,\n      columnNumber: 8\n    }\n  }, \"Transactions \"), transactionStatusList.map(elm => /*#__PURE__*/React.createElement(Option, {\n    key: elm,\n    value: elm,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 240,\n      columnNumber: 42\n    }\n  }, elm)))))), /*#__PURE__*/React.createElement(Flex, {\n    alignItems: \"center\",\n    mobileFlex: false,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 245,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"mb-3 mr-3\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 246,\n      columnNumber: 6\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    type: \"primary\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 247,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    style: {\n      marginRight: '0.5rem'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 247,\n      columnNumber: 48\n    }\n  }, /*#__PURE__*/React.createElement(PlusCircleOutlined, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 247,\n      columnNumber: 88\n    }\n  })), \"Add Filter\")), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"mb-3 mr-3\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 249,\n      columnNumber: 6\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    type: \"primary\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 250,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    style: {\n      marginRight: '0.5rem'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 250,\n      columnNumber: 48\n    }\n  }, /*#__PURE__*/React.createElement(PlusCircleOutlined, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 250,\n      columnNumber: 88\n    }\n  })), \"Add Sort\")), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"mb-3\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 252,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    type: \"primary\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 253,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    style: {\n      marginRight: '0.5rem'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 253,\n      columnNumber: 48\n    }\n  }, /*#__PURE__*/React.createElement(CloudDownloadOutlined, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 253,\n      columnNumber: 88\n    }\n  })), \"Download Selected\"))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"table-responsive\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 256,\n      columnNumber: 4\n    }\n  }, /*#__PURE__*/React.createElement(Table, {\n    bordered: true,\n    columns: tableColumns,\n    dataSource: esData,\n    rowKey: \"id\",\n    rowSelection: {\n      selectedRowKeys: selectedRowKeys,\n      type: 'checkbox',\n      preserveSelectedRowKeys: false,\n      ...rowSelection\n    },\n    scroll: {\n      x: 2000\n    },\n    pagination: {\n      pageSize: 10,\n      pageSizeOptions: [5, 10, 15, 20]\n    },\n    showSizeChanger: true,\n    showQuickJumper: true,\n    responsive: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 257,\n      columnNumber: 17\n    }\n  })), console.log(esData), console.log(list));\n}","map":{"version":3,"sources":["/Users/dhruvaagrawal/Desktop/Work/Spocto/CMS/app/src/views/app-views/journeys/journey-ivr/transaction/index.js"],"names":["React","useState","useEffect","Card","Table","Select","Input","Button","Badge","Menu","Tag","Pagination","OrderListData","EyeOutlined","CloudDownloadOutlined","SearchOutlined","PlusCircleOutlined","EllipsisDropdown","Flex","NumberFormat","moment","DATE_FORMAT_DD_MM_YYYY","getChannelColor","getLangColor","getCustomerColor","getProductColor","getTransactionStatus","getUserStatus","utils","axios","Option","transactionStatusList","fetchData","method","url","auth","username","password","Dashboard","selectedRows","setSelectedRows","selectedRowKeys","setSelectedRowKeys","esData","setEsData","list","setList","then","res","data","hits","handleShowStatus","value","key","filterArray","dropdownMenu","row","tableColumns","title","dataIndex","render","_","record","channel","sorter","a","b","antdTableSorter","customer_name","letterSpacing","content_name","product","segment","type","level","language","version","status","unix","last_updated_on","format","last_updated_by","elm","rowSelection","onChange","rows","onSearch","e","currentTarget","searchArray","wildCardSearch","minWidth","map","marginRight","preserveSelectedRowKeys","x","pageSize","pageSizeOptions","console","log"],"mappings":"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","sourcesContent":["/* eslint-disable no-unused-vars */\nimport React, { useState, useEffect } from 'react'\nimport { Card, Table, Select, Input, Button, Badge, Menu, Tag, Pagination } from 'antd';\nimport OrderListData from 'assets/data/order-list.data.json'\nimport { EyeOutlined, CloudDownloadOutlined, SearchOutlined, PlusCircleOutlined } from '@ant-design/icons';\nimport EllipsisDropdown from 'components/shared-components/EllipsisDropdown';\nimport Flex from 'components/shared-components/Flex'\nimport NumberFormat from 'react-number-format';\nimport moment from 'moment'; \nimport { DATE_FORMAT_DD_MM_YYYY } from 'constants/DateConstant'\nimport { getChannelColor, getLangColor, getCustomerColor, getProductColor, getTransactionStatus, getUserStatus } from 'constants/TagColor'\nimport utils from 'utils'\nimport axios from 'axios'\n\nconst { Option } = Select\n\nconst transactionStatusList = [ 'Client Approved', 'IVR', 'Testing', 'Approved' ]\n\nconst fetchData = async () => await axios({\n\tmethod: 'get',\n\turl: 'https://68ef17ae206a41b485fa164d62a92012.us-east-1.aws.found.io:9243/sc_transaction_demo/_search?size=10000',\n\tauth: {\n\t\tusername: 'sp_es_write',\n\t\tpassword: 'JxpZzs8hRV4X7'\n\t}\n})\n\nexport default function Dashboard() {\n\n\tconst [ selectedRows, setSelectedRows ] = useState([])\n\tconst [ selectedRowKeys, setSelectedRowKeys ] = useState([])\n\tconst [ esData, setEsData ] = useState([])\n\tconst [ list, setList ] = useState([])\n\n\tuseEffect( () => {\n\t\tfetchData()\n\t\t\t.then( res => setEsData(res.data.hits.hits) )\n\t\tsetList(esData)\n\t}, [])\n\n\n\tconst handleShowStatus = value => {\n\t\tif (value !== 'All') {\n\t\t\tconst key = 'transactionStatus'\n\t\t\tconst data = utils.filterArray(esData, key, value)\n\t\t\tsetList(data)\n\t\t} else {\n\t\t\tsetList(esData)\n\t\t}\n\t}\n\n\tconst dropdownMenu = row => (\n\t\t<Menu>\n\t\t\t<Menu.Item>\n\t\t\t\t<Flex alignItems=\"center\">\n\t\t\t\t\t<EyeOutlined />\n\t\t\t\t\t<span className=\"ml-2\">View Details</span>\n\t\t\t\t</Flex>\n\t\t\t</Menu.Item>\n\t\t\t<Menu.Item>\n\t\t\t\t<Flex alignItems=\"center\">\n\t\t\t\t\t<PlusCircleOutlined />\n\t\t\t\t\t<span className=\"ml-2\">Add to remark</span>\n\t\t\t\t</Flex>\n\t\t\t</Menu.Item>\n\t\t</Menu>\n\t);\n\n\tconst tableColumns = [\n\t\t{\n\t\t\ttitle: 'ID',\n\t\t\tdataIndex: 'id',\n\t\t\tkey: 'id'\n\t\t},\n\t\t{\n\t\t\ttitle: 'Channel',\n\t\t\tdataIndex: 'channel',\n\t\t\trender: (_, record) => (\n\t\t\t\t<div className=\"d-flex\">\n\t\t\t\t\t<Tag color={ getChannelColor(record.channel) }>{ record.channel }</Tag>\n\t\t\t\t</div>\n\t\t\t),\n\t\t\tsorter: (a, b) => utils.antdTableSorter(a, b, 'channel'),\n\t\t\tkey: 'channel'\n        },\n\t\t{\n\t\t\ttitle: 'Customer Name',\n\t\t\tdataIndex: 'customer_name',\n\t\t\trender: (_, record) => (\n\t\t\t\t<div className=\"d-flex\">\n\t\t\t\t\t<Tag color={ getCustomerColor(record.customer_name) } style={{ letterSpacing: '1px' }}>{ record.customer_name }</Tag>\n\t\t\t\t</div>\n\t\t\t),\n\t\t\tsorter: (a, b) => utils.antdTableSorter(a, b, 'customer_name'),\n\t\t\tkey: 'customer_name'\n        },\n\t\t{\n\t\t\ttitle: 'Content Name',\n\t\t\tdataIndex: 'content_name',\n\t\t\trender: (_, record) => (\n\t\t\t\t<div className=\"d-flex\">\n\t\t\t\t\t<span>{ record.content_name }</span>\n\t\t\t\t</div>\n\t\t\t),\n\t\t\tsorter: (a, b) => utils.antdTableSorter(a, b, 'content_name'),\n\t\t\tkey: 'content_name'\n        },\n        {\n\t\t\ttitle: 'Product',\n\t\t\tdataIndex: 'product',\n\t\t\trender: (_, record) => (\n\t\t\t\t<div className=\"d-flex\">\n\t\t\t\t\t<span>{ record.product }</span>\n\t\t\t\t</div>\n\t\t\t),\n\t\t\tsorter: (a, b) => utils.antdTableSorter(a, b, 'product'),\n\t\t\tkey: 'product'\n        },\n        {\n\t\t\ttitle: 'Segment',\n\t\t\tdataIndex: 'stage',\n\t\t\trender: (_, record) => (\n\t\t\t\t<div className=\"d-flex\">\n\t\t\t\t\t<span>{ record.segment }</span>\n\t\t\t\t</div>\n\t\t\t),\n\t\t\tsorter: (a, b) => utils.antdTableSorter(a, b, 'segment'),\n\t\t\tkey: 'segment'\n        },\n        {\n\t\t\ttitle: 'Type',\n\t\t\tdataIndex: 'type',\n\t\t\trender: (_, record) => (\n\t\t\t\t<div className=\"d-flex\">\n\t\t\t\t\t<span>{ record.type }</span>\n\t\t\t\t</div>\n\t\t\t),\n\t\t\tsorter: (a, b) => utils.antdTableSorter(a, b, 'type'),\n\t\t\tkey: 'type'\n        },\n        {\n\t\t\ttitle: 'Level',\n\t\t\tdataIndex: 'level',\n\t\t\trender: (_, record) => (\n\t\t\t\t<div className=\"d-flex\">\n\t\t\t\t\t<span>{ record.level }</span>\n\t\t\t\t</div>\n\t\t\t),\n\t\t\tsorter: (a, b) => utils.antdTableSorter(a, b, 'level'),\n\t\t\tkey: 'level'\n\t\t},\n\t\t{\n\t\t\ttitle: 'Language',\n\t\t\tkey: 'language',\n\t\t\tdataIndex: 'language',\n\t\t\trender: (_, record) => (\n\t\t\t\t<><Tag color={ getLangColor(record.language) }>{ record.language }</Tag></>\n\t\t\t),\n\t\t\tsorter: (a, b) => utils.antdTableSorter(a, b, 'language'),\n\t\t},\n\t\t{\n\t\t\ttitle: 'Version',\n\t\t\tdataIndex: 'version',\n\t\t\tkey: 'version',\n\t\t\trender: (_, record) => (\n\t\t\t\t<><Tag color={ record.version === 1 ? 'geekblue' : 'success' }>{ record.version }</Tag></>\n\t\t\t),\n\t\t\tsorter: (a, b) => utils.antdTableSorter(a, b, 'language'),\n\t\t},\n        {\n\t\t\ttitle: 'Transaction Status',\n\t\t\tdataIndex: 'status',\n\t\t\trender: (_, record) => (\n\t\t\t\t<><Tag color={ getTransactionStatus(record.status) }>{ record.status }</Tag></>\n\t\t\t),\n\t\t\tsorter: (a, b) => utils.antdTableSorter(a, b, 'status'),\n\t\t\tkey: 'status'\n\t\t},\n        {\n\t\t\ttitle: 'Last Updated',\n\t\t\tdataIndex: 'last_updated_on',\n\t\t\trender: (_, record) => (\n\t\t\t\t<span>{moment.unix(record.last_updated_on).format(DATE_FORMAT_DD_MM_YYYY)}</span>\n\t\t\t),\n\t\t\tsorter: (a, b) => utils.antdTableSorter(a, b, 'last_updated_on'),\n\t\t\tkey: 'last_updated_on'\n\t\t},\n\t\t{\n\t\t\ttitle: 'Last Updated By',\n\t\t\tdataIndex: 'last_updated_by',\n\t\t\trender: (_, record) => (\n\t\t\t\t<><Tag color={ getUserStatus(record.last_updated_by) }>{ record.last_updated_by }</Tag></>\n\t\t\t),\n\t\t\tsorter: (a, b) => utils.antdTableSorter(a, b, 'last_updated_by'),\n\t\t\tkey: 'last_updated_by'\n\t\t},\n\t\t{\n\t\t\ttitle: '',\n\t\t\tdataIndex: 'actions',\n\t\t\trender: (_, elm) => (\n\t\t\t\t<div className=\"text-right\">\n\t\t\t\t\t<EllipsisDropdown menu={dropdownMenu(elm)}/>\n\t\t\t\t</div>\n\t\t\t),\n\t\t\tkey: 'actions'\n\t\t}\n\t];\n\t\n\tconst rowSelection = {\n\t\tonChange: (key, rows) => {\n\t\t\tsetSelectedRows(rows)\n\t\t\tsetSelectedRowKeys(key)\n\t\t}\n\t};\n\n\tconst onSearch = e => {\n\t\tconst value = e.currentTarget.value\n\t\tconst searchArray = e.currentTarget.value ? list : OrderListData\n\t\tconst data = utils.wildCardSearch(searchArray, value)\n\t\tsetList(data)\n\t\tsetSelectedRowKeys([])\n\t}\n\n\treturn (\n\t\t<Card>\n\t\t\t<Flex alignItems=\"center\" justifyContent=\"between\" mobileFlex={false}>\n\t\t\t\t<Flex className=\"mb-1\" mobileFlex={false}>\n\t\t\t\t\t<div className=\"mr-md-3 mb-3\">\n\t\t\t\t\t\t<Input placeholder=\"Search\" prefix={<SearchOutlined />} onChange={e => onSearch(e)}/>\n\t\t\t\t\t</div>\n\t\t\t\t\t<div className=\"mb-3\">\n\t\t\t\t\t\t<Select \n\t\t\t\t\t\t\tdefaultValue=\"All\" \n\t\t\t\t\t\t\tclassName=\"w-100\" \n\t\t\t\t\t\t\tstyle={{ minWidth: 180 }} \n\t\t\t\t\t\t\tonChange={ handleShowStatus } \n\t\t\t\t\t\t\tplaceholder=\"Status\"\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\t<Option value=\"All\">Transactions </Option>\n\t\t\t\t\t\t\t{transactionStatusList.map(elm => <Option key={elm} value={elm}>{elm}</Option>)}\n\t\t\t\t\t\t</Select>\n\t\t\t\t\t</div>\n\t\t\t\t</Flex>\n\t\t\t</Flex>\n                <Flex alignItems=\"center\" mobileFlex={false}>\n\t\t\t\t\t<div className=\"mb-3 mr-3\">\n                        <Button type=\"primary\"><span style={{ marginRight: '0.5rem' }}><PlusCircleOutlined /></span>Add Filter</Button>\n                    </div>\n\t\t\t\t\t<div className=\"mb-3 mr-3\">\n                        <Button type=\"primary\"><span style={{ marginRight: '0.5rem' }}><PlusCircleOutlined /></span>Add Sort</Button>\n                    </div>\n                    <div className=\"mb-3\">\n                        <Button type=\"primary\"><span style={{ marginRight: '0.5rem' }}><CloudDownloadOutlined /></span>Download Selected</Button>\n                    </div>\n                </Flex>\n\t\t\t<div className=\"table-responsive\">\n                <Table \n                    bordered\n\t\t\t\t\tcolumns={ tableColumns } \n\t\t\t\t\tdataSource={ esData } \n\t\t\t\t\trowKey='id' \n\t\t\t\t\trowSelection={{\n\t\t\t\t\t\tselectedRowKeys: selectedRowKeys,\n\t\t\t\t\t\ttype: 'checkbox',\n\t\t\t\t\t\tpreserveSelectedRowKeys: false,\n\t\t\t\t\t\t...rowSelection,\n                    }}\n                    scroll={{ x: 2000 }}\n                    pagination={{ pageSize: 10, pageSizeOptions: [5, 10, 15, 20] }}\n                    showSizeChanger\n                    showQuickJumper\n                    responsive={true}\n\t\t\t\t/>\n\t\t\t</div>\n\t\t\t{ console.log(esData) }\n\t\t\t{ console.log(list) }\n\t\t</Card>\n\t)\n}"]},"metadata":{},"sourceType":"module"}