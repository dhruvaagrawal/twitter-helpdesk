{"ast":null,"code":"var _jsxFileName = \"/Users/dhruvaagrawal/Desktop/Work/Projects/Webdev.nosync/Twitter/app/src/components/layout-components/HeaderNav.js\";\nimport React, { useState } from \"react\";\nimport { connect } from \"react-redux\";\nimport { Link } from 'react-router-dom';\nimport { Menu, Layout } from \"antd\";\nimport { MenuFoldOutlined, MenuUnfoldOutlined } from '@ant-design/icons';\nimport Logo from './Logo';\nimport { toggleCollapsedNav, onMobileNavToggle } from 'redux/actions/Theme';\nimport { NAV_TYPE_TOP, SIDE_NAV_COLLAPSED_WIDTH, SIDE_NAV_WIDTH } from 'constants/ThemeConstant';\nimport utils from 'utils';\nconst {\n  Header\n} = Layout;\nexport const HeaderNav = props => {\n  const {\n    navCollapsed,\n    mobileNav,\n    navType,\n    headerNavColor,\n    toggleCollapsedNav,\n    onMobileNavToggle,\n    isMobile\n  } = props;\n\n  const onToggle = () => {\n    if (!isMobile) {\n      toggleCollapsedNav(!navCollapsed);\n    } else {\n      onMobileNavToggle(!mobileNav);\n    }\n  };\n\n  const isNavTop = navType === NAV_TYPE_TOP ? true : false;\n  const mode = utils.getColorContrast(headerNavColor);\n\n  const getNavWidth = () => {\n    if (isNavTop || isMobile) {\n      return '0px';\n    }\n\n    if (navCollapsed) {\n      return `${SIDE_NAV_COLLAPSED_WIDTH}px`;\n    } else {\n      return `${SIDE_NAV_WIDTH}px`;\n    }\n  };\n\n  return /*#__PURE__*/React.createElement(Header, {\n    className: `app-header ${mode}`,\n    style: {\n      backgroundColor: headerNavColor\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: `app-header-wrapper ${isNavTop ? 'layout-top-nav' : ''}`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Link, {\n    to: \"#\",\n    onClick: () => {\n      onToggle();\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Logo, {\n    logoType: mode,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 11\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"nav\",\n    style: {\n      width: `calc(80% - ${getNavWidth()})`\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"nav-right\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 11\n    }\n  }, \"Session: 34 minutes User: Dhruva Agrawal\"))));\n};\n\nconst mapStateToProps = ({\n  theme\n}) => {\n  const {\n    navCollapsed,\n    navType,\n    headerNavColor,\n    mobileNav\n  } = theme;\n  return {\n    navCollapsed,\n    navType,\n    headerNavColor,\n    mobileNav\n  };\n};\n\nexport default connect(mapStateToProps, {\n  toggleCollapsedNav,\n  onMobileNavToggle\n})(HeaderNav);","map":{"version":3,"sources":["/Users/dhruvaagrawal/Desktop/Work/Projects/Webdev.nosync/Twitter/app/src/components/layout-components/HeaderNav.js"],"names":["React","useState","connect","Link","Menu","Layout","MenuFoldOutlined","MenuUnfoldOutlined","Logo","toggleCollapsedNav","onMobileNavToggle","NAV_TYPE_TOP","SIDE_NAV_COLLAPSED_WIDTH","SIDE_NAV_WIDTH","utils","Header","HeaderNav","props","navCollapsed","mobileNav","navType","headerNavColor","isMobile","onToggle","isNavTop","mode","getColorContrast","getNavWidth","backgroundColor","width","mapStateToProps","theme"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { Link } from 'react-router-dom'\r\nimport { Menu, Layout } from \"antd\";\r\nimport { MenuFoldOutlined, MenuUnfoldOutlined } from '@ant-design/icons';\r\nimport Logo from './Logo';\r\nimport { toggleCollapsedNav, onMobileNavToggle } from 'redux/actions/Theme';\r\nimport { NAV_TYPE_TOP, SIDE_NAV_COLLAPSED_WIDTH, SIDE_NAV_WIDTH } from 'constants/ThemeConstant';\r\nimport utils from 'utils'\r\n\r\nconst { Header } = Layout;\r\n\r\nexport const HeaderNav = props => {\r\n  const { navCollapsed, mobileNav, navType, headerNavColor, toggleCollapsedNav, onMobileNavToggle, isMobile } = props;\r\n\r\n  const onToggle = () => {\r\n    if(!isMobile) {\r\n      toggleCollapsedNav(!navCollapsed)\r\n    } else {\r\n      onMobileNavToggle(!mobileNav)\r\n    }\r\n  }\r\n\r\n  const isNavTop = navType === NAV_TYPE_TOP ? true : false\r\n  const mode = utils.getColorContrast(headerNavColor)\r\n  const getNavWidth = () => {\r\n    if(isNavTop || isMobile) {\r\n      return '0px'\r\n    }\r\n    if(navCollapsed) {\r\n      return `${SIDE_NAV_COLLAPSED_WIDTH}px`\r\n    } else {\r\n      return `${SIDE_NAV_WIDTH}px`\r\n    }\r\n  }\r\n  return (\r\n    <Header className={`app-header ${mode}`} style={{backgroundColor: headerNavColor}}>\r\n      <div className={`app-header-wrapper ${isNavTop ? 'layout-top-nav' : ''}`}>\r\n        <Link to=\"#\" onClick={() => { onToggle() }}>\r\n          <Logo logoType={mode} />\r\n        </Link>\r\n        <div className=\"nav\" style={{ width: `calc(80% - ${ getNavWidth() })`}}>\r\n          <div className=\"nav-right\">\r\n            Session: 34 minutes\r\n            User: Dhruva Agrawal \r\n          </div>\r\n        </div>\r\n      </div>\r\n    </Header>\r\n  )\r\n}\r\n\r\nconst mapStateToProps = ({ theme }) => {\r\n  const { navCollapsed, navType, headerNavColor, mobileNav } =  theme;\r\n  return { navCollapsed, navType, headerNavColor, mobileNav }\r\n};\r\n\r\nexport default connect(mapStateToProps, {toggleCollapsedNav, onMobileNavToggle})(HeaderNav);"]},"metadata":{},"sourceType":"module"}