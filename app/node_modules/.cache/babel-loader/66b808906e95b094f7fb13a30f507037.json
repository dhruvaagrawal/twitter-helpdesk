{"ast":null,"code":"var _jsxFileName = \"/Users/dhruvaagrawal/Desktop/Work/Spocto/CMS/app/src/views/app-views/journeys/journey-ivr/taskTracker/ScrumboardContext.js\";\nimport React, { createContext, useReducer } from \"react\";\nimport { scrumboardData } from './ScrumboardData';\nconst UPDATE_ORDERED = 'UPDATE_ORDERED';\nconst UPDATE_COLUMN = 'UPDATE_COLUMN';\nconst UPDATE_MODAL = 'UPDATE_MODAL';\nconst UPDATE_MODAL_MODE = 'UPDATE_MODAL_MODE';\nconst UPDATE_CURRENT_LIST_ID = 'UPDATE_CURRENT_LIST_ID';\nconst UPDATE_CARD_DATA = 'UPDATE_CARD_DATA';\nexport const scrumboardReducer = (state, action) => {\n  switch (action.type) {\n    case UPDATE_ORDERED:\n      return { ...state,\n        ordered: action.payload\n      };\n\n    case UPDATE_COLUMN:\n      return { ...state,\n        columns: action.payload\n      };\n\n    case UPDATE_MODAL:\n      return { ...state,\n        modal: action.payload\n      };\n\n    case UPDATE_MODAL_MODE:\n      return { ...state,\n        modalMode: action.payload\n      };\n\n    case UPDATE_CURRENT_LIST_ID:\n      return { ...state,\n        currentListId: action.payload\n      };\n\n    case UPDATE_CARD_DATA:\n      return { ...state,\n        cardData: action.payload\n      };\n\n    default:\n      return state;\n  }\n};\nconst initialState = {\n  columns: scrumboardData,\n  ordered: Object.keys(scrumboardData),\n  modal: false,\n  modalMode: '',\n  currentListId: '',\n  cardData: null\n};\nexport const ScrumboardContext = createContext(initialState);\nexport const ScrumboardProvider = ({\n  children\n}) => {\n  const [state, dispatch] = useReducer(scrumboardReducer, initialState);\n  const dispatcher = {\n    updateOrdered: function (ordered) {\n      dispatch({\n        type: UPDATE_ORDERED,\n        payload: ordered\n      });\n    },\n    updateColumns: function (columns) {\n      dispatch({\n        type: UPDATE_COLUMN,\n        payload: columns\n      });\n    },\n    updateModal: function (modal) {\n      dispatch({\n        type: UPDATE_MODAL,\n        payload: modal\n      });\n    },\n    updateModalMode: function (modalMode) {\n      dispatch({\n        type: UPDATE_MODAL_MODE,\n        payload: modalMode\n      });\n    },\n    updateCurrentListId: function (currentListId) {\n      dispatch({\n        type: UPDATE_CURRENT_LIST_ID,\n        payload: currentListId\n      });\n    },\n    updateCardData: function (cardData) {\n      dispatch({\n        type: UPDATE_CARD_DATA,\n        payload: cardData\n      });\n    }\n  };\n  return /*#__PURE__*/React.createElement(ScrumboardContext.Provider, {\n    value: { ...state,\n      ...dispatcher\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 5\n    }\n  }, children);\n};","map":{"version":3,"sources":["/Users/dhruvaagrawal/Desktop/Work/Spocto/CMS/app/src/views/app-views/journeys/journey-ivr/taskTracker/ScrumboardContext.js"],"names":["React","createContext","useReducer","scrumboardData","UPDATE_ORDERED","UPDATE_COLUMN","UPDATE_MODAL","UPDATE_MODAL_MODE","UPDATE_CURRENT_LIST_ID","UPDATE_CARD_DATA","scrumboardReducer","state","action","type","ordered","payload","columns","modal","modalMode","currentListId","cardData","initialState","Object","keys","ScrumboardContext","ScrumboardProvider","children","dispatch","dispatcher","updateOrdered","updateColumns","updateModal","updateModalMode","updateCurrentListId","updateCardData"],"mappings":"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","sourcesContent":["import React, { createContext, useReducer } from \"react\";\nimport { scrumboardData } from './ScrumboardData';\n\nconst UPDATE_ORDERED = 'UPDATE_ORDERED'\nconst UPDATE_COLUMN = 'UPDATE_COLUMN'\nconst UPDATE_MODAL = 'UPDATE_MODAL'\nconst UPDATE_MODAL_MODE = 'UPDATE_MODAL_MODE'\nconst UPDATE_CURRENT_LIST_ID = 'UPDATE_CURRENT_LIST_ID'\nconst UPDATE_CARD_DATA = 'UPDATE_CARD_DATA'\n\nexport const scrumboardReducer = (state, action) => {\n  switch (action.type) {\n\t\tcase UPDATE_ORDERED:\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\tordered: action.payload\n      }\n    case UPDATE_COLUMN: \n      return {\n        ...state,\n        columns: action.payload\n      }\n    case UPDATE_MODAL: \n      return {\n        ...state,\n        modal: action.payload\n      }\n    case UPDATE_MODAL_MODE: \n      return {\n        ...state,\n        modalMode: action.payload\n      }\n    case UPDATE_CURRENT_LIST_ID: \n      return {\n        ...state,\n        currentListId: action.payload\n      }\n    case UPDATE_CARD_DATA: \n      return {\n        ...state,\n        cardData: action.payload\n      }\n    default:\n      return state;\n  }\n};\n\nconst initialState = {\n\tcolumns: scrumboardData,\n\tordered: Object.keys(scrumboardData),\n\tmodal: false,\n\tmodalMode: '',\n\tcurrentListId: '',\n\tcardData: null\n};\n\nexport const ScrumboardContext = createContext(initialState);\n\nexport const ScrumboardProvider = ({ children }) => {\n  const [state, dispatch] = useReducer(scrumboardReducer, initialState);\n\n\tconst dispatcher = {\n\t\tupdateOrdered: function (ordered) {\n      dispatch({\n\t\t\t\ttype: UPDATE_ORDERED,\n\t\t\t\tpayload: ordered\n\t\t\t});\n    },\n    updateColumns: function (columns) {\n      dispatch({\n\t\t\t\ttype: UPDATE_COLUMN,\n\t\t\t\tpayload: columns\n\t\t\t});\n    },\n    updateModal: function (modal) {\n      dispatch({\n\t\t\t\ttype: UPDATE_MODAL,\n\t\t\t\tpayload: modal\n\t\t\t});\n    },\n    updateModalMode: function (modalMode) {\n      dispatch({\n\t\t\t\ttype: UPDATE_MODAL_MODE,\n\t\t\t\tpayload: modalMode\n\t\t\t});\n    },\n    updateCurrentListId: function (currentListId) {\n      dispatch({\n\t\t\t\ttype: UPDATE_CURRENT_LIST_ID,\n\t\t\t\tpayload: currentListId\n\t\t\t});\n    },\n    updateCardData: function (cardData) {\n      dispatch({\n\t\t\t\ttype: UPDATE_CARD_DATA,\n\t\t\t\tpayload: cardData\n\t\t\t});\n    }\n\t}\n\n  return (\n    <ScrumboardContext.Provider\n      value={{\n        ...state,\n        ...dispatcher\n      }}\n    >\n      {children}\n    </ScrumboardContext.Provider>\n  );\n};"]},"metadata":{},"sourceType":"module"}