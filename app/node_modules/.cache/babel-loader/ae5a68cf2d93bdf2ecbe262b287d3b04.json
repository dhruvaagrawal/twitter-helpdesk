{"ast":null,"code":"var _jsxFileName = \"/Users/dhruvaagrawal/Desktop/Work/Spocto/CMS/app/src/views/app-views/journeys/dashboard/index.js\";\nimport React, { useState } from \"react\";\nimport { Row, Col, Card, Dropdown, Table, Menu, Tag, Typography } from 'antd';\nimport StatisticWidget from 'components/shared-components/StatisticWidget';\nimport BasicBar from 'components/shared-components/BasicBar';\nimport DonutChartWidget from 'components/shared-components/DonutChartWidget';\nimport { AnnualStatisticData, RecentTransactionData } from './DefaultDashboardData';\nimport { sessionData, sessionLabels, sessionColor } from './SalesDashboardData.js';\nimport { FileExcelOutlined, PrinterOutlined, EllipsisOutlined, ReloadOutlined } from '@ant-design/icons';\nimport { withRouter } from 'react-router-dom';\nconst {\n  Title\n} = Typography;\n\nconst switchName = name => {\n  let str = name.slice(-3);\n\n  switch (str) {\n    case 'ENG':\n    case 'HIN':\n      return 'green';\n\n    case 'TAM':\n    case 'TEL':\n    case 'KAN':\n      return 'geekblue';\n\n    case 'GUJ':\n    case 'MAR':\n      return 'purple';\n\n    default:\n      return 'lime';\n  }\n};\n\nconst switchColor = color => {\n  switch (color) {\n    case 'Campaign Ready':\n      return 'green';\n\n    case 'Testing (Phase 3)':\n    case 'Testing (Phase 2)':\n    case 'Testing (Phase 1)':\n      return 'gold';\n\n    case 'IVR creation':\n      return 'orange';\n\n    case 'Recording receieved':\n    case 'Sent for recording':\n      return 'volcano';\n\n    default:\n      return 'red';\n  }\n};\n\nconst formatDate = date => {\n  let month = '' + (date.getMonth() + 1);\n  let day = '' + date.getDate();\n  let year = date.getFullYear();\n  if (month.length < 2) month = '0' + month;\n  if (day.length < 2) day = '0' + day;\n  return [[year, month, day].join('-'), day];\n};\n\nconst switchDate = date => {\n  let d = new Date();\n  let [today, day] = formatDate(d);\n\n  if (date === today) {\n    return 'green';\n  } else if (day - date.split('-')[2] > 2) {\n    return 'blue';\n  } else {\n    return 'red';\n  }\n};\n\nconst IVRChart = () => /*#__PURE__*/React.createElement(DonutChartWidget, {\n  series: sessionData,\n  labels: sessionLabels,\n  customOptions: {\n    colors: sessionColor\n  },\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 63,\n    columnNumber: 2\n  }\n});\n\nconst SMSChart = () => /*#__PURE__*/React.createElement(BasicBar, {\n  series: sessionData,\n  labels: sessionLabels,\n  customOptions: {\n    colors: sessionColor\n  },\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 71,\n    columnNumber: 2\n  }\n});\n\nconst latestTransactionOption = /*#__PURE__*/React.createElement(Menu, {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 79,\n    columnNumber: 2\n  }\n}, /*#__PURE__*/React.createElement(Menu.Item, {\n  key: \"0\",\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 80,\n    columnNumber: 5\n  }\n}, /*#__PURE__*/React.createElement(\"span\", {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 81,\n    columnNumber: 4\n  }\n}, /*#__PURE__*/React.createElement(\"div\", {\n  className: \"d-flex align-items-center\",\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 82,\n    columnNumber: 5\n  }\n}, /*#__PURE__*/React.createElement(ReloadOutlined, {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 83,\n    columnNumber: 6\n  }\n}), /*#__PURE__*/React.createElement(\"span\", {\n  className: \"ml-2\",\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 84,\n    columnNumber: 6\n  }\n}, \"Refresh\")))), /*#__PURE__*/React.createElement(Menu.Item, {\n  key: \"1\",\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 88,\n    columnNumber: 5\n  }\n}, /*#__PURE__*/React.createElement(\"span\", {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 89,\n    columnNumber: 4\n  }\n}, /*#__PURE__*/React.createElement(\"div\", {\n  className: \"d-flex align-items-center\",\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 90,\n    columnNumber: 5\n  }\n}, /*#__PURE__*/React.createElement(PrinterOutlined, {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 91,\n    columnNumber: 6\n  }\n}), /*#__PURE__*/React.createElement(\"span\", {\n  className: \"ml-2\",\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 92,\n    columnNumber: 6\n  }\n}, \"Print\")))), /*#__PURE__*/React.createElement(Menu.Item, {\n  key: \"12\",\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 96,\n    columnNumber: 5\n  }\n}, /*#__PURE__*/React.createElement(\"span\", {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 97,\n    columnNumber: 4\n  }\n}, /*#__PURE__*/React.createElement(\"div\", {\n  className: \"d-flex align-items-center\",\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 98,\n    columnNumber: 5\n  }\n}, /*#__PURE__*/React.createElement(FileExcelOutlined, {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 99,\n    columnNumber: 6\n  }\n}), /*#__PURE__*/React.createElement(\"span\", {\n  className: \"ml-2\",\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 100,\n    columnNumber: 6\n  }\n}, \"Export\")))));\n\nconst cardDropdown = menu => /*#__PURE__*/React.createElement(Dropdown, {\n  overlay: menu,\n  trigger: ['click'],\n  placement: \"bottomRight\",\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 108,\n    columnNumber: 2\n  }\n}, /*#__PURE__*/React.createElement(\"a\", {\n  href: \"/#\",\n  className: \"text-gray font-size-lg\",\n  onClick: e => e.preventDefault(),\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 109,\n    columnNumber: 4\n  }\n}, /*#__PURE__*/React.createElement(EllipsisOutlined, {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 110,\n    columnNumber: 3\n  }\n})));\n\nconst tableColumns_1 = [{\n  title: 'Content Name',\n  dataIndex: 'contentName',\n  key: 'contentName',\n  render: text => /*#__PURE__*/React.createElement(\"div\", {\n    className: \"d-flex align-items-center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 121,\n      columnNumber: 4\n    }\n  }, /*#__PURE__*/React.createElement(Tag, {\n    className: \"mr-0\",\n    color: switchName(text),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 122,\n      columnNumber: 7\n    }\n  }, text))\n}, {\n  title: 'Date',\n  dataIndex: 'date',\n  key: 'date',\n  render: date => /*#__PURE__*/React.createElement(\"div\", {\n    className: \"text-left\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 131,\n      columnNumber: 4\n    }\n  }, /*#__PURE__*/React.createElement(Tag, {\n    className: \"mr-0\",\n    color: switchDate(date),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 132,\n      columnNumber: 5\n    }\n  }, date))\n}, {\n  title: 'Team',\n  key: 'member',\n  render: team => /*#__PURE__*/React.createElement(\"div\", {\n    className: \"text-left\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 140,\n      columnNumber: 4\n    }\n  }, /*#__PURE__*/React.createElement(Tag, {\n    className: \"mr-0\",\n    color: team.member === 'Campaign Team' ? 'cyan' : 'magenta',\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 141,\n      columnNumber: 5\n    }\n  }, team.member))\n}, {\n  title: () => /*#__PURE__*/React.createElement(\"div\", {\n    className: \"text-left\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 146,\n      columnNumber: 18\n    }\n  }, \"Status\"),\n  key: 'status',\n  render: (_, record) => /*#__PURE__*/React.createElement(\"div\", {\n    className: \"text-left\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 149,\n      columnNumber: 4\n    }\n  }, /*#__PURE__*/React.createElement(Tag, {\n    className: \"mr-0\",\n    color: switchColor(record.status),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 150,\n      columnNumber: 7\n    }\n  }, record.status))\n}];\n\nconst Dashboard = () => {\n  const [annualStatisticData] = useState(AnnualStatisticData);\n  const [recentTransactionData] = useState(RecentTransactionData);\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Row, {\n    gutter: 16,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 162,\n      columnNumber: 4\n    }\n  }, /*#__PURE__*/React.createElement(Col, {\n    xs: 24,\n    sm: 24,\n    md: 24,\n    lg: 24,\n    xl: 16,\n    xxl: 16,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 163,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Row, {\n    gutter: 16,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 164,\n      columnNumber: 6\n    }\n  }, annualStatisticData.map((elm, i) => /*#__PURE__*/React.createElement(Col, {\n    xs: 24,\n    sm: 24,\n    md: 24,\n    lg: 24,\n    xl: 6,\n    key: i,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 167,\n      columnNumber: 8\n    }\n  }, /*#__PURE__*/React.createElement(StatisticWidget, {\n    title: elm.title,\n    value: elm.value,\n    status: elm.status,\n    subtitle: elm.subtitle,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 168,\n      columnNumber: 9\n    }\n  })))), /*#__PURE__*/React.createElement(Row, {\n    gutter: 16,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 178,\n      columnNumber: 6\n    }\n  }, /*#__PURE__*/React.createElement(Col, {\n    xs: 24,\n    sm: 24,\n    md: 24,\n    lg: 24,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 179,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Card, {\n    title: \"Latest Transactions\",\n    extra: cardDropdown(latestTransactionOption),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 180,\n      columnNumber: 8\n    }\n  }, /*#__PURE__*/React.createElement(Table, {\n    className: \"no-border-last\",\n    columns: tableColumns_1,\n    dataSource: recentTransactionData,\n    rowKey: \"id\",\n    pagination: false,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 181,\n      columnNumber: 9\n    }\n  }))))), /*#__PURE__*/React.createElement(Col, {\n    xs: 24,\n    sm: 24,\n    md: 24,\n    lg: 8,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 192,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(IVRChart, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 193,\n      columnNumber: 6\n    }\n  }), /*#__PURE__*/React.createElement(Card, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 194,\n      columnNumber: 6\n    }\n  }, /*#__PURE__*/React.createElement(Title, {\n    level: 3,\n    style: {\n      textAlign: 'center',\n      paddingBottom: 0,\n      marginBottom: 0\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 195,\n      columnNumber: 7\n    }\n  }, \"SMS Progress\"), /*#__PURE__*/React.createElement(SMSChart, {\n    style: {\n      marginBottom: 0,\n      paddingBottom: 0\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 196,\n      columnNumber: 7\n    }\n  })))));\n};\n\nexport default withRouter(Dashboard);","map":{"version":3,"sources":["/Users/dhruvaagrawal/Desktop/Work/Spocto/CMS/app/src/views/app-views/journeys/dashboard/index.js"],"names":["React","useState","Row","Col","Card","Dropdown","Table","Menu","Tag","Typography","StatisticWidget","BasicBar","DonutChartWidget","AnnualStatisticData","RecentTransactionData","sessionData","sessionLabels","sessionColor","FileExcelOutlined","PrinterOutlined","EllipsisOutlined","ReloadOutlined","withRouter","Title","switchName","name","str","slice","switchColor","color","formatDate","date","month","getMonth","day","getDate","year","getFullYear","length","join","switchDate","d","Date","today","split","IVRChart","colors","SMSChart","latestTransactionOption","cardDropdown","menu","e","preventDefault","tableColumns_1","title","dataIndex","key","render","text","team","member","_","record","status","Dashboard","annualStatisticData","recentTransactionData","map","elm","i","value","subtitle","textAlign","paddingBottom","marginBottom"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\r\nimport { Row, Col, Card, Dropdown, Table, Menu, Tag, Typography } from 'antd';\r\nimport StatisticWidget from 'components/shared-components/StatisticWidget';\r\nimport BasicBar from 'components/shared-components/BasicBar'\r\nimport DonutChartWidget from 'components/shared-components/DonutChartWidget'\r\nimport { AnnualStatisticData, RecentTransactionData } from './DefaultDashboardData';\r\nimport {  sessionData, sessionLabels, sessionColor } from './SalesDashboardData.js'\r\n\r\nimport { FileExcelOutlined, PrinterOutlined, EllipsisOutlined, ReloadOutlined } from '@ant-design/icons';\r\nimport { withRouter } from 'react-router-dom';\r\n\r\nconst { Title } = Typography\r\n\r\nconst switchName = name => {\r\n\tlet str = name.slice(-3)\r\n\tswitch (str) {\r\n\t\tcase 'ENG': case 'HIN': return 'green'\r\n\t\tcase 'TAM': case 'TEL': case 'KAN': return 'geekblue'\r\n\t\tcase 'GUJ': case 'MAR': return 'purple'\r\n\t\tdefault: return 'lime'\r\n\t}\r\n}\r\n\r\nconst switchColor = color => {\r\n\tswitch (color) {\r\n\t\tcase 'Campaign Ready': return 'green'\r\n\t\tcase 'Testing (Phase 3)': case 'Testing (Phase 2)': case 'Testing (Phase 1)': return 'gold'\r\n\t\tcase 'IVR creation': return 'orange'\r\n\t\tcase 'Recording receieved': case 'Sent for recording' : return 'volcano'\r\n\t\tdefault: return 'red'\r\n\t}\r\n}\r\n\r\nconst formatDate = date => {\r\n\t\r\n\tlet month = '' + (date.getMonth() + 1)\r\n\tlet day = '' + date.getDate()\r\n\tlet year = date.getFullYear()\r\n\r\n    if (month.length < 2) \r\n\t\tmonth = '0' + month\r\n\t\t\r\n    if (day.length < 2) \r\n        day = '0' + day\r\n\r\n    return [[year, month, day].join('-'), day]\r\n}\r\n\r\nconst switchDate = date => {\r\n\tlet d = new Date()\r\n\tlet [ today, day ] = formatDate(d)\r\n\r\n\tif (date === today) {\r\n\t\treturn 'green'\r\n\t} else if (day - date.split('-')[2] > 2) {\r\n\t\treturn 'blue'\r\n\t} else {\r\n\t\treturn 'red'\r\n\t}\r\n}\r\n\r\nconst IVRChart = () => (\r\n\t<DonutChartWidget \r\n\t\tseries={sessionData} \r\n\t\tlabels={sessionLabels} \r\n\t\tcustomOptions={{colors: sessionColor}}\r\n\t/>\r\n)\r\n\r\nconst SMSChart = () => (\r\n\t<BasicBar\r\n\t\tseries={sessionData} \r\n\t\tlabels={sessionLabels} \r\n\t\tcustomOptions={{colors: sessionColor}}\r\n\t/>\r\n)\r\n\r\nconst latestTransactionOption = (\r\n\t<Menu>\r\n\t  \t<Menu.Item key=\"0\">\r\n\t\t\t<span>\r\n\t\t\t\t<div className=\"d-flex align-items-center\">\r\n\t\t\t\t\t<ReloadOutlined />\r\n\t\t\t\t\t<span className=\"ml-2\">Refresh</span>\r\n\t\t\t\t</div>\r\n\t\t\t</span>\r\n\t  \t</Menu.Item>\r\n\t  \t<Menu.Item key=\"1\">\r\n\t\t\t<span>\r\n\t\t\t\t<div className=\"d-flex align-items-center\">\r\n\t\t\t\t\t<PrinterOutlined />\r\n\t\t\t\t\t<span className=\"ml-2\">Print</span>\r\n\t\t\t\t</div>\r\n\t\t\t</span>\r\n\t  \t</Menu.Item>\r\n\t  \t<Menu.Item key=\"12\">\r\n\t\t\t<span>\r\n\t\t\t\t<div className=\"d-flex align-items-center\">\r\n\t\t\t\t\t<FileExcelOutlined />\r\n\t\t\t\t\t<span className=\"ml-2\">Export</span>\r\n\t\t\t\t</div>\r\n\t\t\t</span>\r\n\t  \t</Menu.Item>\r\n\t</Menu>\r\n);\r\n  \r\nconst cardDropdown = (menu) => (\r\n\t<Dropdown overlay={menu} trigger={['click']} placement=\"bottomRight\">\r\n\t  <a href=\"/#\" className=\"text-gray font-size-lg\" onClick={e => e.preventDefault()}>\r\n\t\t<EllipsisOutlined />\r\n\t  </a>\r\n\t</Dropdown>\r\n)\r\n  \r\nconst tableColumns_1 = [\r\n\t{\r\n\t  \ttitle: 'Content Name',\r\n\t  \tdataIndex: 'contentName',\r\n\t  \tkey: 'contentName',\r\n\t  \trender: text => (\r\n\t\t\t<div className=\"d-flex align-items-center\">\r\n\t\t  \t\t<Tag className=\"mr-0\" color={ switchName(text) }>{ text }</Tag>\r\n\t\t\t</div>\r\n\t  \t),\r\n\t},\r\n\t{\r\n\t  \ttitle: 'Date',\r\n\t  \tdataIndex: 'date',\r\n\t\tkey: 'date',\r\n\t\trender: date => (\r\n\t\t\t<div className=\"text-left\">\r\n\t\t\t\t<Tag className=\"mr-0\" color={ switchDate(date) }>{ date }</Tag>\r\n\t\t\t</div>\t\r\n\t\t)\r\n\t},\r\n\t{\r\n\t  \ttitle: 'Team',\r\n\t\tkey: 'member',\r\n\t\trender: team => (\r\n\t\t\t<div className=\"text-left\">\r\n\t\t\t\t<Tag className=\"mr-0\" color={ team.member === 'Campaign Team' ? 'cyan' : 'magenta' }>{ team.member }</Tag>\r\n\t\t\t</div>\r\n\t\t)\r\n\t},\r\n\t{\r\n\t  \ttitle: () => <div className=\"text-left\">Status</div>,\r\n\t  \tkey: 'status',\r\n\t  \trender: (_, record) => (\r\n\t\t\t<div className=\"text-left\">\r\n\t\t  \t\t<Tag className=\"mr-0\" color={switchColor(record.status)}>{record.status}</Tag>\r\n\t\t\t</div>\r\n\t  \t),\r\n\t},\r\n];\r\n\r\nconst Dashboard = () => {\r\n\tconst [annualStatisticData] = useState(AnnualStatisticData);\r\n\tconst [recentTransactionData] = useState(RecentTransactionData)\r\n\r\n\treturn (\r\n\t\t<>\r\n\t\t\t<Row gutter={16}>\r\n\t\t\t\t<Col xs={24} sm={24} md={24} lg={24} xl={16} xxl={16}>\r\n\t\t\t\t\t<Row gutter={16}>\r\n\t\t\t\t\t\t{\r\n\t\t\t\t\t\tannualStatisticData.map((elm, i) => (\r\n\t\t\t\t\t\t\t<Col xs={24} sm={24} md={24} lg={24} xl={6} key={i}>\r\n\t\t\t\t\t\t\t\t<StatisticWidget \r\n\t\t\t\t\t\t\t\t\ttitle={elm.title} \r\n\t\t\t\t\t\t\t\t\tvalue={elm.value}\r\n\t\t\t\t\t\t\t\t\tstatus={elm.status}\r\n\t\t\t\t\t\t\t\t\tsubtitle={elm.subtitle}\r\n\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t</Col>\r\n\t\t\t\t\t\t))\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t</Row>\r\n\t\t\t\t\t<Row gutter={16}>\r\n\t\t\t\t\t\t<Col xs={24} sm={24} md={24} lg={24}>\r\n\t\t\t\t\t\t\t<Card title=\"Latest Transactions\" extra={cardDropdown(latestTransactionOption)}>\r\n\t\t\t\t\t\t\t\t<Table \r\n\t\t\t\t\t\t\t\t\tclassName=\"no-border-last\" \r\n\t\t\t\t\t\t\t\t\tcolumns={tableColumns_1} \r\n\t\t\t\t\t\t\t\t\tdataSource={recentTransactionData} \r\n\t\t\t\t\t\t\t\t\trowKey='id' \r\n\t\t\t\t\t\t\t\t\tpagination={false}\r\n\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t</Card>\r\n\t\t\t\t\t\t</Col>\r\n\t\t\t\t\t</Row>\r\n\t\t\t\t</Col>\r\n\t\t\t\t<Col xs={24} sm={24} md={24} lg={8}>\r\n\t\t\t\t\t<IVRChart />\r\n\t\t\t\t\t<Card>\r\n\t\t\t\t\t\t<Title level={3} style={{ textAlign: 'center', paddingBottom: 0, marginBottom: 0 }}>SMS Progress</Title>\r\n\t\t\t\t\t\t<SMSChart style={{ marginBottom: 0, paddingBottom: 0 }} />\r\n\t\t\t\t\t</Card>\r\n\t\t\t\t</Col>\r\n\t\t\t</Row>\r\n\t\t</>\r\n\t)\r\n}\r\n\r\nexport default withRouter(Dashboard)"]},"metadata":{},"sourceType":"module"}