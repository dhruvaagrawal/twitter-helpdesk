{"ast":null,"code":"var _jsxFileName = \"/Users/dhruvaagrawal/Desktop/Work/Spocto/CMS/app/src/views/app-views/journeys/journey-ivr/campaignAssignment/index.js\";\nimport React, { useEffect, useState } from 'react';\nimport { Card, Tag, Table, Form, Select, Button, Checkbox, Row, Col, Typography, Input } from 'antd';\nimport { CloseCircleOutlined, PlusCircleOutlined, DownCircleOutlined } from '@ant-design/icons';\nimport Flex from 'components/shared-components/Flex';\nimport ConditionalElem from './ConditionalElem';\nimport AvatarStatus from 'components/shared-components/AvatarStatus';\nimport agentData from \"assets/data/agent-list.data.json\";\nconst {\n  Title\n} = Typography;\nconst {\n  Option\n} = Select;\nconst {\n  TextArea\n} = Input;\nconst AGENT_ASSIGNED_API_URL = 'http://dev2.spoctocular.com/test_api/public/api/agent_assigned';\nconst CAMPAIGNS_API_URL = 'http://dev2.spoctocular.com/test_api/public/api/campaigns';\nconst AGENT_DETAILS_API_URL = 'http://dev2.spoctocular.com/test_api/public/api/agentdetails';\n\nfunction CampaignAssigment(props) {\n  const [camps, setCamps] = useState([]);\n  const [agents, setAgents] = useState([]);\n  const [details, setDetails] = useState([]);\n  const [objLabel, setLabel] = useState();\n  const [visible, setVisible] = useState(false);\n  const formItemLayout = {\n    labelCol: {\n      span: 6\n    },\n    wrapperCol: {\n      span: 14\n    }\n  };\n  const columns = [{\n    title: 'User',\n    dataIndex: 'name',\n    render: (_, record) => /*#__PURE__*/React.createElement(\"div\", {\n      className: \"d-flex\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 5\n      }\n    }, /*#__PURE__*/React.createElement(AvatarStatus, {\n      src: record.img,\n      name: record.name,\n      subTitle: record.id + \"@spocto.com\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 6\n      }\n    })),\n    sorter: {\n      compare: (a, b) => {\n        a = a.name.toLowerCase();\n        b = b.name.toLowerCase();\n        return a > b ? -1 : b > a ? 1 : 0;\n      }\n    },\n    editable: true\n  }, {\n    title: 'Role',\n    dataIndex: /*#__PURE__*/React.createElement(Tag, {\n      className: \"text-capitalize\",\n      color: \"cyan\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 15\n      }\n    }, \"Agent\"),\n    sorter: {\n      compare: (a, b) => a.personalInfo.title.length - b.personalInfo.title.length\n    }\n  }, {\n    title: 'Active Chats',\n    dataIndex: 'activeChats',\n    render: num => /*#__PURE__*/React.createElement(Tag, {\n      color: 'red',\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 13\n      }\n    }, num),\n    sorter: {\n      compare: (a, b) => a.activeChats.length - b.activeChats.length\n    }\n  }];\n\n  function fetchAPI_Campaigns(url) {\n    fetch(url).then(response => response.json()).then(res => setCamps(res.campaigns));\n  }\n\n  function fetchAPI_Agents_Assigned(url) {\n    fetch(url).then(response => response.json()).then(res => setAgents(res.agentassigned));\n  }\n\n  useEffect(() => {\n    fetchAPI_Campaigns(CAMPAIGNS_API_URL);\n    fetchAPI_Agents_Assigned(AGENT_ASSIGNED_API_URL);\n  }, []);\n\n  const onFinish = values => {\n    console.log('Received values of form: ', values);\n  };\n\n  const renderCampaignName = () => {\n    return /*#__PURE__*/React.createElement(React.Fragment, null, camps.map(name => /*#__PURE__*/React.createElement(Option, {\n      value: name.id,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 21\n      }\n    }, name.name)));\n  }; // const renderCampaignId = () => {\n  //     return (\n  //         <>\n  //             {camps.map( name => {\n  //                 name.name === 'Demo - DEBT Collect' ? <Tag color=\"red\">20</Tag> :\n  //                 name.name === 'Demo - Payment Reminder' ? <Tag color=\"red\">21</Tag> :\n  //                 name.name === 'Demo - Legal Reminder' ? <Tag color=\"red\">22</Tag> :\n  //                 <Tag color=\"red\">32</Tag>\n  //             })}\n  //         </>   \n  //     )\n  // }\n\n\n  const selectCampaignOption = value => {\n    console.log(`${value.label} has been selected`);\n    setVisible(true);\n    setLabel(value.label);\n  };\n\n  return /*#__PURE__*/React.createElement(Card, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 124,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Title, {\n    style: {\n      textAlign: 'center',\n      fontSize: '2rem',\n      marginTop: '2%',\n      marginBottom: '4%'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 125,\n      columnNumber: 13\n    }\n  }, \"Campaign Assignment\"), /*#__PURE__*/React.createElement(Form, Object.assign({\n    name: \"validate_other\"\n  }, formItemLayout, {\n    onFinish: onFinish,\n    textAlign: \"center\",\n    initialValues: {\n      rate: 3.5\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 126,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(Form.Item, {\n    style: {\n      margin: '0',\n      position: 'absolute',\n      left: '50%',\n      transform: 'translateX(-50%)'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 133,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Flex, {\n    mobileFlex: false,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 134,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"mb-3 mr-3\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 135,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    type: \"primary\",\n    onClick: () => props.history.push(\"/app/home\"),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 136,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    style: {\n      marginRight: '0.5rem'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 136,\n      columnNumber: 100\n    }\n  }, /*#__PURE__*/React.createElement(CloseCircleOutlined, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 136,\n      columnNumber: 140\n    }\n  })), \"Close\")))), /*#__PURE__*/React.createElement(Form.Item, {\n    name: \"select\",\n    label: \"Campaign Name\",\n    hasFeedback: true,\n    rules: [{\n      required: true,\n      message: 'Please select a campaign name'\n    }],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 140,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Select, {\n    labelInValue: true,\n    placeholder: \"Please select a campaign name\",\n    onChange: selectCampaignOption,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 146,\n      columnNumber: 21\n    }\n  }, renderCampaignName())), visible && /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(ConditionalElem, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 155,\n      columnNumber: 25\n    }\n  }), /*#__PURE__*/React.createElement(Table, {\n    bordered: true,\n    dataSource: agentData,\n    columns: columns,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 156,\n      columnNumber: 25\n    }\n  }))));\n}\n\nexport default CampaignAssigment;","map":{"version":3,"sources":["/Users/dhruvaagrawal/Desktop/Work/Spocto/CMS/app/src/views/app-views/journeys/journey-ivr/campaignAssignment/index.js"],"names":["React","useEffect","useState","Card","Tag","Table","Form","Select","Button","Checkbox","Row","Col","Typography","Input","CloseCircleOutlined","PlusCircleOutlined","DownCircleOutlined","Flex","ConditionalElem","AvatarStatus","agentData","Title","Option","TextArea","AGENT_ASSIGNED_API_URL","CAMPAIGNS_API_URL","AGENT_DETAILS_API_URL","CampaignAssigment","props","camps","setCamps","agents","setAgents","details","setDetails","objLabel","setLabel","visible","setVisible","formItemLayout","labelCol","span","wrapperCol","columns","title","dataIndex","render","_","record","img","name","id","sorter","compare","a","b","toLowerCase","editable","personalInfo","length","num","activeChats","fetchAPI_Campaigns","url","fetch","then","response","json","res","campaigns","fetchAPI_Agents_Assigned","agentassigned","onFinish","values","console","log","renderCampaignName","map","selectCampaignOption","value","label","textAlign","fontSize","marginTop","marginBottom","rate","margin","position","left","transform","history","push","marginRight","required","message"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from 'react'\nimport { Card, Tag, Table, Form, Select, Button, Checkbox, Row, Col, Typography, Input } from 'antd';\nimport { CloseCircleOutlined, PlusCircleOutlined, DownCircleOutlined } from '@ant-design/icons'\nimport Flex from 'components/shared-components/Flex'\nimport ConditionalElem from './ConditionalElem'\nimport AvatarStatus from 'components/shared-components/AvatarStatus';\nimport agentData from \"assets/data/agent-list.data.json\";\n\nconst { Title } = Typography;\nconst { Option } = Select;\nconst { TextArea } = Input\n\nconst AGENT_ASSIGNED_API_URL = 'http://dev2.spoctocular.com/test_api/public/api/agent_assigned'\nconst CAMPAIGNS_API_URL = 'http://dev2.spoctocular.com/test_api/public/api/campaigns'\nconst AGENT_DETAILS_API_URL = 'http://dev2.spoctocular.com/test_api/public/api/agentdetails'\n\nfunction CampaignAssigment(props) {\n\n    const[ camps, setCamps ] = useState([])\n    const[ agents, setAgents ] = useState([])\n    const[ details, setDetails ] = useState([])\n    const [ objLabel, setLabel ] = useState()\n    const [ visible, setVisible ] = useState(false)\n\n    const formItemLayout = {\n        labelCol: {\n            span: 6,\n        },\n        wrapperCol: {\n            span: 14,\n        },\n    };\n\n    const columns = [\n\t\t{\n\t\t\ttitle: 'User',\n\t\t\tdataIndex: 'name',\n\t\t\trender: (_, record) => (\n\t\t\t\t<div className=\"d-flex\">\n\t\t\t\t\t<AvatarStatus src={record.img} name={record.name} subTitle={record.id + \"@spocto.com\"}/>\n\t\t\t\t</div>\n\t\t\t),\n\t\t\tsorter: {\n\t\t\t\tcompare: (a, b) => {\n\t\t\t\t\ta = a.name.toLowerCase();\n\t\t\t\t\tb = b.name.toLowerCase();\n\t\t\t\t\treturn a > b ? -1 : b > a ? 1 : 0;\n\t\t\t\t},\n\t\t\t},\n\t\t\teditable: true\n        },\n        {\n\t\t\ttitle: 'Role',\n\t\t\tdataIndex: <Tag className=\"text-capitalize\" color='cyan'>Agent</Tag>,\n\t\t\tsorter: {\n\t\t\t\tcompare: (a, b) => a.personalInfo.title.length - b.personalInfo.title.length,\n\t\t\t}\n        },\n        {\n\t\t\ttitle: 'Active Chats',\n\t\t\tdataIndex: 'activeChats',\n\t\t\trender: num => (\n            <Tag color={'red'}>{ num }</Tag>\n\t\t\t),\n            sorter: {\n\t\t\t\tcompare: (a, b) => a.activeChats.length - b.activeChats.length,\n\t\t\t}\n\t\t},\n    ]\n\n    function fetchAPI_Campaigns(url) {\n        fetch(url)\n            .then( response => response.json() )\n            .then( res => setCamps(res.campaigns))\n    }\n\n    function fetchAPI_Agents_Assigned(url) {\n        fetch(url)\n            .then( response => response.json() )\n            .then( res => setAgents(res.agentassigned))\n    }\n\n    useEffect(() => {\n        fetchAPI_Campaigns(CAMPAIGNS_API_URL)\n        fetchAPI_Agents_Assigned(AGENT_ASSIGNED_API_URL)\n    }, [])\n\n    const onFinish = (values) => {\n        console.log('Received values of form: ', values);\n    };\n    \n    const renderCampaignName = () => {\n\n        return (\n            <>\n                {camps.map( name => (\n                    <Option value={ name.id }>{ name.name }</Option>\n                ))}  \n            </>   \n        )\n    }\n\n    // const renderCampaignId = () => {\n\n    //     return (\n    //         <>\n    //             {camps.map( name => {\n    //                 name.name === 'Demo - DEBT Collect' ? <Tag color=\"red\">20</Tag> :\n    //                 name.name === 'Demo - Payment Reminder' ? <Tag color=\"red\">21</Tag> :\n    //                 name.name === 'Demo - Legal Reminder' ? <Tag color=\"red\">22</Tag> :\n    //                 <Tag color=\"red\">32</Tag>\n    //             })}\n    //         </>   \n    //     )\n    // }\n\n    const selectCampaignOption = value => {\n        console.log(`${value.label} has been selected`)\n        setVisible(true)\n        setLabel(value.label)\n    }\n\n    return (\n        <Card>\n            <Title style={{ textAlign: 'center', fontSize: '2rem', marginTop: '2%', marginBottom: '4%' }}>Campaign Assignment</Title>\n            <Form\n                name=\"validate_other\"\n                {...formItemLayout}\n                onFinish={onFinish}\n                textAlign=\"center\"\n                initialValues={{ rate: 3.5 }}\n            >\n                <Form.Item style={{ margin: '0', position: 'absolute', left: '50%', transform: 'translateX(-50%)' }}>\n                    <Flex mobileFlex={false}>\n                        <div className=\"mb-3 mr-3\">\n                            <Button type=\"primary\" onClick={() => props.history.push(\"/app/home\")}><span style={{ marginRight: '0.5rem' }}><CloseCircleOutlined /></span>Close</Button>\n                        </div>\n                    </Flex>\n                </Form.Item>\n                <Form.Item\n                    name=\"select\"\n                    label=\"Campaign Name\"\n                    hasFeedback\n                    rules={[{ required: true, message: 'Please select a campaign name' }]}\n                >\n                    <Select labelInValue placeholder=\"Please select a campaign name\" onChange={ selectCampaignOption }>\n                        { renderCampaignName() }\n                    </Select>\n                </Form.Item>\n                { visible && \n                    <>\n                        {/* <Form.Item name=\"tag\" label=\"Campaign ID\" hasFeedback>\n                            { renderCampaignId() }\n                        </Form.Item> */}\n                        <ConditionalElem />\n                        <Table\n                            bordered\n                            dataSource={agentData}\n                            columns={columns}\n                        />\n                    </>\n                }\n            </Form>\n        </Card>\n    )\n}\n\nexport default CampaignAssigment\n"]},"metadata":{},"sourceType":"module"}