{"ast":null,"code":"var _jsxFileName = \"/Users/dhruvaagrawal/Desktop/Work/Spocto/CMS/app/src/views/app-views/journeys/journey-ivr/taskTracker/Board.js\";\nimport React, { useContext, useState } from 'react';\nimport { ScrumboardContext } from './ScrumboardContext';\nimport { Draggable } from 'react-beautiful-dnd';\nimport BoardCard from './BoardCard';\nimport { modalModeTypes } from './utils';\nimport EllipsisDropdown from 'components/shared-components/EllipsisDropdown';\nimport { Menu, Form, Input, Modal } from 'antd';\nimport { CloseOutlined, EditOutlined, DeleteOutlined, ExclamationCircleOutlined } from '@ant-design/icons';\n\nconst RenameForm = ({\n  title,\n  finish\n}) => {\n  const [form] = Form.useForm();\n\n  const onRenameSubmit = values => {\n    finish(values.title);\n  };\n\n  const onClose = () => {\n    form.submit();\n  };\n\n  return /*#__PURE__*/React.createElement(Form, {\n    form: form,\n    name: \"renameField\",\n    onFinish: onRenameSubmit,\n    layout: \"vertical\",\n    autoComplete: \"off\",\n    className: \"w-100\",\n    initialValues: {\n      title: title\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 3\n    }\n  }, /*#__PURE__*/React.createElement(Form.Item, {\n    name: \"title\",\n    className: \"mb-0\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 4\n    }\n  }, /*#__PURE__*/React.createElement(Input, {\n    autoFocus: true,\n    value: title,\n    suffix: /*#__PURE__*/React.createElement(\"div\", {\n      className: \"cursor-pointer\",\n      onClick: () => onClose(),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(CloseOutlined, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 8\n      }\n    })),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 5\n    }\n  })));\n};\n\nconst Board = ({\n  title,\n  contents,\n  index,\n  isScrollable,\n  isCombineEnabled,\n  useClone\n}) => {\n  const {\n    updateModal,\n    updateModalMode,\n    updateCurrentListId,\n    updateCardData,\n    columns,\n    updateColumns,\n    ordered,\n    updateOrdered\n  } = useContext(ScrumboardContext);\n  const [renameActive, setRenameActive] = useState('');\n\n  const newCard = listId => {\n    updateModal(true);\n    updateModalMode(modalModeTypes(0));\n    updateCurrentListId(listId);\n  };\n\n  const onUpdateCardModal = (obj, listId) => {\n    updateModal(true);\n    updateModalMode(modalModeTypes(1));\n    updateCurrentListId(listId);\n    updateCardData(obj);\n  };\n\n  const onTitleClick = title => {\n    setRenameActive(title);\n  };\n\n  const onFinish = newTitle => {\n    if (newTitle) {\n      const newColumns = {};\n      delete Object.assign(newColumns, columns, {\n        [newTitle]: columns[title]\n      })[title];\n      const newOrder = ordered.map(elm => {\n        if (elm === title) {\n          return newTitle;\n        }\n\n        return elm;\n      });\n      updateColumns(newColumns);\n      updateOrdered(newOrder);\n    }\n\n    setRenameActive('');\n  };\n\n  const onBoardDelete = title => {\n    Modal.confirm({\n      title: 'Do you want to delete this board?',\n      icon: /*#__PURE__*/React.createElement(ExclamationCircleOutlined, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 10\n        }\n      }),\n      okText: 'Yes',\n      cancelText: 'Cancel',\n\n      onOk() {\n        const newOrder = ordered.filter(elm => elm !== title);\n        const newColumns = {};\n        Object.assign(newColumns, columns);\n        delete newColumns[title];\n        updateColumns(newColumns);\n        updateOrdered(newOrder);\n      }\n\n    });\n  };\n\n  return /*#__PURE__*/React.createElement(Draggable, {\n    draggableId: title,\n    index: index,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 3\n    }\n  }, (provided, snapshot) => /*#__PURE__*/React.createElement(\"div\", Object.assign({\n    className: \"board-column\",\n    ref: provided.innerRef\n  }, provided.draggableProps, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 6\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", Object.assign({\n    className: \"board-title\"\n  }, provided.dragHandleProps, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 7\n    }\n  }), renameActive === title ? /*#__PURE__*/React.createElement(RenameForm, {\n    title: title,\n    finish: onFinish,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 10\n    }\n  }) : /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"h4\", {\n    className: \"mb-0\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 11\n    }\n  }, title), /*#__PURE__*/React.createElement(EllipsisDropdown, {\n    menu: /*#__PURE__*/React.createElement(Menu, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 12\n      }\n    }, /*#__PURE__*/React.createElement(Menu.Item, {\n      onClick: () => onTitleClick(title),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 118,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(EditOutlined, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 119,\n        columnNumber: 14\n      }\n    }), /*#__PURE__*/React.createElement(\"span\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 120,\n        columnNumber: 14\n      }\n    }, \"Rename Board\")), /*#__PURE__*/React.createElement(Menu.Item, {\n      onClick: () => onBoardDelete(title),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 122,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(DeleteOutlined, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 123,\n        columnNumber: 14\n      }\n    }), /*#__PURE__*/React.createElement(\"span\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 124,\n        columnNumber: 14\n      }\n    }, \"Delete Board\"))),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 11\n    }\n  }))), /*#__PURE__*/React.createElement(BoardCard, {\n    listId: title,\n    listType: \"CONTENT\",\n    className: snapshot.isDragging ? 'is-dragging' : '',\n    contents: contents,\n    internalScroll: isScrollable,\n    isCombineEnabled: isCombineEnabled,\n    useClone: useClone,\n    cardData: onUpdateCardModal,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 132,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"board-add\",\n    onClick: () => newCard(title),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 142,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 143,\n      columnNumber: 8\n    }\n  }, \"Add task\"))));\n};\n\nexport default Board;","map":{"version":3,"sources":["/Users/dhruvaagrawal/Desktop/Work/Spocto/CMS/app/src/views/app-views/journeys/journey-ivr/taskTracker/Board.js"],"names":["React","useContext","useState","ScrumboardContext","Draggable","BoardCard","modalModeTypes","EllipsisDropdown","Menu","Form","Input","Modal","CloseOutlined","EditOutlined","DeleteOutlined","ExclamationCircleOutlined","RenameForm","title","finish","form","useForm","onRenameSubmit","values","onClose","submit","Board","contents","index","isScrollable","isCombineEnabled","useClone","updateModal","updateModalMode","updateCurrentListId","updateCardData","columns","updateColumns","ordered","updateOrdered","renameActive","setRenameActive","newCard","listId","onUpdateCardModal","obj","onTitleClick","onFinish","newTitle","newColumns","Object","assign","newOrder","map","elm","onBoardDelete","confirm","icon","okText","cancelText","onOk","filter","provided","snapshot","innerRef","draggableProps","dragHandleProps","isDragging"],"mappings":"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","sourcesContent":["import React, { useContext, useState } from 'react'\nimport { ScrumboardContext } from './ScrumboardContext'\nimport { Draggable } from 'react-beautiful-dnd';\nimport BoardCard from './BoardCard';\nimport { modalModeTypes } from './utils';\nimport EllipsisDropdown from 'components/shared-components/EllipsisDropdown'\nimport { Menu, Form, Input, Modal } from 'antd'\nimport { CloseOutlined, EditOutlined, DeleteOutlined, ExclamationCircleOutlined } from '@ant-design/icons';\n\nconst RenameForm = ({ title, finish }) => {\n\tconst [form] = Form.useForm();\n\n\tconst onRenameSubmit = values => {\n\t\tfinish(values.title)\n\t};\n\n\tconst onClose = () => {\n    form.submit();\n  };\n \n\treturn (\n\t\t<Form \n\t\t\tform={form}\n\t\t\tname=\"renameField\" \n\t\t\tonFinish={onRenameSubmit} \n\t\t\tlayout=\"vertical\"\n\t\t\tautoComplete=\"off\"\n\t\t\tclassName=\"w-100\"\n\t\t\tinitialValues={{\n\t\t\t\ttitle: title,\n\t\t\t}}\n\t\t>\n\t\t\t<Form.Item name=\"title\" className=\"mb-0\">\n\t\t\t\t<Input \n\t\t\t\t\tautoFocus \n\t\t\t\t\tvalue={title} \n\t\t\t\t\tsuffix={\n\t\t\t\t\t\t<div className=\"cursor-pointer\" onClick={() => onClose()}>\n\t\t\t\t\t\t\t<CloseOutlined />\n\t\t\t\t\t\t</div>\n\t\t\t\t\t}\n\t\t\t\t/>\n\t\t\t</Form.Item>\n\t\t</Form>\n\t)\n}\n\nconst Board = ({ title, contents, index, isScrollable, isCombineEnabled, useClone }) => {\n\tconst { updateModal, updateModalMode, updateCurrentListId, updateCardData, columns, updateColumns, ordered, updateOrdered } = useContext(ScrumboardContext)\n\tconst [renameActive, setRenameActive] = useState('')\n\n\tconst newCard = listId => {\n\t\tupdateModal(true)\n\t\tupdateModalMode(modalModeTypes(0))\n\t\tupdateCurrentListId(listId)\n\t}\t\n\n\tconst onUpdateCardModal = (obj, listId) => {\n\t\tupdateModal(true)\n\t\tupdateModalMode(modalModeTypes(1))\n\t\tupdateCurrentListId(listId)\n\t\tupdateCardData(obj)\n\t}\n\t\n\tconst onTitleClick = title => {\n\t\tsetRenameActive(title)\n\t}\n\n\tconst onFinish = newTitle => {\n\t\tif(newTitle) {\n\t\t\tconst newColumns = {};\n\t\t\tdelete Object.assign(newColumns, columns, {[newTitle]: columns[title] })[title];\n\t\t\tconst newOrder = ordered.map(elm => {\n\t\t\t\tif(elm === title) {\n\t\t\t\t\treturn newTitle\n\t\t\t\t}\n\t\t\t\treturn elm\n\t\t\t})\n\t\t\tupdateColumns(newColumns)\n\t\t\tupdateOrdered(newOrder)\n\t\t}\n\t\tsetRenameActive('')\n\t};\n\n\tconst onBoardDelete = title => {\n\t\tModal.confirm({\n\t\t\ttitle: 'Do you want to delete this board?',\n\t\t\ticon: <ExclamationCircleOutlined />,\n\t\t\tokText: 'Yes',\n\t\t\tcancelText: 'Cancel',\n\t\t\tonOk() {\n\t\t\t\tconst newOrder = ordered.filter(elm => elm !== title)\n\t\t\t\tconst newColumns = {}\n\t\t\t\tObject.assign(newColumns, columns)\n\t\t\t\tdelete newColumns[title]\n\t\t\t\tupdateColumns(newColumns)\n\t\t\t\tupdateOrdered(newOrder)\n\t\t\t},\n\t\t});\n\t}\n\t\n\treturn (\n\t\t<Draggable draggableId={title} index={index}>\n\t\t\t{\n\t\t\t\t(provided, snapshot) => (\n\t\t\t\t\t<div className=\"board-column\" ref={provided.innerRef} {...provided.draggableProps}>\n\t\t\t\t\t\t<div className=\"board-title\" {...provided.dragHandleProps}>\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\trenameActive === title ? (\n\t\t\t\t\t\t\t\t\t<RenameForm title={title} finish={onFinish} />\n\t\t\t\t\t\t\t\t)\n\t\t\t\t\t\t\t\t:\n\t\t\t\t\t\t\t\t(\n\t\t\t\t\t\t\t\t\t<>\n\t\t\t\t\t\t\t\t\t\t<h4 className=\"mb-0\" >{title}</h4>\n\t\t\t\t\t\t\t\t\t\t<EllipsisDropdown menu={\n\t\t\t\t\t\t\t\t\t\t\t<Menu>\n\t\t\t\t\t\t\t\t\t\t\t\t<Menu.Item onClick={() => onTitleClick(title)}>\n\t\t\t\t\t\t\t\t\t\t\t\t\t<EditOutlined />\n\t\t\t\t\t\t\t\t\t\t\t\t\t<span>Rename Board</span>\n\t\t\t\t\t\t\t\t\t\t\t\t</Menu.Item>\n\t\t\t\t\t\t\t\t\t\t\t\t<Menu.Item onClick={() => onBoardDelete(title)}>\n\t\t\t\t\t\t\t\t\t\t\t\t\t<DeleteOutlined />\n\t\t\t\t\t\t\t\t\t\t\t\t\t<span>Delete Board</span>\n\t\t\t\t\t\t\t\t\t\t\t\t</Menu.Item>\n\t\t\t\t\t\t\t\t\t\t\t</Menu>\n\t\t\t\t\t\t\t\t\t\t}/>\n\t\t\t\t\t\t\t\t\t</>\n\t\t\t\t\t\t\t\t)\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t<BoardCard\n\t\t\t\t\t\t\tlistId={title}\n\t\t\t\t\t\t\tlistType=\"CONTENT\"\n\t\t\t\t\t\t\tclassName={snapshot.isDragging ? 'is-dragging' : ''}\n\t\t\t\t\t\t\tcontents={contents}\n\t\t\t\t\t\t\tinternalScroll={isScrollable}\n\t\t\t\t\t\t\tisCombineEnabled={isCombineEnabled}\n\t\t\t\t\t\t\tuseClone={useClone}\n\t\t\t\t\t\t\tcardData={onUpdateCardModal}\n\t\t\t\t\t\t/>\n\t\t\t\t\t\t<div className=\"board-add\" onClick={() => newCard(title)}>\n\t\t\t\t\t\t\t<div>Add task</div>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\t\t\t\t)\n\t\t\t}\n\t\t</Draggable>\n\t)\n}\n\nexport default Board"]},"metadata":{},"sourceType":"module"}