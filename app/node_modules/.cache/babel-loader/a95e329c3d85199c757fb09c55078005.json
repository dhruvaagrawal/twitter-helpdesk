{"ast":null,"code":"import{createStore,applyMiddleware,compose}from\"redux\";import reducers from\"../reducers\";import createSagaMiddleware from\"redux-saga\";import rootSaga from\"../sagas/index\";var sagaMiddleware=createSagaMiddleware();var middlewares=[sagaMiddleware];function configureStore(preloadedState){var composeEnhancers=window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__||compose;var store=createStore(reducers,preloadedState,composeEnhancers(applyMiddleware.apply(void 0,middlewares)));sagaMiddleware.run(rootSaga);if(module.hot){module.hot.accept(\"../reducers/index\",function(){var nextRootReducer=require(\"../reducers/index\");store.replaceReducer(nextRootReducer);});}return store;}var store=configureStore();export default store;","map":{"version":3,"sources":["/Users/dhruvaagrawal/Desktop/Work/Spocto/CMS/app/src/redux/store/index.js"],"names":["createStore","applyMiddleware","compose","reducers","createSagaMiddleware","rootSaga","sagaMiddleware","middlewares","configureStore","preloadedState","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","store","run","module","hot","accept","nextRootReducer","require","replaceReducer"],"mappings":"AAAA,OAASA,WAAT,CAAsBC,eAAtB,CAAuCC,OAAvC,KAAsD,OAAtD,CACA,MAAOC,CAAAA,QAAP,KAAqB,aAArB,CACA,MAAOC,CAAAA,oBAAP,KAAiC,YAAjC,CACA,MAAOC,CAAAA,QAAP,KAAqB,gBAArB,CAEA,GAAMC,CAAAA,cAAc,CAAGF,oBAAoB,EAA3C,CAEA,GAAMG,CAAAA,WAAW,CAAG,CAACD,cAAD,CAApB,CAEA,QAASE,CAAAA,cAAT,CAAwBC,cAAxB,CAAwC,CAEtC,GAAMC,CAAAA,gBAAgB,CAAGC,MAAM,CAACC,oCAAP,EAA+CV,OAAxE,CACA,GAAMW,CAAAA,KAAK,CAAGb,WAAW,CAACG,QAAD,CAAYM,cAAZ,CAA4BC,gBAAgB,CACnET,eAAe,MAAf,QAAmBM,WAAnB,CADmE,CAA5C,CAAzB,CAIAD,cAAc,CAACQ,GAAf,CAAmBT,QAAnB,EAEA,GAAIU,MAAM,CAACC,GAAX,CAAgB,CACdD,MAAM,CAACC,GAAP,CAAWC,MAAX,CAAkB,mBAAlB,CAAuC,UAAM,CAC3C,GAAMC,CAAAA,eAAe,CAAGC,OAAO,CAAC,mBAAD,CAA/B,CACAN,KAAK,CAACO,cAAN,CAAqBF,eAArB,EACD,CAHD,EAID,CAED,MAAOL,CAAAA,KAAP,CACD,CAED,GAAMA,CAAAA,KAAK,CAAGL,cAAc,EAA5B,CAEA,cAAeK,CAAAA,KAAf","sourcesContent":["import { createStore, applyMiddleware, compose } from \"redux\";\r\nimport reducers from \"../reducers\";\r\nimport createSagaMiddleware from \"redux-saga\";\r\nimport rootSaga from \"../sagas/index\";\r\n\r\nconst sagaMiddleware = createSagaMiddleware();\r\n\r\nconst middlewares = [sagaMiddleware];\r\n\r\nfunction configureStore(preloadedState) {\r\n\r\n  const composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\r\n  const store = createStore(reducers,  preloadedState, composeEnhancers(\r\n    applyMiddleware(...middlewares)\r\n  ));\r\n\r\n  sagaMiddleware.run(rootSaga);\r\n\r\n  if (module.hot) {\r\n    module.hot.accept(\"../reducers/index\", () => {\r\n      const nextRootReducer = require(\"../reducers/index\");\r\n      store.replaceReducer(nextRootReducer);\r\n    });\r\n  }\r\n\r\n  return store;\r\n}\r\n\r\nconst store = configureStore();\r\n\r\nexport default store;\r\n\r\n"]},"metadata":{},"sourceType":"module"}