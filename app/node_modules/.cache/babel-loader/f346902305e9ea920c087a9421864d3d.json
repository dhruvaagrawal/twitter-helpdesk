{"ast":null,"code":"var _jsxFileName = \"/Users/dhruvaagrawal/Desktop/Work/Spocto/CMS/app/src/views/app-views/journeys/journey-ivr/campaignAssignment/index.js\";\nimport React, { useEffect, useState } from 'react';\nimport { Card, Tag, Table, Form, Select, Button, Checkbox, Row, Col, Typography, Input } from 'antd';\nimport { CloseCircleOutlined, PlusCircleOutlined, DownCircleOutlined, SearchOutlined } from '@ant-design/icons';\nimport Flex from 'components/shared-components/Flex';\nimport ConditionalElem from './ConditionalElem';\nimport AvatarStatus from 'components/shared-components/AvatarStatus';\nimport agentData from \"assets/data/agent-list.data.json\";\nimport utils from 'utils';\nconst {\n  Title\n} = Typography;\nconst {\n  Option\n} = Select;\nconst {\n  TextArea\n} = Input;\nconst AGENT_ASSIGNED_API_URL = 'http://dev2.spoctocular.com/test_api/public/api/agent_assigned_list';\nconst CAMPAIGNS_API_URL = 'http://dev2.spoctocular.com/test_api/public/api/campaigns';\nconst AGENT_DETAILS_API_URL = 'http://dev2.spoctocular.com/test_api/public/api/agentdetails';\n\nfunction CampaignAssigment(props) {\n  const [camps, setCamps] = useState([]);\n  const [agents, setAgents] = useState([]);\n  const [details, setDetails] = useState([]);\n  const [objLabel, setLabel] = useState();\n  const [visible, setVisible] = useState(false);\n  const [checkStrictly, setCheckStrictly] = useState(false);\n  const [selectedRows, setSelectedRows] = useState([]);\n  const [selectedRowKeys, setSelectedRowKeys] = useState([]);\n  const [list, setList] = useState(details);\n  const formItemLayout = {\n    labelCol: {\n      span: 6\n    },\n    wrapperCol: {\n      span: 14\n    }\n  };\n  const columns = [{\n    title: 'User',\n    key: 'name',\n    dataIndex: 'name',\n    render: (_, record) => /*#__PURE__*/React.createElement(\"div\", {\n      className: \"d-flex\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 5\n      }\n    }, /*#__PURE__*/React.createElement(AvatarStatus, {\n      key: record.id,\n      src: record.img,\n      name: record.name,\n      subTitle: record.name.toLowerCase() + \"@spocto.com\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 6\n      }\n    })),\n    sorter: {\n      compare: (a, b) => {\n        a = a.name.toLowerCase();\n        b = b.name.toLowerCase();\n        return a > b ? -1 : b > a ? 1 : 0;\n      }\n    },\n    editable: true\n  }, {\n    title: 'Active Chats',\n    key: 'active',\n    dataIndex: 'activeChats',\n    render: num => /*#__PURE__*/React.createElement(Tag, {\n      color: 'red',\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 17\n      }\n    }, num),\n    sorter: {\n      compare: (a, b) => a.activeChats.length - b.activeChats.length\n    }\n  }];\n\n  function fetchAPI_Campaigns(url) {\n    fetch(url).then(response => response.json()).then(res => setCamps(res.campaigns));\n  }\n\n  function fetchAPI_Agents_Assigned(url) {\n    fetch(url).then(response => response.json()).then(res => setAgents(res.agentassigned));\n  }\n\n  function fetchAPI_Agents_Details(url) {\n    fetch(url).then(response => response.json()).then(res => setDetails(res.agentdetails));\n  }\n\n  useEffect(() => {\n    fetchAPI_Campaigns(CAMPAIGNS_API_URL);\n    fetchAPI_Agents_Assigned(AGENT_ASSIGNED_API_URL);\n    fetchAPI_Agents_Details(AGENT_DETAILS_API_URL);\n  }, []);\n\n  const onFinish = values => {\n    console.log('Received values of form: ', values);\n  };\n\n  const renderCampaignName = () => {\n    return /*#__PURE__*/React.createElement(React.Fragment, null, camps.map(name => /*#__PURE__*/React.createElement(Option, {\n      value: name.id,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 21\n      }\n    }, name.name)));\n  }; // const renderCampaignId = () => {\n  //     return (\n  //         <>\n  //             {camps.map( name => {\n  //                 name.name === 'Demo - DEBT Collect' ? <Tag color=\"red\">20</Tag> :\n  //                 name.name === 'Demo - Payment Reminder' ? <Tag color=\"red\">21</Tag> :\n  //                 name.name === 'Demo - Legal Reminder' ? <Tag color=\"red\">22</Tag> :\n  //                 <Tag color=\"red\">32</Tag>\n  //             })}\n  //         </>   \n  //     )\n  // }\n\n\n  const selectCampaignOption = value => {\n    console.log(`${value.label} has been selected`);\n    setVisible(true);\n    setLabel(value.label);\n  };\n\n  const rowSelection = {\n    onChange: (key, rows) => {\n      setSelectedRows(rows);\n      setSelectedRowKeys(key);\n    }\n  };\n\n  const onSearch = e => {\n    const value = e.currentTarget.value;\n    const searchArray = e.currentTarget.value ? details : details;\n    const data = utils.wildCardSearch(searchArray, value);\n    setDetails(data);\n    setSelectedRowKeys([]);\n    setDetails(details);\n  };\n\n  const handleSubmit = () => {\n    console.log('Button clicked');\n  };\n\n  return /*#__PURE__*/React.createElement(Card, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 152,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Title, {\n    style: {\n      textAlign: 'center',\n      fontSize: '2rem',\n      marginTop: '2%',\n      marginBottom: '4%'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 153,\n      columnNumber: 13\n    }\n  }, \"Campaign Assignment\"), /*#__PURE__*/React.createElement(Form, Object.assign({\n    name: \"validate_other\"\n  }, formItemLayout, {\n    onFinish: onFinish,\n    textAlign: \"center\",\n    initialValues: {\n      rate: 3.5\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 154,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(Form.Item, {\n    style: {\n      margin: '0',\n      position: 'absolute',\n      left: '50%',\n      transform: 'translateX(-50%)'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 161,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Flex, {\n    mobileFlex: false,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 162,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"mb-3 mr-3\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 163,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    type: \"primary\",\n    onClick: () => props.history.push(\"/app/home\"),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 164,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    style: {\n      marginRight: '0.5rem'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 164,\n      columnNumber: 100\n    }\n  }, /*#__PURE__*/React.createElement(CloseCircleOutlined, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 164,\n      columnNumber: 140\n    }\n  })), \"Close\")))), /*#__PURE__*/React.createElement(Form.Item, {\n    name: \"select\",\n    label: \"Campaign Name\",\n    hasFeedback: true,\n    rules: [{\n      required: true,\n      message: 'Please select a campaign name'\n    }],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 168,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Select, {\n    labelInValue: true,\n    placeholder: \"Please select a campaign name\",\n    onChange: selectCampaignOption,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 174,\n      columnNumber: 21\n    }\n  }, renderCampaignName())), visible && /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Flex, {\n    alignItems: \"center\",\n    justifyContent: \"between\",\n    mobileFlex: false,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 180,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(Flex, {\n    className: \"mb-1\",\n    mobileFlex: false,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 181,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"mr-md-3 mb-3\",\n    style: {\n      marginLeft: '5%'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 182,\n      columnNumber: 33\n    }\n  }, /*#__PURE__*/React.createElement(Input, {\n    placeholder: \"Search\",\n    prefix: /*#__PURE__*/React.createElement(SearchOutlined, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 183,\n        columnNumber: 73\n      }\n    }),\n    onChange: e => onSearch(e),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 183,\n      columnNumber: 37\n    }\n  })))), /*#__PURE__*/React.createElement(Table, {\n    dataSource: details,\n    columns: columns,\n    rowSelection: { ...rowSelection\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 191,\n      columnNumber: 25\n    }\n  }), /*#__PURE__*/React.createElement(Form.Item, {\n    style: {\n      display: 'flex',\n      justifyContent: 'center',\n      alignItems: 'center'\n    },\n    className: \"mt-5\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 196,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    variant: \"contained\",\n    type: \"primary\",\n    onClick: handleSubmit,\n    style: {\n      width: '100%',\n      height: '3rem',\n      fontSize: '1.25rem'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 197,\n      columnNumber: 29\n    }\n  }, \"Submit\")))));\n}\n\nexport default CampaignAssigment;","map":{"version":3,"sources":["/Users/dhruvaagrawal/Desktop/Work/Spocto/CMS/app/src/views/app-views/journeys/journey-ivr/campaignAssignment/index.js"],"names":["React","useEffect","useState","Card","Tag","Table","Form","Select","Button","Checkbox","Row","Col","Typography","Input","CloseCircleOutlined","PlusCircleOutlined","DownCircleOutlined","SearchOutlined","Flex","ConditionalElem","AvatarStatus","agentData","utils","Title","Option","TextArea","AGENT_ASSIGNED_API_URL","CAMPAIGNS_API_URL","AGENT_DETAILS_API_URL","CampaignAssigment","props","camps","setCamps","agents","setAgents","details","setDetails","objLabel","setLabel","visible","setVisible","checkStrictly","setCheckStrictly","selectedRows","setSelectedRows","selectedRowKeys","setSelectedRowKeys","list","setList","formItemLayout","labelCol","span","wrapperCol","columns","title","key","dataIndex","render","_","record","id","img","name","toLowerCase","sorter","compare","a","b","editable","num","activeChats","length","fetchAPI_Campaigns","url","fetch","then","response","json","res","campaigns","fetchAPI_Agents_Assigned","agentassigned","fetchAPI_Agents_Details","agentdetails","onFinish","values","console","log","renderCampaignName","map","selectCampaignOption","value","label","rowSelection","onChange","rows","onSearch","e","currentTarget","searchArray","data","wildCardSearch","handleSubmit","textAlign","fontSize","marginTop","marginBottom","rate","margin","position","left","transform","history","push","marginRight","required","message","marginLeft","display","justifyContent","alignItems","width","height"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from 'react'\nimport { Card, Tag, Table, Form, Select, Button, Checkbox, Row, Col, Typography, Input } from 'antd';\nimport { CloseCircleOutlined, PlusCircleOutlined, DownCircleOutlined, SearchOutlined } from '@ant-design/icons'\nimport Flex from 'components/shared-components/Flex'\nimport ConditionalElem from './ConditionalElem'\nimport AvatarStatus from 'components/shared-components/AvatarStatus';\nimport agentData from \"assets/data/agent-list.data.json\";\nimport utils from 'utils'\n\nconst { Title } = Typography;\nconst { Option } = Select;\nconst { TextArea } = Input\n\nconst AGENT_ASSIGNED_API_URL = 'http://dev2.spoctocular.com/test_api/public/api/agent_assigned_list'\nconst CAMPAIGNS_API_URL = 'http://dev2.spoctocular.com/test_api/public/api/campaigns'\nconst AGENT_DETAILS_API_URL = 'http://dev2.spoctocular.com/test_api/public/api/agentdetails'\n\nfunction CampaignAssigment(props) {\n\n    const[ camps, setCamps ] = useState([])\n    const[ agents, setAgents ] = useState([])\n    const[ details, setDetails ] = useState([])\n    const [ objLabel, setLabel ] = useState()\n    const [ visible, setVisible ] = useState(false)\n    const [checkStrictly, setCheckStrictly] = useState(false)\n    const [selectedRows, setSelectedRows] = useState([])\n    const [selectedRowKeys, setSelectedRowKeys] = useState([])\n    const [list, setList] = useState(details)\n\n    const formItemLayout = {\n        labelCol: {\n            span: 6,\n        },\n        wrapperCol: {\n            span: 14,\n        },\n    };\n\n    const columns = [\n\t\t{\n            title: 'User',\n            key: 'name',\n\t\t\tdataIndex: 'name',\n\t\t\trender: (_, record) => (\n\t\t\t\t<div className=\"d-flex\">\n\t\t\t\t\t<AvatarStatus  key={record.id} src={record.img} name={record.name} subTitle={record.name.toLowerCase() + \"@spocto.com\"}/>\n\t\t\t\t</div>\n\t\t\t),\n\t\t\tsorter: {\n\t\t\t\tcompare: (a, b) => {\n\t\t\t\t\ta = a.name.toLowerCase();\n\t\t\t\t\tb = b.name.toLowerCase();\n\t\t\t\t\treturn a > b ? -1 : b > a ? 1 : 0;\n\t\t\t\t},\n\t\t\t},\n\t\t\teditable: true\n        },\n        {\n            title: 'Active Chats',\n            key: 'active',\n\t\t\tdataIndex: 'activeChats',\n\t\t\trender: num => (\n                <Tag color={'red'}>{ num }</Tag>\n\t\t\t),\n            sorter: {\n\t\t\t\tcompare: (a, b) => a.activeChats.length - b.activeChats.length,\n\t\t\t}\n\t\t},\n    ]\n\n    function fetchAPI_Campaigns(url) {\n        fetch(url)\n            .then( response => response.json() )\n            .then( res => setCamps(res.campaigns))\n    }\n\n    function fetchAPI_Agents_Assigned(url) {\n        fetch(url)\n            .then( response => response.json() )\n            .then( res => setAgents(res.agentassigned))\n    }\n\n    function fetchAPI_Agents_Details(url) {\n        fetch(url)\n            .then( response => response.json() )\n            .then( res => setDetails(res.agentdetails))\n    }\n\n    useEffect(() => {\n        fetchAPI_Campaigns(CAMPAIGNS_API_URL)\n        fetchAPI_Agents_Assigned(AGENT_ASSIGNED_API_URL)\n        fetchAPI_Agents_Details(AGENT_DETAILS_API_URL)\n    }, [])\n\n\n    const onFinish = (values) => {\n        console.log('Received values of form: ', values);\n    };\n    \n    const renderCampaignName = () => {\n\n        return (\n            <>\n                {camps.map( name => (\n                    <Option value={ name.id }>{ name.name }</Option>\n                ))}  \n            </>   \n        )\n    }\n\n    // const renderCampaignId = () => {\n\n    //     return (\n    //         <>\n    //             {camps.map( name => {\n    //                 name.name === 'Demo - DEBT Collect' ? <Tag color=\"red\">20</Tag> :\n    //                 name.name === 'Demo - Payment Reminder' ? <Tag color=\"red\">21</Tag> :\n    //                 name.name === 'Demo - Legal Reminder' ? <Tag color=\"red\">22</Tag> :\n    //                 <Tag color=\"red\">32</Tag>\n    //             })}\n    //         </>   \n    //     )\n    // }\n\n    const selectCampaignOption = value => {\n        console.log(`${value.label} has been selected`)\n        setVisible(true)\n        setLabel(value.label)\n    }\n\n    const rowSelection = {\n\t\tonChange: (key, rows) => {\n\t\t\tsetSelectedRows(rows)\n\t\t\tsetSelectedRowKeys(key)\n\t\t}\n\t};\n\n    const onSearch = e => {\n\t\tconst value = e.currentTarget.value\n\t\tconst searchArray = e.currentTarget.value ? details : details\n\t\tconst data = utils.wildCardSearch(searchArray, value)\n\t\tsetDetails(data)\n        setSelectedRowKeys([])\n        setDetails(details)\n    }\n    \n    const handleSubmit = () => {\n        console.log('Button clicked')\n    }\n\n    return (\n        <Card>\n            <Title style={{ textAlign: 'center', fontSize: '2rem', marginTop: '2%', marginBottom: '4%' }}>Campaign Assignment</Title>\n            <Form\n                name=\"validate_other\"\n                {...formItemLayout}\n                onFinish={onFinish}\n                textAlign=\"center\"\n                initialValues={{ rate: 3.5 }}\n            >\n                <Form.Item style={{ margin: '0', position: 'absolute', left: '50%', transform: 'translateX(-50%)' }}>\n                    <Flex mobileFlex={false}>\n                        <div className=\"mb-3 mr-3\">\n                            <Button type=\"primary\" onClick={() => props.history.push(\"/app/home\")}><span style={{ marginRight: '0.5rem' }}><CloseCircleOutlined /></span>Close</Button>\n                        </div>\n                    </Flex>\n                </Form.Item>\n                <Form.Item\n                    name=\"select\"\n                    label=\"Campaign Name\"\n                    hasFeedback\n                    rules={[{ required: true, message: 'Please select a campaign name' }]}\n                >\n                    <Select labelInValue placeholder=\"Please select a campaign name\" onChange={ selectCampaignOption }>\n                        { renderCampaignName() }\n                    </Select>\n                </Form.Item>\n                { visible && \n                    <>\n                        <Flex alignItems=\"center\" justifyContent=\"between\" mobileFlex={false}>\n                            <Flex className=\"mb-1\" mobileFlex={false}>\n                                <div className=\"mr-md-3 mb-3\" style={{ marginLeft: '5%'}}>\n                                    <Input placeholder=\"Search\" prefix={<SearchOutlined />} onChange={e => onSearch(e)}/>\n                                </div>\n                            </Flex>\n                        </Flex>\n                        {/* <Form.Item name=\"tag\" label=\"Campaign ID\" hasFeedback>\n                            { renderCampaignId() }\n                        </Form.Item> */}\n                        {/* <ConditionalElem /> */}\n                        <Table\n                            dataSource={details}\n                            columns={columns}\n                            rowSelection={{ ...rowSelection }}\n                        />\n                        <Form.Item style={{display: 'flex', justifyContent: 'center', alignItems: 'center'}} className=\"mt-5\">\n                            <Button variant=\"contained\" type=\"primary\" onClick={ handleSubmit } style={{ width: '100%', height: '3rem', fontSize: '1.25rem' }}>Submit</Button>\n                        </Form.Item>\n                    </>\n                }\n            </Form>\n        </Card>\n    )\n}\n\nexport default CampaignAssigment\n"]},"metadata":{},"sourceType":"module"}