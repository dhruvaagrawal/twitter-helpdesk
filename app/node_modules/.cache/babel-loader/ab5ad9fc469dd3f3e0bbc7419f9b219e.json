{"ast":null,"code":"var assert = require('assert');\n\nvar toNerfDart = require('./nerf-dart.js');\n\nmodule.exports = getCredentialsByURI;\n\nfunction getCredentialsByURI(uri) {\n  assert(uri && typeof uri === 'string', 'registry URL is required');\n  var nerfed = toNerfDart(uri);\n  var defnerf = toNerfDart(this.get('registry')); // hidden class micro-optimization\n\n  var c = {\n    scope: nerfed,\n    token: undefined,\n    password: undefined,\n    username: undefined,\n    email: undefined,\n    auth: undefined,\n    alwaysAuth: undefined\n  }; // used to override scope matching for tokens as well as legacy auth\n\n  if (this.get(nerfed + ':always-auth') !== undefined) {\n    var val = this.get(nerfed + ':always-auth');\n    c.alwaysAuth = val === 'false' ? false : !!val;\n  } else if (this.get('always-auth') !== undefined) {\n    c.alwaysAuth = this.get('always-auth');\n  }\n\n  if (this.get(nerfed + ':_authToken')) {\n    c.token = this.get(nerfed + ':_authToken'); // the bearer token is enough, don't confuse things\n\n    return c;\n  }\n\n  if (this.get(nerfed + ':-authtoken')) {\n    c.token = this.get(nerfed + ':-authtoken'); // the bearer token is enough, don't confuse things\n\n    return c;\n  } // Handle the old-style _auth=<base64> style for the default\n  // registry, if set.\n\n\n  var authDef = this.get('_auth');\n  var userDef = this.get('username');\n  var passDef = this.get('_password');\n\n  if (authDef && !(userDef && passDef)) {\n    authDef = Buffer.from(authDef, 'base64').toString();\n    authDef = authDef.split(':');\n    userDef = authDef.shift();\n    passDef = authDef.join(':');\n  }\n\n  if (this.get(nerfed + ':_password')) {\n    c.password = Buffer.from(this.get(nerfed + ':_password'), 'base64').toString('utf8');\n  } else if (nerfed === defnerf && passDef) {\n    c.password = passDef;\n  }\n\n  if (this.get(nerfed + ':username')) {\n    c.username = this.get(nerfed + ':username');\n  } else if (nerfed === defnerf && userDef) {\n    c.username = userDef;\n  }\n\n  if (this.get(nerfed + ':email')) {\n    c.email = this.get(nerfed + ':email');\n  } else if (this.get('email')) {\n    c.email = this.get('email');\n  }\n\n  if (c.username && c.password) {\n    c.auth = Buffer.from(c.username + ':' + c.password).toString('base64');\n  }\n\n  return c;\n}","map":null,"metadata":{},"sourceType":"script"}