{"ast":null,"code":"// defaults, types, and shorthands.\nvar path = require('path');\n\nvar url = require('url');\n\nvar Stream = require('stream').Stream;\n\nvar semver = require('semver');\n\nvar stableFamily = semver.parse(process.version);\n\nvar nopt = require('nopt');\n\nvar os = require('os');\n\nvar osenv = require('osenv');\n\nvar umask = require('../utils/umask');\n\nvar hasUnicode = require('has-unicode');\n\nvar log;\n\ntry {\n  log = require('npmlog');\n} catch (er) {\n  var util = require('util');\n\n  log = {\n    warn: function (m) {\n      console.warn(m + ' ' + util.format.apply(util, [].slice.call(arguments, 1)));\n    }\n  };\n}\n\nexports.Umask = Umask;\n\nfunction Umask() {}\n\nfunction validateUmask(data, k, val) {\n  return umask.validate(data, k, val);\n}\n\nfunction validateSemver(data, k, val) {\n  if (!semver.valid(val)) return false;\n  data[k] = semver.valid(val);\n}\n\nfunction validateStream(data, k, val) {\n  if (!(val instanceof Stream)) return false;\n  data[k] = val;\n}\n\nnopt.typeDefs.semver = {\n  type: semver,\n  validate: validateSemver\n};\nnopt.typeDefs.Stream = {\n  type: Stream,\n  validate: validateStream\n};\nnopt.typeDefs.Umask = {\n  type: Umask,\n  validate: validateUmask\n};\n\nnopt.invalidHandler = function (k, val, type) {\n  log.warn('invalid config', k + '=' + JSON.stringify(val));\n\n  if (Array.isArray(type)) {\n    if (type.indexOf(url) !== -1) type = url;else if (type.indexOf(path) !== -1) type = path;\n  }\n\n  switch (type) {\n    case Umask:\n      log.warn('invalid config', 'Must be umask, octal number in range 0000..0777');\n      break;\n\n    case url:\n      log.warn('invalid config', \"Must be a full url with 'http://'\");\n      break;\n\n    case path:\n      log.warn('invalid config', 'Must be a valid filesystem path');\n      break;\n\n    case Number:\n      log.warn('invalid config', 'Must be a numeric value');\n      break;\n\n    case Stream:\n      log.warn('invalid config', 'Must be an instance of the Stream class');\n      break;\n  }\n};\n\nif (!stableFamily || +stableFamily.minor % 2) stableFamily = null;else stableFamily = stableFamily.major + '.' + stableFamily.minor;\nvar defaults;\nvar temp = osenv.tmpdir();\nvar home = osenv.home();\nvar uidOrPid = process.getuid ? process.getuid() : process.pid;\nif (home) process.env.HOME = home;else home = path.resolve(temp, 'npm-' + uidOrPid);\nvar cacheExtra = process.platform === 'win32' ? 'npm-cache' : '.npm';\nvar cacheRoot = process.platform === 'win32' && process.env.APPDATA || home;\nvar cache = path.resolve(cacheRoot, cacheExtra);\nvar globalPrefix;\nObject.defineProperty(exports, 'defaults', {\n  get: function () {\n    if (defaults) return defaults;\n\n    if (process.env.PREFIX) {\n      globalPrefix = process.env.PREFIX;\n    } else if (process.platform === 'win32') {\n      // c:\\node\\node.exe --> prefix=c:\\node\\\n      globalPrefix = path.dirname(process.execPath);\n    } else {\n      // /usr/local/bin/node --> prefix=/usr/local\n      globalPrefix = path.dirname(path.dirname(process.execPath)); // destdir only is respected on Unix\n\n      if (process.env.DESTDIR) {\n        globalPrefix = path.join(process.env.DESTDIR, globalPrefix);\n      }\n    }\n\n    defaults = {\n      access: null,\n      'allow-same-version': false,\n      'always-auth': false,\n      also: null,\n      audit: true,\n      'audit-level': 'low',\n      'auth-type': 'legacy',\n      'before': null,\n      'bin-links': true,\n      browser: null,\n      ca: null,\n      cafile: null,\n      cache: cache,\n      'cache-lock-stale': 60000,\n      'cache-lock-retries': 10,\n      'cache-lock-wait': 10000,\n      'cache-max': Infinity,\n      'cache-min': 10,\n      cert: null,\n      cidr: null,\n      color: process.env.NO_COLOR == null,\n      depth: Infinity,\n      description: true,\n      dev: false,\n      'dry-run': false,\n      editor: osenv.editor(),\n      'engine-strict': false,\n      force: false,\n      'format-package-lock': true,\n      fund: true,\n      'fetch-retries': 2,\n      'fetch-retry-factor': 10,\n      'fetch-retry-mintimeout': 10000,\n      'fetch-retry-maxtimeout': 60000,\n      git: 'git',\n      'git-tag-version': true,\n      'commit-hooks': true,\n      global: false,\n      globalconfig: path.resolve(globalPrefix, 'etc', 'npmrc'),\n      'global-style': false,\n      group: process.platform === 'win32' ? 0 : process.env.SUDO_GID || process.getgid && process.getgid(),\n      'ham-it-up': false,\n      heading: 'npm',\n      'if-present': false,\n      'ignore-prepublish': false,\n      'ignore-scripts': false,\n      'init-module': path.resolve(home, '.npm-init.js'),\n      'init-author-name': '',\n      'init-author-email': '',\n      'init-author-url': '',\n      'init-version': '1.0.0',\n      'init-license': 'ISC',\n      json: false,\n      key: null,\n      'legacy-bundling': false,\n      link: false,\n      'local-address': undefined,\n      loglevel: 'notice',\n      logstream: process.stderr,\n      'logs-max': 10,\n      long: false,\n      maxsockets: 50,\n      message: '%s',\n      'metrics-registry': null,\n      'node-options': null,\n      'node-version': process.version,\n      'offline': false,\n      'onload-script': false,\n      only: null,\n      optional: true,\n      otp: null,\n      'package-lock': true,\n      'package-lock-only': false,\n      parseable: false,\n      'prefer-offline': false,\n      'prefer-online': false,\n      prefix: globalPrefix,\n      preid: '',\n      production: process.env.NODE_ENV === 'production',\n      'progress': !process.env.TRAVIS && !process.env.CI,\n      proxy: null,\n      'https-proxy': null,\n      'noproxy': null,\n      'user-agent': 'npm/{npm-version} ' + 'node/{node-version} ' + '{platform} ' + '{arch} ' + '{ci}',\n      'read-only': false,\n      'rebuild-bundle': true,\n      registry: 'https://registry.npmjs.org/',\n      rollback: true,\n      save: true,\n      'save-bundle': false,\n      'save-dev': false,\n      'save-exact': false,\n      'save-optional': false,\n      'save-prefix': '^',\n      'save-prod': false,\n      scope: '',\n      'script-shell': null,\n      'scripts-prepend-node-path': 'warn-only',\n      searchopts: '',\n      searchexclude: null,\n      searchlimit: 20,\n      searchstaleness: 15 * 60,\n      'send-metrics': false,\n      shell: osenv.shell(),\n      shrinkwrap: true,\n      'sign-git-commit': false,\n      'sign-git-tag': false,\n      'sso-poll-frequency': 500,\n      'sso-type': 'oauth',\n      'strict-ssl': true,\n      tag: 'latest',\n      'tag-version-prefix': 'v',\n      timing: false,\n      tmp: temp,\n      unicode: hasUnicode(),\n      'unsafe-perm': process.platform === 'win32' || process.platform === 'cygwin' || !(process.getuid && process.setuid && process.getgid && process.setgid) || process.getuid() !== 0,\n      'update-notifier': true,\n      usage: false,\n      user: process.platform === 'win32' || os.type() === 'OS400' ? 0 : 'nobody',\n      userconfig: path.resolve(home, '.npmrc'),\n      umask: process.umask ? process.umask() : umask.fromString('022'),\n      version: false,\n      versions: false,\n      viewer: process.platform === 'win32' ? 'browser' : 'man',\n      _exit: true\n    };\n    return defaults;\n  }\n});\nexports.types = {\n  access: [null, 'restricted', 'public'],\n  'allow-same-version': Boolean,\n  'always-auth': Boolean,\n  also: [null, 'dev', 'development'],\n  audit: Boolean,\n  'audit-level': ['low', 'moderate', 'high', 'critical'],\n  'auth-type': ['legacy', 'sso', 'saml', 'oauth'],\n  'before': [null, Date],\n  'bin-links': Boolean,\n  browser: [null, String],\n  ca: [null, String, Array],\n  cafile: path,\n  cache: path,\n  'cache-lock-stale': Number,\n  'cache-lock-retries': Number,\n  'cache-lock-wait': Number,\n  'cache-max': Number,\n  'cache-min': Number,\n  cert: [null, String],\n  cidr: [null, String, Array],\n  color: ['always', Boolean],\n  depth: Number,\n  description: Boolean,\n  dev: Boolean,\n  'dry-run': Boolean,\n  editor: String,\n  'engine-strict': Boolean,\n  force: Boolean,\n  fund: Boolean,\n  'format-package-lock': Boolean,\n  'fetch-retries': Number,\n  'fetch-retry-factor': Number,\n  'fetch-retry-mintimeout': Number,\n  'fetch-retry-maxtimeout': Number,\n  git: String,\n  'git-tag-version': Boolean,\n  'commit-hooks': Boolean,\n  global: Boolean,\n  globalconfig: path,\n  'global-style': Boolean,\n  group: [Number, String],\n  'https-proxy': [null, url],\n  'user-agent': String,\n  'ham-it-up': Boolean,\n  'heading': String,\n  'if-present': Boolean,\n  'ignore-prepublish': Boolean,\n  'ignore-scripts': Boolean,\n  'init-module': path,\n  'init-author-name': String,\n  'init-author-email': String,\n  'init-author-url': ['', url],\n  'init-license': String,\n  'init-version': semver,\n  json: Boolean,\n  key: [null, String],\n  'legacy-bundling': Boolean,\n  link: Boolean,\n  'local-address': getLocalAddresses(),\n  loglevel: ['silent', 'error', 'warn', 'notice', 'http', 'timing', 'info', 'verbose', 'silly'],\n  logstream: Stream,\n  'logs-max': Number,\n  long: Boolean,\n  maxsockets: Number,\n  message: String,\n  'metrics-registry': [null, String],\n  'node-options': [null, String],\n  'node-version': [null, semver],\n  'noproxy': [null, String, Array],\n  offline: Boolean,\n  'onload-script': [null, String],\n  only: [null, 'dev', 'development', 'prod', 'production'],\n  optional: Boolean,\n  'package-lock': Boolean,\n  otp: [null, String],\n  'package-lock-only': Boolean,\n  parseable: Boolean,\n  'prefer-offline': Boolean,\n  'prefer-online': Boolean,\n  prefix: path,\n  preid: String,\n  production: Boolean,\n  progress: Boolean,\n  proxy: [null, false, url],\n  // allow proxy to be disabled explicitly\n  'read-only': Boolean,\n  'rebuild-bundle': Boolean,\n  registry: [null, url],\n  rollback: Boolean,\n  save: Boolean,\n  'save-bundle': Boolean,\n  'save-dev': Boolean,\n  'save-exact': Boolean,\n  'save-optional': Boolean,\n  'save-prefix': String,\n  'save-prod': Boolean,\n  scope: String,\n  'script-shell': [null, String],\n  'scripts-prepend-node-path': [false, true, 'auto', 'warn-only'],\n  searchopts: String,\n  searchexclude: [null, String],\n  searchlimit: Number,\n  searchstaleness: Number,\n  'send-metrics': Boolean,\n  shell: String,\n  shrinkwrap: Boolean,\n  'sign-git-commit': Boolean,\n  'sign-git-tag': Boolean,\n  'sso-poll-frequency': Number,\n  'sso-type': [null, 'oauth', 'saml'],\n  'strict-ssl': Boolean,\n  tag: String,\n  timing: Boolean,\n  tmp: path,\n  unicode: Boolean,\n  'unsafe-perm': Boolean,\n  'update-notifier': Boolean,\n  usage: Boolean,\n  user: [Number, String],\n  userconfig: path,\n  umask: Umask,\n  version: Boolean,\n  'tag-version-prefix': String,\n  versions: Boolean,\n  viewer: String,\n  _exit: Boolean\n};\n\nfunction getLocalAddresses() {\n  var interfaces; // #8094: some environments require elevated permissions to enumerate\n  // interfaces, and synchronously throw EPERM when run without\n  // elevated privileges\n\n  try {\n    interfaces = os.networkInterfaces();\n  } catch (e) {\n    interfaces = {};\n  }\n\n  return Object.keys(interfaces).map(nic => interfaces[nic].map(({\n    address\n  }) => address)).reduce((curr, next) => curr.concat(next), []).concat(undefined);\n}\n\nexports.shorthands = {\n  before: ['--enjoy-by'],\n  s: ['--loglevel', 'silent'],\n  d: ['--loglevel', 'info'],\n  dd: ['--loglevel', 'verbose'],\n  ddd: ['--loglevel', 'silly'],\n  noreg: ['--no-registry'],\n  N: ['--no-registry'],\n  reg: ['--registry'],\n  'no-reg': ['--no-registry'],\n  silent: ['--loglevel', 'silent'],\n  verbose: ['--loglevel', 'verbose'],\n  quiet: ['--loglevel', 'warn'],\n  q: ['--loglevel', 'warn'],\n  h: ['--usage'],\n  H: ['--usage'],\n  '?': ['--usage'],\n  help: ['--usage'],\n  v: ['--version'],\n  f: ['--force'],\n  desc: ['--description'],\n  'no-desc': ['--no-description'],\n  'local': ['--no-global'],\n  l: ['--long'],\n  m: ['--message'],\n  p: ['--parseable'],\n  porcelain: ['--parseable'],\n  readonly: ['--read-only'],\n  g: ['--global'],\n  S: ['--save'],\n  D: ['--save-dev'],\n  E: ['--save-exact'],\n  O: ['--save-optional'],\n  P: ['--save-prod'],\n  y: ['--yes'],\n  n: ['--no-yes'],\n  B: ['--save-bundle'],\n  C: ['--prefix']\n};","map":null,"metadata":{},"sourceType":"script"}