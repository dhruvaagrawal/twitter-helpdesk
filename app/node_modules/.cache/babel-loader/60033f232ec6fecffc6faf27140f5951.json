{"ast":null,"code":"var _jsxFileName = \"/Users/dhruvaagrawal/Desktop/Work/Spocto/CMS/app/src/views/app-views/ops-admin/UploadTransactions.js\";\nimport React, { useState } from 'react';\nimport { useHistory } from 'react-router';\nimport { InboxOutlined } from '@ant-design/icons';\nimport { Form, Button, Upload, Typography, message } from 'antd';\nimport FileMapping from 'assets/functions/FileMapping';\nconst {\n  Title\n} = Typography;\nconst {\n  Dragger\n} = Upload;\nconst formItemLayout = {\n  labelCol: {\n    span: 6\n  },\n  wrapperCol: {\n    span: 14\n  }\n};\n\nconst normFile = e => {\n  console.log('Upload event:', e);\n\n  if (Array.isArray(e)) {\n    return e;\n  }\n\n  return e && e.fileList;\n};\n\nfunction getBase64(file, callback) {\n  const reader = new FileReader();\n  reader.addEventListener('load', () => callback(reader.result));\n  reader.readAsArrayBuffer(file);\n}\n\nconst beforeUpload = file => {\n  const isSpreadsheet = file.type === 'text/csv' || 'application/vnd.openxmlformats-officedocument.spreadsheetml.sheet';\n\n  if (!isSpreadsheet) {\n    message.error('You can only upload .CSV or .XLSX  files!');\n  }\n\n  return isSpreadsheet;\n};\n\nconst UploadTransactions = props => {\n  const {\n    push\n  } = useHistory();\n  const [loading, setLoading] = useState(false);\n\n  const onFinish = values => {\n    console.log('Received values of form: ', values);\n  };\n\n  const handleChange = info => {\n    if (info.file.status === 'uploading') {\n      setLoading(true);\n      return;\n    }\n\n    if (info.file.status === 'done') {\n      // Get this url from response in real world.\n      getBase64(info.file.originFileObj, imageUrl => setLoading({\n        imageUrl,\n        loading: false\n      }));\n    }\n  };\n\n  return /*#__PURE__*/React.createElement(Form, Object.assign({\n    name: \"validate_other\"\n  }, formItemLayout, {\n    onFinish: onFinish,\n    initialValues: {\n      rate: 3.5\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(Form.Item, {\n    justify: \"center\",\n    style: {\n      textAlign: 'center',\n      marginTop: '1%'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Title, {\n    level: 1,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 17\n    }\n  }, \"Upload Transactions\")), /*#__PURE__*/React.createElement(Form.Item, {\n    justify: \"center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    type: \"file\",\n    accept: \".csv, .xlsx\",\n    onChange: normFile,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 17\n    }\n  })), /*#__PURE__*/React.createElement(Form.Item, {\n    style: {\n      display: 'flex',\n      justifyContent: 'center',\n      alignItems: 'center'\n    },\n    className: \"mt-5\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    onClick: () => push(\"app/journeys/dashboard\"),\n    variant: \"contained\",\n    type: \"primary\",\n    style: {\n      width: '100%',\n      height: '3rem',\n      fontSize: '1.25rem'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 17\n    }\n  }, \"Create Transactions\")));\n};\n\nexport default UploadTransactions;","map":{"version":3,"sources":["/Users/dhruvaagrawal/Desktop/Work/Spocto/CMS/app/src/views/app-views/ops-admin/UploadTransactions.js"],"names":["React","useState","useHistory","InboxOutlined","Form","Button","Upload","Typography","message","FileMapping","Title","Dragger","formItemLayout","labelCol","span","wrapperCol","normFile","e","console","log","Array","isArray","fileList","getBase64","file","callback","reader","FileReader","addEventListener","result","readAsArrayBuffer","beforeUpload","isSpreadsheet","type","error","UploadTransactions","props","push","loading","setLoading","onFinish","values","handleChange","info","status","originFileObj","imageUrl","rate","textAlign","marginTop","display","justifyContent","alignItems","width","height","fontSize"],"mappings":"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","sourcesContent":["import React, { useState } from 'react'\nimport { useHistory } from 'react-router'\nimport { InboxOutlined } from '@ant-design/icons';\nimport { Form, Button, Upload, Typography, message } from 'antd';\nimport FileMapping from 'assets/functions/FileMapping'\n\nconst { Title } = Typography\nconst { Dragger } = Upload\n\nconst formItemLayout = {\n    labelCol: {\n        span: 6,\n    },\n    wrapperCol: {\n        span: 14,\n    },\n};\n\nconst normFile = (e) => {\n    console.log('Upload event:', e);\n    if (Array.isArray(e)) {\n      return e;\n    }\n    return e && e.fileList;\n};\n  \nfunction getBase64(file, callback) {\n    const reader = new FileReader();\n    reader.addEventListener('load', () => callback(reader.result));\n    reader.readAsArrayBuffer(file);\n}\n  \nconst beforeUpload = file => {\n    const isSpreadsheet = file.type === 'text/csv' || 'application/vnd.openxmlformats-officedocument.spreadsheetml.sheet';\n    if (!isSpreadsheet) {\n      message.error('You can only upload .CSV or .XLSX  files!');\n    }\n    return isSpreadsheet\n}\n  \nconst UploadTransactions = props => {\n\n    const { push } = useHistory()\n\n    const [ loading, setLoading ] = useState(false)\n\n    const onFinish = (values) => {\n        console.log('Received values of form: ', values);\n    };\n\n    const handleChange = (info) => {\n        if (info.file.status === 'uploading') {\n            setLoading(true);\n            return;\n        }\n        if (info.file.status === 'done') {\n            // Get this url from response in real world.\n            getBase64(info.file.originFileObj, imageUrl => setLoading({ imageUrl, loading: false }));\n        }\n    }\n\n    return (\n        <Form\n            name=\"validate_other\"\n            {...formItemLayout}\n            onFinish={onFinish}\n            initialValues={{ rate: 3.5 }}\n        >\n            <Form.Item justify=\"center\" style={{ textAlign: 'center', marginTop: '1%' }}>\n                <Title level={1}>Upload Transactions</Title>\n            </Form.Item>\n            <Form.Item justify=\"center\">\n                <input type=\"file\" accept=\".csv, .xlsx\" onChange={ normFile } />\n                {/* <Form.Item name=\"fileUpload\" valuePropName=\"fileList\" getValueFromEvent={ normFile } noStyle>\n                    <Dragger>\n                        <p className=\"ant-upload-drag-icon\">\n                            <InboxOutlined />\n                        </p>\n                        <p className=\"ant-upload-text\">Click or drag file to this area to upload</p>\n                        <p className=\"ant-upload-hint\">Support for single and bulk upload.</p>\n                    </Dragger>\n                </Form.Item> */}\n            </Form.Item>\n            <Form.Item style={{display: 'flex', justifyContent: 'center', alignItems: 'center'}} className=\"mt-5\">\n                <Button onClick={ () => push(\"app/journeys/dashboard\")} variant=\"contained\" type=\"primary\" style={{ width: '100%', height: '3rem', fontSize: '1.25rem' }}>Create Transactions</Button>\n            </Form.Item>\n      </Form>\n    );\n};  \n\nexport default UploadTransactions"]},"metadata":{},"sourceType":"module"}