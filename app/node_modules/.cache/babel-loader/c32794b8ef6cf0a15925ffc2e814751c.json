{"ast":null,"code":"var _jsxFileName = \"/Users/dhruvaagrawal/Desktop/Work/Spocto/CMS/app/src/views/app-views/ops-admin/FileUploadForm.js\";\nimport React, { useState } from 'react';\nimport { message, Typography, Form, Button, Checkbox, Row, Col } from 'antd';\nimport axios from 'axios';\nimport { FILE_UPLOAD_URL } from 'constants/ApiConstant';\nimport XLSX from 'xlsx';\nimport readXlsxFile from 'read-excel-file';\nimport Table from '@material-ui/core/Table';\nconst {\n  Title\n} = Typography;\n\nconst FileUploadForm = props => {\n  let fileReader;\n  const [file, setFile] = useState(null);\n  const [visible, setVisible] = useState(false);\n  const [checked, setChecked] = useState(false);\n  const [createTable, setCreateTable] = useState([]);\n  const checkedLanguages = [];\n  const formItemLayout = {\n    labelCol: {\n      span: 6\n    },\n    wrapperCol: {\n      span: 14\n    }\n  };\n\n  const onCheck = event => {\n    checkedLanguages.push(event.target.value);\n    let x = checkedLanguages.toString();\n    console.log(x);\n  };\n\n  const renderLanguages = () => {\n    const languages = ['English', 'Hindi', 'Tamil', 'Telugu', 'Kannada', 'Marathi', 'Gujarati', 'Bengali', 'Punjabi', 'Malayalam'];\n    return /*#__PURE__*/React.createElement(React.Fragment, null, languages.map(language => /*#__PURE__*/React.createElement(Col, {\n      span: 6,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(Checkbox, {\n      value: language,\n      style: {\n        lineHeight: '32px'\n      },\n      onChange: onCheck,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 25\n      }\n    }, language))));\n  };\n\n  const createTableFromArray = array => {\n    return /*#__PURE__*/React.createElement(TableContainer, {\n      component: Paper,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Table, {\n      className: classes.table,\n      \"aria-label\": \"simple table\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(TableHead, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(TableRow, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 25\n      }\n    }, createTable[0].map(head => {\n      /*#__PURE__*/\n      React.createElement(TableCell, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 33\n        }\n      }, head);\n    })))));\n  };\n\n  const onSubmit = async e => {\n    let res = await uploadFile(file);\n    console.log(res.data);\n  };\n\n  const onChange = e => {\n    let tableArray = [];\n    setFile(e.target.files[0]);\n    readXlsxFile(e.target.files[0]).then(function (res) {\n      for (let i = 0; i < 3; i++) {\n        tableArray.push(res[i]);\n      }\n\n      console.log(tableArray);\n      setCreateTable(tableArray);\n    });\n  };\n\n  const uploadFile = async file => {\n    const formData = new FormData();\n    formData.append('file', file);\n    let res = await axios.post(FILE_UPLOAD_URL, formData, {\n      headers: {\n        'content-type': 'multipart/form-data'\n      }\n    }); // res.then( () => message.success(`Your ${file.name} was uploaded successfully.`) )\n    // .catch( err => message.error(`A ${err.status} error occured. Please try again.`) )\n    // console.log(res)\n\n    return res;\n  };\n\n  return /*#__PURE__*/React.createElement(Form, Object.assign({\n    name: \"validate_other\"\n  }, formItemLayout, {\n    onFinish: onSubmit,\n    textAlign: \"center\",\n    initialValues: {\n      rate: 3.5\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(Form.Item, {\n    justify: \"center\",\n    style: {\n      textAlign: 'center',\n      marginTop: '1%'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 125,\n      columnNumber: 4\n    }\n  }, /*#__PURE__*/React.createElement(Title, {\n    level: 1,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 126,\n      columnNumber: 17\n    }\n  }, \"Upload Transactions\")), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"file\",\n    onChange: onChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 128,\n      columnNumber: 4\n    }\n  }), /*#__PURE__*/React.createElement(Form.Item, {\n    name: \"language\",\n    label: \"Language\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 130,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Checkbox.Group, {\n    className: \"pl-3\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 131,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Row, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 132,\n      columnNumber: 21\n    }\n  }, renderLanguages()), /*#__PURE__*/React.createElement(Row, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 135,\n      columnNumber: 21\n    }\n  }, createTableFromArray(createTable)))), /*#__PURE__*/React.createElement(Form.Item, {\n    style: {\n      display: 'flex',\n      justifyContent: 'center',\n      alignItems: 'center'\n    },\n    className: \"mt-5\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 140,\n      columnNumber: 4\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    htmlType: \"submit\",\n    variant: \"contained\",\n    type: \"primary\",\n    style: {\n      width: '100%',\n      height: '3rem',\n      fontSize: '1.25rem'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 141,\n      columnNumber: 17\n    }\n  }, \"Create Transactions\")));\n};\n\nexport default FileUploadForm;","map":{"version":3,"sources":["/Users/dhruvaagrawal/Desktop/Work/Spocto/CMS/app/src/views/app-views/ops-admin/FileUploadForm.js"],"names":["React","useState","message","Typography","Form","Button","Checkbox","Row","Col","axios","FILE_UPLOAD_URL","XLSX","readXlsxFile","Table","Title","FileUploadForm","props","fileReader","file","setFile","visible","setVisible","checked","setChecked","createTable","setCreateTable","checkedLanguages","formItemLayout","labelCol","span","wrapperCol","onCheck","event","push","target","value","x","toString","console","log","renderLanguages","languages","map","language","lineHeight","createTableFromArray","array","Paper","classes","table","head","onSubmit","e","res","uploadFile","data","onChange","tableArray","files","then","i","formData","FormData","append","post","headers","rate","textAlign","marginTop","display","justifyContent","alignItems","width","height","fontSize"],"mappings":"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","sourcesContent":["import React, { useState } from 'react'\nimport { message, Typography, Form, Button, Checkbox, Row, Col } from 'antd'\nimport axios from 'axios'\nimport { FILE_UPLOAD_URL } from 'constants/ApiConstant'\nimport XLSX from 'xlsx'\nimport readXlsxFile from 'read-excel-file'\nimport Table from '@material-ui/core/Table'\n\nconst { Title } = Typography\n\nconst FileUploadForm = props => {\n\n    let fileReader;\n\n    const [ file, setFile ] = useState(null)\n    const [ visible, setVisible ] = useState(false)\n    const [ checked, setChecked ] = useState(false)\n    const [ createTable, setCreateTable ] = useState([])\n    const checkedLanguages = []\n\n    const formItemLayout = {\n        labelCol: {\n            span: 6,\n        },\n        wrapperCol: {\n            span: 14,\n        },\n    };\n    \n    const onCheck = event => {\n        checkedLanguages.push(event.target.value)\n        let x = checkedLanguages.toString()\n        console.log(x)\n    }\n    \n    const renderLanguages = () => {\n        const languages = ['English', 'Hindi', 'Tamil', 'Telugu', 'Kannada', 'Marathi', 'Gujarati', 'Bengali', 'Punjabi', 'Malayalam']\n\n        return (\n            <>\n                { languages.map( language => (\n                    <Col span={6}>\n                        <Checkbox value={ language } style={{ lineHeight: '32px' }} onChange={ onCheck }>{ language }</Checkbox>\n                    </Col>\n                )) }\n            </>\n        )\n    }\n\n    const createTableFromArray = array => {\n\n        return (\n            <TableContainer component={Paper}>\n                <Table className={classes.table} aria-label=\"simple table\">\n                    <TableHead>\n                        <TableRow>\n                            { createTable[0].map( head => {\n                                <TableCell>{ head }</TableCell>\n                            } )}\n                        </TableRow>\n                    </TableHead>\n                {/* <TableBody>\n                  {rows.map((row) => (\n                    <TableRow key={row.name}>\n                      <TableCell component=\"th\" scope=\"row\">\n                        {row.name}\n                      </TableCell>\n                      <TableCell align=\"right\">{row.calories}</TableCell>\n                      <TableCell align=\"right\">{row.fat}</TableCell>\n                      <TableCell align=\"right\">{row.carbs}</TableCell>\n                      <TableCell align=\"right\">{row.protein}</TableCell>\n                    </TableRow>\n                  ))}\n                </TableBody> */}\n              </Table>\n            </TableContainer>\n        )\n    }\n\n\n    const onSubmit = async (e) => {\n        let res = await uploadFile(file);\n        console.log(res.data);\n\t}\n\t\n    const onChange = e => {\n        let tableArray = []\n        setFile(e.target.files[0])\n        readXlsxFile(e.target.files[0])\n        .then( function(res) {\n            for (let i = 0; i < 3; i++) {\n                tableArray.push(res[i])\n            } \n            console.log(tableArray)\n            setCreateTable(tableArray)\n        })\n    }\n\n    const uploadFile = async (file) => {\n\n        const formData = new FormData();\n        \n        formData.append('file', file)\n        \n        let res =  await axios.post(FILE_UPLOAD_URL, formData, {\n            headers: {\n                'content-type': 'multipart/form-data'\n            }\n\t\t})\n\t\t// res.then( () => message.success(`Your ${file.name} was uploaded successfully.`) )\n\t\t// .catch( err => message.error(`A ${err.status} error occured. Please try again.`) )\n\n\t\t// console.log(res)\n\t\treturn res\n\t}\n\t  \n\treturn (\n        <Form\n            name=\"validate_other\"\n            {...formItemLayout}\n            onFinish={ onSubmit }\n            textAlign=\"center\"\n            initialValues={{ rate: 3.5 }}\n        >\n\t\t\t<Form.Item justify=\"center\" style={{ textAlign: 'center', marginTop: '1%' }}>\n                <Title level={1}>Upload Transactions</Title>\n            </Form.Item>\n\t\t\t<input type=\"file\" onChange={ onChange } />\n            {/* <input type=\"file\" id=\"file\" className=\"input-file\" accept=\".csv, .xlsx\" onChange={ e => handleFileChosen(e.target.files[0])} /> */}\n            <Form.Item name=\"language\" label=\"Language\">\n                <Checkbox.Group className=\"pl-3\">\n                    <Row>\n                        { renderLanguages() }\n                    </Row>\n                    <Row>\n                        { createTableFromArray(createTable) }\n                    </Row>\n                </Checkbox.Group>\n            </Form.Item>\n\t\t\t<Form.Item style={{ display: 'flex', justifyContent: 'center', alignItems: 'center' }} className=\"mt-5\">\n                <Button htmlType=\"submit\" variant=\"contained\" type=\"primary\" style={{ width: '100%', height: '3rem', fontSize: '1.25rem' }}>Create Transactions</Button>\n            </Form.Item>\n\t\t</Form>\n\t)\n        \n}\nexport default FileUploadForm"]},"metadata":{},"sourceType":"module"}