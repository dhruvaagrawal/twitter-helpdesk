{"ast":null,"code":"var _jsxFileName = \"/Users/dhruvaagrawal/Desktop/Work/Projects/Webdev.nosync/Twitter/app/src/views/app-views/journeys/journey-ivr/transaction/SmartVoice.js\";\n\n/* eslint-disable no-unused-vars */\nimport React, { useState, useEffect } from 'react';\nimport { Card, Table, Select, Input, InputNumber, Button, Row, Col, Menu, Tag, Modal, message, Space } from 'antd';\nimport { SearchOutlined, PlusCircleOutlined } from '@ant-design/icons';\nimport Highlighter from 'react-highlight-words';\nimport EllipsisDropdown from 'components/shared-components/EllipsisDropdown';\nimport { getLangColor, getCustomerColor, getProductColor, getTransactionColor, getUserColor, getCategoryColor, getTypeColor, getSegmentColor } from 'constants/TagColor';\nimport utils from 'utils';\nimport axios from 'axios';\nimport { API_LOCAL_BASE_URL, API_LOCAL_DATA_UPDATE_URL } from 'constants/ApiConstant'; // import { TableDownload } from 'constants/TableDownload'\n\nimport { Link } from 'react-router-dom';\nimport { fetchEsData } from 'assets/functions/FetchData';\nconst {\n  Option\n} = Select;\nconst {\n  TextArea\n} = Input;\nconst transactionStatusList = ['Client Approved', 'Sent for recording', 'Recording received', 'IVR creation', 'Testing (Phase 1)', 'Testing (Phase 2)', 'Testing (Phase 3)', 'Campaign ready'];\n\nconst changeStatus = () => {\n  message.success('Status has been changed');\n};\n\nexport default function SmartVoice() {\n  const [selectedRows, setSelectedRows] = useState([]);\n  const [selectedRowKeys, setSelectedRowKeys] = useState([]);\n  const [esData, setEsData] = useState([]);\n  const [list, setList] = useState([]);\n  const [editVisible, setEditVisible] = useState(false);\n  const [editedLevel, setEditedLevel] = useState('');\n  const [editedTranslatedContent, setEditedTranslatedContent] = useState('');\n  const [editedRecordingLink, setEditedRecordingLink] = useState('');\n  const [editedTransactionStatus, setEditedTransactionStatus] = useState('');\n  const [docId, setDocId] = useState('');\n  const [searchText, setSearchText] = useState('');\n  const [searchedColumn, setSearchedColumn] = useState('');\n  const emptyArray = [];\n  let searchInput;\n  useEffect(() => {\n    fetchEsData().then(res => {\n      res.data.hits.hits.map(row => emptyArray.push(row._source));\n      setEsData(emptyArray);\n    });\n    setList(esData);\n  }, []);\n\n  const handleShowStatus = value => {\n    if (value !== 'All') {\n      const key = 'transactionStatus';\n      const data = utils.filterArray(esData, key, value);\n      setList(data);\n    } else {\n      setList(esData);\n    }\n  };\n\n  const onLevelChange = value => setEditedLevel(value);\n\n  const onTranslatedContentChange = event => setEditedTranslatedContent(event.target.value);\n\n  const onRecordingLinkChange = event => setEditedRecordingLink(event.target.value);\n\n  const onTransactionStatusChange = value => setEditedTransactionStatus(value);\n\n  const handleEditedDetails = async () => {\n    setEditVisible(false);\n    await axios({\n      method: 'post',\n      baseURL: API_LOCAL_BASE_URL,\n      url: API_LOCAL_DATA_UPDATE_URL,\n      data: {\n        doc_id: docId,\n        level: editedLevel,\n        translated_content: editedTranslatedContent,\n        recording_link: editedRecordingLink,\n        status: editedTransactionStatus\n      }\n    });\n  };\n\n  const dropdownMenu = row => /*#__PURE__*/React.createElement(Menu, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 3\n    }\n  }, /*#__PURE__*/React.createElement(Menu.Item, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 4\n    }\n  }, /*#__PURE__*/React.createElement(Link, {\n    to: \"#\",\n    onClick: () => setEditVisible(true),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(PlusCircleOutlined, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 6\n    }\n  }), /*#__PURE__*/React.createElement(\"span\", {\n    className: \"ml-2\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 6\n    }\n  }, \"Edit\")), /*#__PURE__*/React.createElement(Modal, {\n    title: \"Edit The Transaction\",\n    centered: true,\n    visible: editVisible,\n    onOk: handleEditedDetails,\n    onCancel: () => setEditVisible(false),\n    width: 1000,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 5\n    }\n  }, selectedRows.map(elem => /*#__PURE__*/React.createElement(React.Fragment, null, setDocId(elem.doc_id), /*#__PURE__*/React.createElement(Row, {\n    gutter: 16,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 8\n    }\n  }, /*#__PURE__*/React.createElement(Col, {\n    span: 4,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Input, {\n    value: elem.customer_name,\n    disabled: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 10\n    }\n  })), /*#__PURE__*/React.createElement(Col, {\n    span: 4,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Input, {\n    value: elem.channel,\n    disabled: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 10\n    }\n  })), /*#__PURE__*/React.createElement(Col, {\n    span: 4,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Input, {\n    value: elem.product,\n    disabled: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 10\n    }\n  })), /*#__PURE__*/React.createElement(Col, {\n    span: 4,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Input, {\n    value: elem.segment,\n    disabled: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 10\n    }\n  })), /*#__PURE__*/React.createElement(Col, {\n    span: 8,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Input, {\n    value: elem.content_name,\n    disabled: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 10\n    }\n  }))), /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 8\n    }\n  }), /*#__PURE__*/React.createElement(Row, {\n    gutter: 16,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 8\n    }\n  }, /*#__PURE__*/React.createElement(Col, {\n    span: 7,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Input, {\n    value: elem.last_updated_on,\n    disabled: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 120,\n      columnNumber: 10\n    }\n  })), /*#__PURE__*/React.createElement(Col, {\n    span: 3,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 122,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Input, {\n    value: elem.last_updated_by,\n    disabled: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 123,\n      columnNumber: 10\n    }\n  })), /*#__PURE__*/React.createElement(Col, {\n    span: 4,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 125,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Input, {\n    value: elem.segment,\n    disabled: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 126,\n      columnNumber: 10\n    }\n  })), /*#__PURE__*/React.createElement(Col, {\n    span: 3,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 128,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(InputNumber, {\n    min: 1,\n    max: 6,\n    defaultValue: elem.level,\n    onChange: onLevelChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 129,\n      columnNumber: 10\n    }\n  })), /*#__PURE__*/React.createElement(Col, {\n    span: 7,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 131,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(TextArea, {\n    defaultValue: elem.recording_link,\n    allowClear: true,\n    autoSize: true,\n    onChange: onRecordingLinkChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 132,\n      columnNumber: 10\n    }\n  }))), /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 135,\n      columnNumber: 8\n    }\n  }), /*#__PURE__*/React.createElement(Row, {\n    gutter: 16,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 136,\n      columnNumber: 8\n    }\n  }, /*#__PURE__*/React.createElement(Col, {\n    span: 9,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 137,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(TextArea, {\n    defaultValue: elem.content,\n    autoSize: true,\n    disabled: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 138,\n      columnNumber: 10\n    }\n  })), /*#__PURE__*/React.createElement(Col, {\n    span: 9,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 140,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(TextArea, {\n    defaultValue: elem.translated_content,\n    allowClear: true,\n    autoSize: true,\n    onChange: onTranslatedContentChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 141,\n      columnNumber: 10\n    }\n  })), /*#__PURE__*/React.createElement(Col, {\n    span: 6,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 143,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Select, {\n    showArrow: true,\n    style: {\n      width: '100%'\n    },\n    defaultValue: elem.status,\n    onChange: onTransactionStatusChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 144,\n      columnNumber: 10\n    }\n  }, transactionStatusList.map(transaction => /*#__PURE__*/React.createElement(Option, {\n    key: transaction,\n    value: transaction,\n    style: {\n      lineHeight: '32px',\n      width: '100%'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 146,\n      columnNumber: 12\n    }\n  }, /*#__PURE__*/React.createElement(Tag, {\n    color: getTransactionColor(transaction),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 147,\n      columnNumber: 13\n    }\n  }, transaction)))))))))));\n\n  const getColumnSearchProps = dataIndex => ({\n    filterDropdown: ({\n      setSelectedKeys,\n      selectedKeys,\n      confirm,\n      clearFilters\n    }) => /*#__PURE__*/React.createElement(\"div\", {\n      style: {\n        padding: 8\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 162,\n        columnNumber: 6\n      }\n    }, /*#__PURE__*/React.createElement(Input, {\n      ref: node => searchInput = node,\n      placeholder: `Search ${dataIndex}`,\n      value: selectedKeys[0],\n      onChange: e => setSelectedKeys(e.target.value ? [e.target.value] : []),\n      onPressEnter: () => handleSearch(selectedKeys, confirm, dataIndex),\n      style: {\n        width: 188,\n        marginBottom: 8,\n        display: 'block'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 163,\n        columnNumber: 5\n      }\n    }), /*#__PURE__*/React.createElement(Space, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 171,\n        columnNumber: 5\n      }\n    }, /*#__PURE__*/React.createElement(Button, {\n      type: \"primary\",\n      onClick: () => handleSearch(selectedKeys, confirm, dataIndex),\n      icon: /*#__PURE__*/React.createElement(SearchOutlined, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 175,\n          columnNumber: 14\n        }\n      }),\n      size: \"small\",\n      style: {\n        width: 90\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 172,\n        columnNumber: 6\n      }\n    }, \"Search\"), /*#__PURE__*/React.createElement(Button, {\n      onClick: () => handleReset(clearFilters),\n      size: \"small\",\n      style: {\n        width: 90\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 181,\n        columnNumber: 6\n      }\n    }, \"Reset\"))),\n    filterIcon: filtered => /*#__PURE__*/React.createElement(SearchOutlined, {\n      style: {\n        color: filtered ? '#1890ff' : undefined\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 187,\n        columnNumber: 27\n      }\n    }),\n    onFilter: (value, record) => record[dataIndex] ? record[dataIndex].toString().toLowerCase().includes(value.toLowerCase()) : '',\n    onFilterDropdownVisibleChange: visible => {\n      if (visible) {\n        setTimeout(() => searchInput.select(), 100);\n      }\n    },\n    render: text => searchedColumn === dataIndex ? /*#__PURE__*/React.createElement(Highlighter, {\n      highlightStyle: {\n        backgroundColor: '#ffc069',\n        padding: 0\n      },\n      searchWords: [searchText],\n      autoEscape: true,\n      textToHighlight: text ? text.toString() : '',\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 197,\n        columnNumber: 5\n      }\n    }) : text\n  });\n\n  const handleSearch = (selectedKeys, confirm, dataIndex) => {\n    confirm();\n    setSearchText(selectedKeys[0]);\n    setSearchedColumn(dataIndex);\n  };\n\n  const handleReset = clearFilters => {\n    clearFilters();\n    setSearchText('');\n  };\n\n  const tableColumns = [{\n    title: 'Customer Name',\n    key: 'customer_name',\n    dataIndex: 'customer_name',\n    ...getColumnSearchProps('customer_name'),\n    render: (_, record) => /*#__PURE__*/React.createElement(\"div\", {\n      className: \"d-flex\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 225,\n        columnNumber: 5\n      }\n    }, /*#__PURE__*/React.createElement(Tag, {\n      color: getCustomerColor(record.customer_name),\n      style: {\n        letterSpacing: '1px'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 226,\n        columnNumber: 6\n      }\n    }, record.customer_name)),\n    sorter: (a, b) => utils.antdTableSorter(a, b, 'customer_name'),\n    colSpan: 1,\n    width: '5%'\n  }, {\n    title: 'Content Name',\n    key: 'content_name',\n    dataIndex: 'content_name',\n    ...getColumnSearchProps('content_name'),\n    render: (_, record) => /*#__PURE__*/React.createElement(\"div\", {\n      className: \"d-flex\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 239,\n        columnNumber: 5\n      }\n    }, /*#__PURE__*/React.createElement(\"span\", {\n      style: {\n        fontSize: '0.75rem'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 240,\n        columnNumber: 6\n      }\n    }, record.content_name)),\n    sorter: (a, b) => utils.antdTableSorter(a, b, 'content_name'),\n    colSpan: 1,\n    width: '8.5%'\n  }, {\n    title: 'Product',\n    key: 'product',\n    dataIndex: 'product',\n    ...getColumnSearchProps('product'),\n    render: (_, record) => /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Tag, {\n      color: getProductColor(record.product),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 253,\n        columnNumber: 7\n      }\n    }, record.product)),\n    sorter: (a, b) => utils.antdTableSorter(a, b, 'product'),\n    colSpan: 1\n  }, {\n    title: 'Segment',\n    key: 'segment',\n    dataIndex: 'segment',\n    ...getColumnSearchProps('segment'),\n    render: (_, record) => /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Tag, {\n      color: getSegmentColor(record.segment),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 264,\n        columnNumber: 7\n      }\n    }, record.segment)),\n    sorter: (a, b) => utils.antdTableSorter(a, b, 'segment'),\n    colSpan: 1\n  }, {\n    title: 'Type',\n    key: 'type',\n    dataIndex: 'type',\n    ...getColumnSearchProps('type'),\n    render: (_, record) => /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Tag, {\n      color: getTypeColor(record.type),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 275,\n        columnNumber: 7\n      }\n    }, record.type)),\n    sorter: (a, b) => utils.antdTableSorter(a, b, 'type'),\n    colSpan: 1\n  }, {\n    title: 'Level',\n    key: 'level',\n    dataIndex: 'level',\n    ...getColumnSearchProps('level'),\n    render: (_, record) => /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Tag, {\n      color: record.level === 1 ? 'gold' : record.level === 2 ? 'orange' : 'red',\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 286,\n        columnNumber: 7\n      }\n    }, record.level)),\n    sorter: (a, b) => Number(a.level) - Number(b.level),\n    colSpan: 1\n  }, {\n    title: 'Category',\n    key: 'category',\n    dataIndex: 'category',\n    ...getColumnSearchProps('category'),\n    render: (_, record) => /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Tag, {\n      color: getCategoryColor(record.category),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 297,\n        columnNumber: 7\n      }\n    }, record.category)),\n    sorter: (a, b) => utils.antdTableSorter(a, b, 'category'),\n    colSpan: 1\n  }, {\n    title: 'Language',\n    key: 'language',\n    dataIndex: 'language',\n    ...getColumnSearchProps('language'),\n    render: (_, record) => /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Tag, {\n      color: getLangColor(record.language),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 308,\n        columnNumber: 7\n      }\n    }, record.language)),\n    sorter: (a, b) => utils.antdTableSorter(a, b, 'language'),\n    colSpan: 1\n  }, {\n    title: 'Content',\n    key: 'content',\n    dataIndex: 'content',\n    ...getColumnSearchProps('content'),\n    render: (_, record) => /*#__PURE__*/React.createElement(\"div\", {\n      className: \"d-flex\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 319,\n        columnNumber: 5\n      }\n    }, /*#__PURE__*/React.createElement(\"span\", {\n      style: {\n        fontSize: '0.75rem'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 320,\n        columnNumber: 5\n      }\n    }, record.content)),\n    sorter: (a, b) => utils.antdTableSorter(a, b, 'content'),\n    colSpan: 1,\n    width: '15%'\n  }, {\n    title: 'Translated Content',\n    key: 'translated_content',\n    dataIndex: 'translated_content',\n    ...getColumnSearchProps('translated_content'),\n    render: (_, record) => /*#__PURE__*/React.createElement(\"div\", {\n      className: \"d-flex\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 333,\n        columnNumber: 5\n      }\n    }, /*#__PURE__*/React.createElement(\"span\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 334,\n        columnNumber: 5\n      }\n    }, record.translated_content)),\n    sorter: (a, b) => utils.antdTableSorter(a, b, 'translated_content'),\n    colSpan: 1\n  }, {\n    title: 'Version',\n    dataIndex: 'version',\n    key: 'version',\n    ...getColumnSearchProps('version'),\n    render: (_, record) => /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Tag, {\n      color: record.version === 1 ? 'geekblue' : 'success',\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 346,\n        columnNumber: 7\n      }\n    }, record.version)),\n    sorter: (a, b) => a.version - b.version,\n    colSpan: 1\n  }, {\n    title: 'Transaction Status',\n    key: 'status',\n    dataIndex: 'status',\n    ...getColumnSearchProps('transaction_status'),\n    render: (_, record) => /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Tag, {\n      color: getTransactionColor(record.status),\n      onClick: changeStatus,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 357,\n        columnNumber: 7\n      }\n    }, record.status)),\n    sorter: (a, b) => utils.antdTableSorter(a, b, 'status'),\n    colSpan: 1\n  }, {\n    title: 'Last Updated',\n    key: 'last_updated_on',\n    dataIndex: 'last_updated_on',\n    ...getColumnSearchProps('last_updated_on'),\n    render: (_, record) => /*#__PURE__*/React.createElement(\"span\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 368,\n        columnNumber: 5\n      }\n    }, record.last_updated_on.split(' GMT')[0]),\n    sorter: (a, b) => utils.antdTableSorter(a, b, 'last_updated_on'),\n    colSpan: 1\n  }, {\n    title: 'Last Updated By',\n    key: 'last_updated_by',\n    dataIndex: 'last_updated_by',\n    ...getColumnSearchProps('last_updated_by'),\n    render: (_, record) => /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Tag, {\n      color: getUserColor(record.last_updated_by),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 379,\n        columnNumber: 7\n      }\n    }, record.last_updated_by)),\n    sorter: (a, b) => utils.antdTableSorter(a, b, 'last_updated_by'),\n    colSpan: 1\n  }, {\n    title: 'Recording Link',\n    key: 'recording_link',\n    dataIndex: 'recording_link',\n    ...getColumnSearchProps('recording_link'),\n    render: (_, record) => /*#__PURE__*/React.createElement(\"div\", {\n      className: \"d-flex\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 390,\n        columnNumber: 5\n      }\n    }, /*#__PURE__*/React.createElement(\"span\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 391,\n        columnNumber: 5\n      }\n    }, record.recording_link)),\n    sorter: (a, b) => utils.antdTableSorter(a, b, 'recording_link'),\n    colSpan: 1\n  }, {\n    title: '',\n    key: 'actions',\n    dataIndex: 'actions',\n    render: (_, elm) => /*#__PURE__*/React.createElement(\"div\", {\n      className: \"text-right\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 402,\n        columnNumber: 5\n      }\n    }, /*#__PURE__*/React.createElement(EllipsisDropdown, {\n      menu: dropdownMenu(elm),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 403,\n        columnNumber: 6\n      }\n    })),\n    colSpan: 1\n  }];\n  const rowSelection = {\n    onChange: (key, rows) => {\n      setSelectedRows(rows);\n      setSelectedRowKeys(key);\n    }\n  };\n  return /*#__PURE__*/React.createElement(Card, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 418,\n      columnNumber: 3\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"table-responsive\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 425,\n      columnNumber: 4\n    }\n  }, /*#__PURE__*/React.createElement(Table, {\n    bordered: true,\n    columns: tableColumns,\n    dataSource: esData,\n    rowKey: \"content_name\",\n    rowSelection: {\n      selectedRowKeys: selectedRowKeys,\n      type: 'checkbox',\n      preserveSelectedRowKeys: true,\n      ...rowSelection\n    },\n    scroll: {\n      x: 2500\n    },\n    pagination: {\n      pageSize: 10\n    },\n    showQuickJumper: true,\n    responsive: true,\n    size: \"small\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 426,\n      columnNumber: 17\n    }\n  })));\n}","map":{"version":3,"sources":["/Users/dhruvaagrawal/Desktop/Work/Projects/Webdev.nosync/Twitter/app/src/views/app-views/journeys/journey-ivr/transaction/SmartVoice.js"],"names":["React","useState","useEffect","Card","Table","Select","Input","InputNumber","Button","Row","Col","Menu","Tag","Modal","message","Space","SearchOutlined","PlusCircleOutlined","Highlighter","EllipsisDropdown","getLangColor","getCustomerColor","getProductColor","getTransactionColor","getUserColor","getCategoryColor","getTypeColor","getSegmentColor","utils","axios","API_LOCAL_BASE_URL","API_LOCAL_DATA_UPDATE_URL","Link","fetchEsData","Option","TextArea","transactionStatusList","changeStatus","success","SmartVoice","selectedRows","setSelectedRows","selectedRowKeys","setSelectedRowKeys","esData","setEsData","list","setList","editVisible","setEditVisible","editedLevel","setEditedLevel","editedTranslatedContent","setEditedTranslatedContent","editedRecordingLink","setEditedRecordingLink","editedTransactionStatus","setEditedTransactionStatus","docId","setDocId","searchText","setSearchText","searchedColumn","setSearchedColumn","emptyArray","searchInput","then","res","data","hits","map","row","push","_source","handleShowStatus","value","key","filterArray","onLevelChange","onTranslatedContentChange","event","target","onRecordingLinkChange","onTransactionStatusChange","handleEditedDetails","method","baseURL","url","doc_id","level","translated_content","recording_link","status","dropdownMenu","elem","customer_name","channel","product","segment","content_name","last_updated_on","last_updated_by","content","width","transaction","lineHeight","getColumnSearchProps","dataIndex","filterDropdown","setSelectedKeys","selectedKeys","confirm","clearFilters","padding","node","e","handleSearch","marginBottom","display","handleReset","filterIcon","filtered","color","undefined","onFilter","record","toString","toLowerCase","includes","onFilterDropdownVisibleChange","visible","setTimeout","select","render","text","backgroundColor","tableColumns","title","_","letterSpacing","sorter","a","b","antdTableSorter","colSpan","fontSize","type","Number","category","language","version","split","elm","rowSelection","onChange","rows","preserveSelectedRowKeys","x","pageSize"],"mappings":"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","sourcesContent":["/* eslint-disable no-unused-vars */\nimport React, { useState, useEffect } from 'react'\nimport { Card, Table, Select, Input, InputNumber, Button, Row, Col, Menu, Tag, Modal, message, Space } from 'antd';\nimport { SearchOutlined, PlusCircleOutlined } from '@ant-design/icons';\nimport Highlighter from 'react-highlight-words';\nimport EllipsisDropdown from 'components/shared-components/EllipsisDropdown';\nimport { getLangColor, getCustomerColor, getProductColor, getTransactionColor, getUserColor, getCategoryColor, getTypeColor, getSegmentColor } from 'constants/TagColor'\nimport utils from 'utils'\nimport axios from 'axios'\nimport { API_LOCAL_BASE_URL, API_LOCAL_DATA_UPDATE_URL } from 'constants/ApiConstant'\n// import { TableDownload } from 'constants/TableDownload'\nimport { Link } from 'react-router-dom'\nimport { fetchEsData } from 'assets/functions/FetchData'\n\nconst { Option } = Select\nconst { TextArea } = Input\n\nconst transactionStatusList = [ 'Client Approved', 'Sent for recording', 'Recording received', 'IVR creation', 'Testing (Phase 1)', 'Testing (Phase 2)', 'Testing (Phase 3)', 'Campaign ready' ]\n\nconst changeStatus = () => {\n\tmessage.success('Status has been changed')\n}\n\nexport default function SmartVoice() {\n\n\tconst [ selectedRows, setSelectedRows ] = useState([])\n\tconst [ selectedRowKeys, setSelectedRowKeys ] = useState([])\n\tconst [ esData, setEsData ] = useState([])\n\tconst [ list, setList ] = useState([])\n\tconst [ editVisible, setEditVisible ] = useState(false)\n\tconst [ editedLevel, setEditedLevel ] = useState('')\n\tconst [ editedTranslatedContent, setEditedTranslatedContent ] = useState('')\n\tconst [ editedRecordingLink, setEditedRecordingLink ] = useState('')\n\tconst [ editedTransactionStatus, setEditedTransactionStatus ] = useState('')\n\tconst [ docId, setDocId ] = useState('')\n\tconst [ searchText, setSearchText ] = useState('')\n\tconst [ searchedColumn, setSearchedColumn ] = useState('')\n\tconst emptyArray = []\n\tlet searchInput\n\n\tuseEffect( () => {\n\t\tfetchEsData()\n\t\t\t.then( res => { \n\t\t\t\tres.data.hits.hits.map( row => emptyArray.push(row._source) )\n\t\t\t\tsetEsData(emptyArray)\n\t\t\t})\n\t\tsetList(esData)\n\t}, [])\n\n\n\tconst handleShowStatus = value => {\n\t\tif (value !== 'All') {\n\t\t\tconst key = 'transactionStatus'\n\t\t\tconst data = utils.filterArray(esData, key, value)\n\t\t\tsetList(data)\n\t\t} else {\n\t\t\tsetList(esData)\n\t\t}\n\t}\n\n\tconst onLevelChange = value => setEditedLevel(value)\n\tconst onTranslatedContentChange = event => setEditedTranslatedContent(event.target.value)\n\tconst onRecordingLinkChange = event => setEditedRecordingLink(event.target.value)\n\tconst onTransactionStatusChange = value => setEditedTransactionStatus(value)\n\n\tconst handleEditedDetails = async () => {\n\t\tsetEditVisible(false)\n\t\tawait axios({\n\t\t\tmethod: 'post',\n\t\t\tbaseURL: API_LOCAL_BASE_URL,\n\t\t\turl: API_LOCAL_DATA_UPDATE_URL,\n\t\t\tdata: {\n\t\t\t\tdoc_id: docId,\n\t\t\t\tlevel: editedLevel,\n\t\t\t\ttranslated_content: editedTranslatedContent,\n\t\t\t\trecording_link: editedRecordingLink,\n\t\t\t\tstatus: editedTransactionStatus\n\t\t\t}\n\t\t})\n\t}\n\n\tconst dropdownMenu = row => (\n\t\t<Menu>\n\t\t\t<Menu.Item>\n\t\t\t\t<Link to=\"#\" onClick={() => setEditVisible(true)}>\n\t\t\t\t\t<PlusCircleOutlined />\n\t\t\t\t\t<span className=\"ml-2\">Edit</span>\n\t\t\t\t</Link>\n\t\t\t\t<Modal\n\t\t\t\t\ttitle=\"Edit The Transaction\"\n\t\t\t\t\tcentered\n\t\t\t\t\tvisible={ editVisible }\n\t\t\t\t\tonOk={ handleEditedDetails }\n\t\t\t\t\tonCancel={ () => setEditVisible(false) }\n\t\t\t\t\twidth={ 1000 }\n\t\t\t\t>\n\t\t\t\t\t{ selectedRows.map( elem => (\n\t\t\t\t\t\t<>\n\t\t\t\t\t\t\t{ setDocId(elem.doc_id) }\n\t\t\t\t\t\t\t<Row gutter={ 16 }>\n\t\t\t\t\t\t\t\t<Col span={ 4 }>\n\t\t\t\t\t\t\t\t\t<Input value={ elem.customer_name } disabled />\n\t\t\t\t\t\t\t\t</Col>\n\t\t\t\t\t\t\t\t<Col span={ 4 }>\n\t\t\t\t\t\t\t\t\t<Input value={ elem.channel } disabled />\n\t\t\t\t\t\t\t\t</Col>\n\t\t\t\t\t\t\t\t<Col span={ 4 }>\n\t\t\t\t\t\t\t\t\t<Input value={ elem.product } disabled />\n\t\t\t\t\t\t\t\t</Col>\n\t\t\t\t\t\t\t\t<Col span={ 4 }>\n\t\t\t\t\t\t\t\t\t<Input value={ elem.segment } disabled />\n\t\t\t\t\t\t\t\t</Col>\n\t\t\t\t\t\t\t\t<Col span={ 8 }>\n\t\t\t\t\t\t\t\t\t<Input value={ elem.content_name } disabled />\n\t\t\t\t\t\t\t\t</Col>\n\t\t\t\t\t\t\t</Row>\n\t\t\t\t\t\t\t<br />\n\t\t\t\t\t\t\t<Row gutter={ 16 }>\n\t\t\t\t\t\t\t\t<Col span={ 7 }>\n\t\t\t\t\t\t\t\t\t<Input value={ elem.last_updated_on } disabled />\n\t\t\t\t\t\t\t\t</Col>\n\t\t\t\t\t\t\t\t<Col span={ 3 }>\n\t\t\t\t\t\t\t\t\t<Input value={ elem.last_updated_by } disabled />\n\t\t\t\t\t\t\t\t</Col>\n\t\t\t\t\t\t\t\t<Col span={ 4 }>\n\t\t\t\t\t\t\t\t\t<Input value={ elem.segment } disabled />\n\t\t\t\t\t\t\t\t</Col>\n\t\t\t\t\t\t\t\t<Col span={ 3 }>\n\t\t\t\t\t\t\t\t\t<InputNumber min={ 1 } max={ 6 } defaultValue={ elem.level } onChange={ onLevelChange } />\n\t\t\t\t\t\t\t\t</Col>\n\t\t\t\t\t\t\t\t<Col span={ 7 }>\n\t\t\t\t\t\t\t\t\t<TextArea defaultValue={ elem.recording_link } allowClear autoSize={ true } onChange={ onRecordingLinkChange } />\n\t\t\t\t\t\t\t\t</Col>\n\t\t\t\t\t\t\t</Row>\n\t\t\t\t\t\t\t<br />\n\t\t\t\t\t\t\t<Row gutter={ 16 }>\n\t\t\t\t\t\t\t\t<Col span={ 9 }>\n\t\t\t\t\t\t\t\t\t<TextArea defaultValue={ elem.content } autoSize disabled />\n\t\t\t\t\t\t\t\t</Col>\n\t\t\t\t\t\t\t\t<Col span={ 9 }>\n\t\t\t\t\t\t\t\t\t<TextArea defaultValue={ elem.translated_content } allowClear autoSize={ true } onChange={ onTranslatedContentChange } />\n\t\t\t\t\t\t\t\t</Col>\n\t\t\t\t\t\t\t\t<Col span={ 6 }>\n\t\t\t\t\t\t\t\t\t<Select showArrow style={{ width: '100%' }} defaultValue={ elem.status } onChange={ onTransactionStatusChange } >\n\t\t\t\t\t\t\t\t\t\t{ transactionStatusList.map( transaction => (\n\t\t\t\t\t\t\t\t\t\t\t<Option key={ transaction } value={ transaction } style={{ lineHeight: '32px', width: '100%' }}>\n\t\t\t\t\t\t\t\t\t\t\t\t<Tag color={ getTransactionColor(transaction) }>{ transaction }</Tag>\n\t\t\t\t\t\t\t\t\t\t\t</Option>\n\t\t\t\t\t\t\t\t\t\t)) }\n                    \t\t\t\t</Select>\n\t\t\t\t\t\t\t\t</Col>\n\t\t\t\t\t\t\t</Row>\n\t\t\t\t\t\t</>\n\t\t\t\t\t)) }\n\t\t\t\t</Modal>\n\t\t\t</Menu.Item>\n\t\t</Menu>\n\t)\n\n\tconst getColumnSearchProps = dataIndex => ({\n\t\tfilterDropdown: ({ setSelectedKeys, selectedKeys, confirm, clearFilters }) => (\n\t\t  \t<div style={{ padding: 8 }}>\n\t\t\t\t<Input\n\t\t\t\t\tref={ node => searchInput = node }\n\t\t\t\t\tplaceholder={`Search ${dataIndex}`}\n\t\t\t\t\tvalue={ selectedKeys[0] }\n\t\t\t\t\tonChange={ e => setSelectedKeys(e.target.value ? [e.target.value] : []) }\n\t\t\t\t\tonPressEnter={ () => handleSearch(selectedKeys, confirm, dataIndex) }\n\t\t\t\t\tstyle={{ width: 188, marginBottom: 8, display: 'block' }}\n\t\t\t\t/>\n\t\t\t\t<Space>\n\t\t\t\t\t<Button\n\t\t\t\t\t\ttype=\"primary\"\n\t\t\t\t\t\tonClick={ () => handleSearch(selectedKeys, confirm, dataIndex) }\n\t\t\t\t\t\ticon={ <SearchOutlined /> }\n\t\t\t\t\t\tsize=\"small\"\n\t\t\t\t\t\tstyle={{ width: 90 }}\n\t\t\t\t\t>\n\t\t\t\t\t\tSearch\n\t\t\t\t\t</Button>\n\t\t\t\t\t<Button onClick={ () => handleReset(clearFilters) } size=\"small\" style={{ width: 90 }}>\n\t\t\t\t\t\tReset\n\t\t\t\t\t</Button>\n\t\t\t\t</Space>\n\t\t  \t</div>\n\t\t),\n\t\tfilterIcon: filtered => <SearchOutlined style={{ color: filtered ? '#1890ff' : undefined }} />,\n\t\tonFilter: (value, record) =>\n\t\t  \trecord[dataIndex] ? record[dataIndex].toString().toLowerCase().includes(value.toLowerCase()) : '',\n\t\tonFilterDropdownVisibleChange: visible => {\n\t\t  \tif (visible) {\n\t\t\t\tsetTimeout(() => searchInput.select(), 100);\n\t\t  \t}\n\t\t},\n\t\trender: text =>\n\t\t  \tsearchedColumn === dataIndex ? (\n\t\t\t\t<Highlighter\n\t\t\t\t\thighlightStyle={{ backgroundColor: '#ffc069', padding: 0 }}\n\t\t\t\t\tsearchWords={ [searchText] }\n\t\t\t\t\tautoEscape\n\t\t\t\t\ttextToHighlight={text ? text.toString() : ''}\n\t\t\t\t/>\n\t\t\t) : ( text )\n\t});\n\t\n\tconst handleSearch = (selectedKeys, confirm, dataIndex) => {\n\t\tconfirm()\n\t\tsetSearchText(selectedKeys[0])\n\t\tsetSearchedColumn(dataIndex)\n\t};\n\n\tconst handleReset = clearFilters => {\n\t\tclearFilters()\n\t\tsetSearchText('')\n\t};\n\t\n\n\tconst tableColumns = [\n\t\t{\n\t\t\ttitle: 'Customer Name',\n\t\t\tkey: 'customer_name',\n\t\t\tdataIndex: 'customer_name',\n\t\t\t...getColumnSearchProps('customer_name'),\n\t\t\trender: (_, record) => (\n\t\t\t\t<div className=\"d-flex\">\n\t\t\t\t\t<Tag color={ getCustomerColor(record.customer_name) } style={{ letterSpacing: '1px' }}>{ record.customer_name }</Tag>\n\t\t\t\t</div>\n\t\t\t),\n\t\t\tsorter: (a, b) => utils.antdTableSorter(a, b, 'customer_name'),\n\t\t\tcolSpan: 1,\n\t\t\twidth: '5%'\n        },\n\t\t{\n\t\t\ttitle: 'Content Name',\n\t\t\tkey: 'content_name',\n\t\t\tdataIndex: 'content_name',\n\t\t\t...getColumnSearchProps('content_name'),\n\t\t\trender: (_, record) => (\n\t\t\t\t<div className=\"d-flex\">\n\t\t\t\t\t<span style={{ fontSize: '0.75rem'}}>{ record.content_name }</span>\n\t\t\t\t</div>\n\t\t\t),\n\t\t\tsorter: (a, b) => utils.antdTableSorter(a, b, 'content_name'),\n\t\t\tcolSpan: 1,\n\t\t\twidth: '8.5%'\n        },\n        {\n\t\t\ttitle: 'Product',\n\t\t\tkey: 'product',\n\t\t\tdataIndex: 'product',\n\t\t\t...getColumnSearchProps('product'),\n\t\t\trender: (_, record) => (\n\t\t\t\t<><Tag color={ getProductColor(record.product) }>{ record.product }</Tag></>\n\t\t\t),\n\t\t\tsorter: (a, b) => utils.antdTableSorter(a, b, 'product'),\n\t\t\tcolSpan: 1\n        },\n        {\n\t\t\ttitle: 'Segment',\n\t\t\tkey: 'segment',\n\t\t\tdataIndex: 'segment',\n\t\t\t...getColumnSearchProps('segment'),\n\t\t\trender: (_, record) => (\n\t\t\t\t<><Tag color={ getSegmentColor(record.segment) }>{ record.segment }</Tag></>\t\n\t\t\t),\n\t\t\tsorter: (a, b) => utils.antdTableSorter(a, b, 'segment'),\n\t\t\tcolSpan: 1\n        },\n        {\n\t\t\ttitle: 'Type',\n\t\t\tkey: 'type',\n\t\t\tdataIndex: 'type',\n\t\t\t...getColumnSearchProps('type'),\n\t\t\trender: (_, record) => (\n\t\t\t\t<><Tag color={ getTypeColor(record.type) }>{ record.type }</Tag></>\t\n\t\t\t),\n\t\t\tsorter: (a, b) => utils.antdTableSorter(a, b, 'type'),\n\t\t\tcolSpan: 1\n        },\n        {\n\t\t\ttitle: 'Level',\n\t\t\tkey: 'level',\n\t\t\tdataIndex: 'level',\n\t\t\t...getColumnSearchProps('level'),\n\t\t\trender: (_, record) => (\n\t\t\t\t<><Tag color={ record.level === 1 ? 'gold' : record.level === 2 ? 'orange' : 'red' }>{ record.level }</Tag></>\t\n\t\t\t),\n\t\t\tsorter: (a, b) => Number(a.level) - Number(b.level),\n\t\t\tcolSpan: 1\n        },\n        {\n\t\t\ttitle: 'Category',\n\t\t\tkey: 'category',\n\t\t\tdataIndex: 'category',\n\t\t\t...getColumnSearchProps('category'),\n\t\t\trender: (_, record) => (\n\t\t\t\t<><Tag color={ getCategoryColor(record.category) }>{ record.category }</Tag></>\t\n\t\t\t),\n\t\t\tsorter: (a, b) => utils.antdTableSorter(a, b, 'category'),\n\t\t\tcolSpan: 1\n\t\t},\n\t\t{\n\t\t\ttitle: 'Language',\n\t\t\tkey: 'language',\n\t\t\tdataIndex: 'language',\n\t\t\t...getColumnSearchProps('language'),\n\t\t\trender: (_, record) => (\n\t\t\t\t<><Tag color={ getLangColor(record.language) }>{ record.language }</Tag></>\n\t\t\t),\n\t\t\tsorter: (a, b) => utils.antdTableSorter(a, b, 'language'),\n\t\t\tcolSpan: 1\n\t\t},\n\t\t{\n\t\t\ttitle: 'Content',\n\t\t\tkey: 'content',\n\t\t\tdataIndex: 'content',\n\t\t\t...getColumnSearchProps('content'),\n\t\t\trender: (_, record) => (\n\t\t\t\t<div className=\"d-flex\">\n\t\t\t\t<span style={{ fontSize: '0.75rem'}}>{ record.content }</span>\n\t\t\t</div>\n\t\t\t),\n\t\t\tsorter: (a, b) => utils.antdTableSorter(a, b, 'content'),\n\t\t\tcolSpan: 1,\n\t\t\twidth: '15%'\n\t\t},\n\t\t{\n\t\t\ttitle: 'Translated Content',\n\t\t\tkey: 'translated_content',\n\t\t\tdataIndex: 'translated_content',\n\t\t\t...getColumnSearchProps('translated_content'),\n\t\t\trender: (_, record) => (\n\t\t\t\t<div className=\"d-flex\">\n\t\t\t\t<span>{ record.translated_content }</span>\n\t\t\t</div>\n\t\t\t),\n\t\t\tsorter: (a, b) => utils.antdTableSorter(a, b, 'translated_content'),\n\t\t\tcolSpan: 1,\n\t\t},\n\t\t{\n\t\t\ttitle: 'Version',\n\t\t\tdataIndex: 'version',\n\t\t\tkey: 'version',\n\t\t\t...getColumnSearchProps('version'),\n\t\t\trender: (_, record) => (\n\t\t\t\t<><Tag color={ record.version === 1 ? 'geekblue' : 'success' }>{ record.version }</Tag></>\n\t\t\t),\n\t\t\tsorter: (a, b) => a.version - b.version,\n\t\t\tcolSpan: 1\n\t\t},\n        {\n\t\t\ttitle: 'Transaction Status',\n\t\t\tkey: 'status',\n\t\t\tdataIndex: 'status',\n\t\t\t...getColumnSearchProps('transaction_status'),\n\t\t\trender: (_, record) => (\n\t\t\t\t<><Tag color={ getTransactionColor(record.status) } onClick={ changeStatus }>{ record.status }</Tag></>\n\t\t\t),\n\t\t\tsorter: (a, b) => utils.antdTableSorter(a, b, 'status'),\n\t\t\tcolSpan: 1\n\t\t},\n        {\n\t\t\ttitle: 'Last Updated',\n\t\t\tkey: 'last_updated_on',\n\t\t\tdataIndex: 'last_updated_on',\n\t\t\t...getColumnSearchProps('last_updated_on'),\n\t\t\trender: (_, record) => (\n\t\t\t\t<span>{ record.last_updated_on.split(' GMT')[0] }</span>\n\t\t\t),\n\t\t\tsorter: (a, b) => utils.antdTableSorter(a, b, 'last_updated_on'),\n\t\t\tcolSpan: 1\n\t\t},\n\t\t{\n\t\t\ttitle: 'Last Updated By',\n\t\t\tkey: 'last_updated_by',\n\t\t\tdataIndex: 'last_updated_by',\n\t\t\t...getColumnSearchProps('last_updated_by'),\n\t\t\trender: (_, record) => (\n\t\t\t\t<><Tag color={ getUserColor(record.last_updated_by) }>{ record.last_updated_by }</Tag></>\n\t\t\t),\n\t\t\tsorter: (a, b) => utils.antdTableSorter(a, b, 'last_updated_by'),\n\t\t\tcolSpan: 1\n\t\t},\n\t\t{\n\t\t\ttitle: 'Recording Link',\n\t\t\tkey: 'recording_link',\n\t\t\tdataIndex: 'recording_link',\n\t\t\t...getColumnSearchProps('recording_link'),\n\t\t\trender: (_, record) => (\n\t\t\t\t<div className=\"d-flex\">\n\t\t\t\t<span>{ record.recording_link }</span>\n\t\t\t</div>\n\t\t\t),\n\t\t\tsorter: (a, b) => utils.antdTableSorter(a, b, 'recording_link'),\n\t\t\tcolSpan: 1\n\t\t},\n\t\t{\n\t\t\ttitle: '',\n\t\t\tkey: 'actions',\n\t\t\tdataIndex: 'actions',\n\t\t\trender: (_, elm) => (\n\t\t\t\t<div className=\"text-right\">\n\t\t\t\t\t<EllipsisDropdown menu={ dropdownMenu(elm) }/>\n\t\t\t\t</div>\n\t\t\t),\n\t\t\tcolSpan: 1\n\t\t}\n\t];\n\t\n\tconst rowSelection = {\n\t\tonChange: (key, rows) => {\n\t\t\tsetSelectedRows(rows)\n\t\t\tsetSelectedRowKeys(key)\n\t\t}\n\t}\n\n\treturn (\n\t\t<Card>\n\n\t\t\t{/* <Flex alignItems=\"center\" mobileFlex={false}>\n\t\t\t\t<div className=\"mb-3 mr-3\">\n\t\t\t\t\t<Button type=\"primary\"><span style={{ marginRight: '0.5rem' }}><CloudDownloadOutlined /></span>Download Selected</Button>\n\t\t\t\t</div>\n\t\t\t</Flex> */}\n\t\t\t<div className=\"table-responsive\">\n                <Table\n                    bordered\n\t\t\t\t\tcolumns={ tableColumns } \n\t\t\t\t\tdataSource={ esData } \n\t\t\t\t\trowKey='content_name' \n\t\t\t\t\trowSelection={{\n\t\t\t\t\t\tselectedRowKeys: selectedRowKeys,\n\t\t\t\t\t\ttype: 'checkbox',\n\t\t\t\t\t\tpreserveSelectedRowKeys: true,\n\t\t\t\t\t\t...rowSelection,\n                    }}\n                    scroll={{ x: 2500 }}\n                    pagination={{ pageSize: 10 }}\n                    showQuickJumper\n\t\t\t\t\tresponsive={ true }\n\t\t\t\t\tsize=\"small\"\n\t\t\t\t/>\n\t\t\t</div>\n\t\t</Card>\n\t)\n}"]},"metadata":{},"sourceType":"module"}