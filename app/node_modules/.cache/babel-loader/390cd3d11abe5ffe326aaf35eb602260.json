{"ast":null,"code":"var _jsxFileName = \"/Users/dhruvaagrawal/Desktop/Work/Spocto/CMS/app/src/views/app-views/journeys/journey-ivr/transaction/tableColumns.js\";\nimport React from 'react';\nimport { Tag } from 'antd';\nimport { getChannelColor, getLangColor, getCustomerColor, getProductColor, getTransactionStatus, getUserStatus } from 'constants/TagColor';\nimport utils from 'utils';\nexport const tableColumns = [{\n  title: 'Channel',\n  dataIndex: 'channel',\n  render: (_, record) => /*#__PURE__*/React.createElement(\"div\", {\n    className: \"d-flex\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 11,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Tag, {\n    color: getChannelColor(record.channel),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 17\n    }\n  }, record.channel)),\n  sorter: (a, b) => utils.antdTableSorter(a, b, 'channel'),\n  key: 'channel'\n}, {\n  title: 'Customer Name',\n  dataIndex: 'customer_name',\n  render: (_, record) => /*#__PURE__*/React.createElement(\"div\", {\n    className: \"d-flex\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Tag, {\n    color: getCustomerColor(record.customer_name),\n    style: {\n      letterSpacing: '1px'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 17\n    }\n  }, record.customer_name)),\n  sorter: (a, b) => utils.antdTableSorter(a, b, 'customer_name'),\n  key: 'customer_name'\n}, {\n  title: 'Content Name',\n  dataIndex: 'content_name',\n  render: (_, record) => /*#__PURE__*/React.createElement(\"div\", {\n    className: \"d-flex\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 17\n    }\n  }, record.content_name)),\n  sorter: (a, b) => utils.antdTableSorter(a, b, 'content_name'),\n  key: 'content_name'\n}, {\n  title: 'Product',\n  dataIndex: 'product',\n  render: (_, record) => /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Tag, {\n    color: getProductColor(record.product),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 15\n    }\n  }, record.product)),\n  sorter: (a, b) => utils.antdTableSorter(a, b, 'product'),\n  key: 'product'\n}, {\n  title: 'Segment',\n  dataIndex: 'stage',\n  render: (_, record) => /*#__PURE__*/React.createElement(\"div\", {\n    className: \"d-flex\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 17\n    }\n  }, record.segment)),\n  sorter: (a, b) => utils.antdTableSorter(a, b, 'segment'),\n  key: 'segment'\n}, {\n  title: 'Type',\n  dataIndex: 'type',\n  render: (_, record) => /*#__PURE__*/React.createElement(\"div\", {\n    className: \"d-flex\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 17\n    }\n  }, record.type)),\n  sorter: (a, b) => utils.antdTableSorter(a, b, 'type'),\n  key: 'type'\n}, {\n  title: 'Level',\n  dataIndex: 'level',\n  render: (_, record) => /*#__PURE__*/React.createElement(\"div\", {\n    className: \"d-flex\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 17\n    }\n  }, record.level)),\n  sorter: (a, b) => utils.antdTableSorter(a, b, 'level'),\n  key: 'level'\n}, {\n  title: 'Category',\n  dataIndex: 'category',\n  render: (_, record) => /*#__PURE__*/React.createElement(\"div\", {\n    className: \"d-flex\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 17\n    }\n  }, record.category)),\n  sorter: (a, b) => utils.antdTableSorter(a, b, 'category'),\n  key: 'category'\n}, {\n  title: 'Language',\n  key: 'language',\n  dataIndex: 'language',\n  render: (_, record) => /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Tag, {\n    color: getLangColor(record.language),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 15\n    }\n  }, record.language)),\n  sorter: (a, b) => utils.antdTableSorter(a, b, 'language')\n}, {\n  title: 'Content',\n  key: 'content',\n  dataIndex: 'content',\n  render: (_, record) => /*#__PURE__*/React.createElement(\"div\", {\n    className: \"d-flex\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 13\n    }\n  }, record.content)),\n  sorter: (a, b) => utils.antdTableSorter(a, b, 'language')\n}, {\n  title: 'Version',\n  dataIndex: 'version',\n  key: 'version',\n  render: (_, record) => /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Tag, {\n    color: record.version === 1 ? 'geekblue' : 'success',\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 15\n    }\n  }, record.version)),\n  sorter: (a, b) => utils.antdTableSorter(a, b, 'language')\n}, {\n  title: 'Transaction Status',\n  dataIndex: 'status',\n  key: 'status',\n  render: (_, record) => /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Tag, {\n    color: getTransactionStatus(record.status),\n    onClick: changeStatus,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 127,\n      columnNumber: 15\n    }\n  }, record.status)),\n  sorter: (a, b) => utils.antdTableSorter(a, b, 'status')\n}, {\n  title: 'Last Updated',\n  dataIndex: 'last_updated_on',\n  render: (_, record) => /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 135,\n      columnNumber: 13\n    }\n  }, record.last_updated_on.split(' GMT')[0]),\n  sorter: (a, b) => utils.antdTableSorter(a, b, 'last_updated_on'),\n  key: 'last_updated_on'\n}, {\n  title: 'Last Updated By',\n  dataIndex: 'last_updated_by',\n  render: (_, record) => /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Tag, {\n    color: getUserStatus(record.last_updated_by),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 144,\n      columnNumber: 15\n    }\n  }, record.last_updated_by)),\n  sorter: (a, b) => utils.antdTableSorter(a, b, 'last_updated_by'),\n  key: 'last_updated_by'\n}, {\n  title: '',\n  dataIndex: 'actions',\n  render: (_, elm) => /*#__PURE__*/React.createElement(\"div\", {\n    className: \"text-right\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 153,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(EllipsisDropdown, {\n    menu: dropdownMenu(elm),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 154,\n      columnNumber: 17\n    }\n  })),\n  key: 'actions'\n}];","map":{"version":3,"sources":["/Users/dhruvaagrawal/Desktop/Work/Spocto/CMS/app/src/views/app-views/journeys/journey-ivr/transaction/tableColumns.js"],"names":["React","Tag","getChannelColor","getLangColor","getCustomerColor","getProductColor","getTransactionStatus","getUserStatus","utils","tableColumns","title","dataIndex","render","_","record","channel","sorter","a","b","antdTableSorter","key","customer_name","letterSpacing","content_name","product","segment","type","level","category","language","content","version","status","changeStatus","last_updated_on","split","last_updated_by","elm","dropdownMenu"],"mappings":"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","sourcesContent":["import React from 'react'\nimport { Tag } from 'antd'\nimport { getChannelColor, getLangColor, getCustomerColor, getProductColor, getTransactionStatus, getUserStatus } from 'constants/TagColor'\nimport utils from 'utils'\n\nexport const tableColumns = [\n    {\n        title: 'Channel',\n        dataIndex: 'channel',\n        render: (_, record) => (\n            <div className=\"d-flex\">\n                <Tag color={ getChannelColor(record.channel) }>{ record.channel }</Tag>\n            </div>\n        ),\n        sorter: (a, b) => utils.antdTableSorter(a, b, 'channel'),\n        key: 'channel'\n    },\n    {\n        title: 'Customer Name',\n        dataIndex: 'customer_name',\n        render: (_, record) => (\n            <div className=\"d-flex\">\n                <Tag color={ getCustomerColor(record.customer_name) } style={{ letterSpacing: '1px' }}>{ record.customer_name }</Tag>\n            </div>\n        ),\n        sorter: (a, b) => utils.antdTableSorter(a, b, 'customer_name'),\n        key: 'customer_name'\n    },\n    {\n        title: 'Content Name',\n        dataIndex: 'content_name',\n        render: (_, record) => (\n            <div className=\"d-flex\">\n                <span>{ record.content_name }</span>\n            </div>\n        ),\n        sorter: (a, b) => utils.antdTableSorter(a, b, 'content_name'),\n        key: 'content_name'\n    },\n    {\n        title: 'Product',\n        dataIndex: 'product',\n        render: (_, record) => (\n            <><Tag color={ getProductColor(record.product) }>{ record.product }</Tag></>\n        ),\n        sorter: (a, b) => utils.antdTableSorter(a, b, 'product'),\n        key: 'product'\n    },\n    {\n        title: 'Segment',\n        dataIndex: 'stage',\n        render: (_, record) => (\n            <div className=\"d-flex\">\n                <span>{ record.segment }</span>\n            </div>\n        ),\n        sorter: (a, b) => utils.antdTableSorter(a, b, 'segment'),\n        key: 'segment'\n    },\n    {\n        title: 'Type',\n        dataIndex: 'type',\n        render: (_, record) => (\n            <div className=\"d-flex\">\n                <span>{ record.type }</span>\n            </div>\n        ),\n        sorter: (a, b) => utils.antdTableSorter(a, b, 'type'),\n        key: 'type'\n    },\n    {\n        title: 'Level',\n        dataIndex: 'level',\n        render: (_, record) => (\n            <div className=\"d-flex\">\n                <span>{ record.level }</span>\n            </div>\n        ),\n        sorter: (a, b) => utils.antdTableSorter(a, b, 'level'),\n        key: 'level'\n    },\n    {\n        title: 'Category',\n        dataIndex: 'category',\n        render: (_, record) => (\n            <div className=\"d-flex\">\n                <span>{ record.category }</span>\n            </div>\n        ),\n        sorter: (a, b) => utils.antdTableSorter(a, b, 'category'),\n        key: 'category'\n    },\n    {\n        title: 'Language',\n        key: 'language',\n        dataIndex: 'language',\n        render: (_, record) => (\n            <><Tag color={ getLangColor(record.language) }>{ record.language }</Tag></>\n        ),\n        sorter: (a, b) => utils.antdTableSorter(a, b, 'language'),\n    },\n    {\n        title: 'Content',\n        key: 'content',\n        dataIndex: 'content',\n        render: (_, record) => (\n            <div className=\"d-flex\">\n            <span>{ record.content }</span>\n        </div>\n        ),\n        sorter: (a, b) => utils.antdTableSorter(a, b, 'language'),\n    },\n    {\n        title: 'Version',\n        dataIndex: 'version',\n        key: 'version',\n        render: (_, record) => (\n            <><Tag color={ record.version === 1 ? 'geekblue' : 'success' }>{ record.version }</Tag></>\n        ),\n        sorter: (a, b) => utils.antdTableSorter(a, b, 'language'),\n    },\n    {\n        title: 'Transaction Status',\n        dataIndex: 'status',\n        key: 'status',\n        render: (_, record) => (\n            <><Tag color={ getTransactionStatus(record.status) } onClick={ changeStatus }>{ record.status }</Tag></>\n        ),\n        sorter: (a, b) => utils.antdTableSorter(a, b, 'status')\n    },\n    {\n        title: 'Last Updated',\n        dataIndex: 'last_updated_on',\n        render: (_, record) => (\n            <span>{ record.last_updated_on.split(' GMT')[0] }</span>\n        ),\n        sorter: (a, b) => utils.antdTableSorter(a, b, 'last_updated_on'),\n        key: 'last_updated_on'\n    },\n    {\n        title: 'Last Updated By',\n        dataIndex: 'last_updated_by',\n        render: (_, record) => (\n            <><Tag color={ getUserStatus(record.last_updated_by) }>{ record.last_updated_by }</Tag></>\n        ),\n        sorter: (a, b) => utils.antdTableSorter(a, b, 'last_updated_by'),\n        key: 'last_updated_by'\n    },\n    {\n        title: '',\n        dataIndex: 'actions',\n        render: (_, elm) => (\n            <div className=\"text-right\">\n                <EllipsisDropdown menu={dropdownMenu(elm)}/>\n            </div>\n        ),\n        key: 'actions'\n    }\n];"]},"metadata":{},"sourceType":"module"}