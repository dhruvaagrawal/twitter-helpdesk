{"ast":null,"code":"var _jsxFileName = \"/Users/dhruvaagrawal/Desktop/Work/Spocto/CMS/app/src/views/app-views/journeys/journey-ivr/userRoles/index.js\";\n// import React, { Component } from 'react'\n// import { Card, Table, Tag, Tooltip, message, Popconfirm, Button, InputNumber, Input, Form } from 'antd';\n// import { EyeOutlined, DeleteOutlined } from '@ant-design/icons';\n// import moment from 'moment';\n// import UserView from './UserView';\n// import AvatarStatus from 'components/shared-components/AvatarStatus';\n// const EditableCell = ({ editing, dataIndex, title, inputType, record, index, children, ...restProps }) => {\n// \tconst inputNode = inputType === 'number' ? <InputNumber /> : <Input />;\n// \treturn (\n// \t  \t<td {...restProps}>\n// \t\t\t{editing ? (\n// \t\t  \t\t<Form.Item\n// \t\t\t\t\tname={dataIndex}\n// \t\t\t\t\tstyle={{\n// \t\t\t\t\tmargin: 0,\n// \t\t\t\t\t}}\n// \t\t\t\t\trules={[\n// \t\t\t\t\t{\n// \t\t\t\t\t\trequired: true,\n// \t\t\t\t\t\tmessage: `Please Input ${title}!`,\n// \t\t\t\t\t},\n// \t\t\t\t\t]}\n// \t\t\t\t>\n// \t\t\t\t\t{inputNode}\n// \t\t  \t\t</Form.Item>\n// \t\t\t) : ( children )\n// \t\t\t}\n// \t  \t</td>\n// \t);\n// };\n// export default class UserRoles extends Component {\n// \tstate = {\n// \t\tusers: userData,\n// \t\tuserProfileVisible: false,\n// \t\tselectedUser: null,\n// \t\tdata: originData,\n// \t\teditingKey: ''\n// \t}\n// \t[ form ] = Form.useForm();\n// \t//[ data, setData ] = useState(originData);\n// \t// [ editingKey, setEditingKey ] = useState('');\n// \tsetData = () => {\n// \t\tthis.setState({\n// \t\t})\n// \t}\n// \tsetEditingKey = () => {\n// \t\tthis.setState({\n// \t\t})\n// \t}\n// \tisEditing = record => record.key === editingKey;\n// \tedit = record => {\n// \t  \tform.setFieldsValue({\n// \t\t\tname: '',\n// \t\t\tage: '',\n// \t\t\taddress: '',\n// \t\t\t...record,\n// \t\t});\n// \t  \tsetEditingKey(record.key);\n// \t};\n// \tcancel = () => {\n// \t\tsetEditingKey('');\n// \t};\n// \tsave = async (key) => {\n// \t\ttry {\n// \t\t\tconst row = await form.validateFields();\n// \t\t\tconst newData = [...data];\n// \t\t\tconst index = newData.findIndex((item) => key === item.key);\n// \t\t\tif (index > -1) {\n// \t\t\t\tconst item = newData[index];\n// \t\t\t\tnewData.splice(index, 1, { ...item, ...row });\n// \t\t\t\tsetData(newData);\n// \t\t\t\tsetEditingKey('');\n// \t\t\t} else {\n// \t\t\t\tnewData.push(row);\n// \t\t\t\tsetData(newData);\n// \t\t\t\tsetEditingKey('');\n// \t\t\t}\n// \t\t} catch (errInfo) {\n// \t\t\tconsole.log('Validate Failed:', errInfo);\n// \t}\n// \tdeleteUser = userId => {\n// \t\tthis.setState({\n// \t\t\tusers: this.state.users.filter(item => item.id !== userId),\n// \t\t})\n// \t\tmessage.success({ content: `Deleted user ${userId}`, duration: 2 });\n// \t}\n// \tshowUserProfile = userInfo => {\n// \t\tthis.setState({\n// \t\t\tuserProfileVisible: true,\n// \t\t\tselectedUser: userInfo\n// \t\t});\n// \t};\n// \tcloseUserProfile = () => {\n// \t\tthis.setState({\n// \t\t\tuserProfileVisible: false,\n// \t\t\tselectedUser: null\n//     \t});\n// \t}\n// \trender() {\n// \t\tconst { users, userProfileVisible, selectedUser } = this.state;\n// \t\t];\n// \t\treturn (\n// \t\t\t<Card >\n// \t\t\t\t<Table columns={tableColumns} dataSource={users} rowKey='id' />\n// \t\t\t\t<UserView data={selectedUser} visible={userProfileVisible} close={()=> {this.closeUserProfile()}}/>\n// \t\t\t</Card>\n// \t\t)\n// \t}\n// }\nimport React, { useState } from 'react';\nimport { Card, Table, Tag, Tooltip, message, Popconfirm, Button, InputNumber, Input, Form } from 'antd';\nimport { EyeOutlined, DeleteOutlined } from '@ant-design/icons';\nimport moment from 'moment';\nimport UserView from './UserView';\nimport AvatarStatus from 'components/shared-components/AvatarStatus';\nimport originData from \"assets/data/user-list.data.json\";\n\nconst EditableCell = ({\n  editing,\n  dataIndex,\n  title,\n  inputType,\n  record,\n  index,\n  children,\n  ...restProps\n}) => {\n  const inputNode = inputType === 'number' ? /*#__PURE__*/React.createElement(InputNumber, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 140,\n      columnNumber: 45\n    }\n  }) : /*#__PURE__*/React.createElement(Input, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 140,\n      columnNumber: 63\n    }\n  });\n  return /*#__PURE__*/React.createElement(\"td\", Object.assign({}, restProps, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 142,\n      columnNumber: 3\n    }\n  }), editing ? /*#__PURE__*/React.createElement(Form.Item, {\n    name: dataIndex,\n    style: {\n      margin: 0\n    },\n    rules: [{\n      required: true,\n      message: `Please Input ${title}!`\n    }],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 144,\n      columnNumber: 5\n    }\n  }, inputNode) : children);\n};\n\nconst EditableTable = () => {\n  const {\n    users,\n    userProfileVisible,\n    selectedUser\n  } = this.state;\n  const [form] = Form.useForm();\n  const [data, setData] = useState(originData);\n  const [editingKey, setEditingKey] = useState('');\n\n  const isEditing = record => record.key === editingKey;\n\n  const edit = record => {\n    form.setFieldsValue({\n      name: '',\n      age: '',\n      address: '',\n      ...record\n    });\n    setEditingKey(record.key);\n  };\n\n  const cancel = () => {\n    setEditingKey('');\n  };\n\n  const save = async key => {\n    try {\n      const row = await form.validateFields();\n      const newData = [...data];\n      const index = newData.findIndex(item => key === item.key);\n\n      if (index > -1) {\n        const item = newData[index];\n        newData.splice(index, 1, { ...item,\n          ...row\n        });\n        setData(newData);\n        setEditingKey('');\n      } else {\n        newData.push(row);\n        setData(newData);\n        setEditingKey('');\n      }\n    } catch (errInfo) {\n      console.log('Validation Failed:', errInfo);\n    }\n  };\n\n  const columns = [{\n    title: 'User',\n    dataIndex: 'name',\n    render: (_, record) => /*#__PURE__*/React.createElement(\"div\", {\n      className: \"d-flex\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 205,\n        columnNumber: 5\n      }\n    }, /*#__PURE__*/React.createElement(AvatarStatus, {\n      src: record.img,\n      name: record.name,\n      subTitle: record.email,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 206,\n        columnNumber: 6\n      }\n    })),\n    sorter: {\n      compare: (a, b) => {\n        a = a.name.toLowerCase();\n        b = b.name.toLowerCase();\n        return a > b ? -1 : b > a ? 1 : 0;\n      }\n    }\n  }, {\n    title: 'Role',\n    dataIndex: 'role',\n    render: role => /*#__PURE__*/React.createElement(Tag, {\n      className: \"text-capitalize\",\n      color: role === 'Admin' ? 'red' : role === 'Manager' ? 'blue' : 'cyan',\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 221,\n        columnNumber: 5\n      }\n    }, role),\n    sorter: {\n      compare: (a, b) => a.role.length - b.role.length\n    }\n  }, {\n    title: 'Last online',\n    dataIndex: 'lastOnline',\n    render: date => /*#__PURE__*/React.createElement(\"span\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 231,\n        columnNumber: 5\n      }\n    }, moment.unix(date).format(\"MM/DD/YYYY\"), \" \"),\n    sorter: (a, b) => moment(a.lastOnline).unix() - moment(b.lastOnline).unix()\n  }, {\n    title: 'Address',\n    dataIndex: 'address',\n    width: '40%',\n    editable: true\n  }, {\n    title: 'Edit',\n    dataIndex: 'edit',\n    render: (_, record) => {\n      const editable = isEditing(record);\n      return editable ? /*#__PURE__*/React.createElement(\"span\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 247,\n          columnNumber: 5\n        }\n      }, /*#__PURE__*/React.createElement(\"a\", {\n        href: \"javascript:;\",\n        onClick: () => save(record.key),\n        style: {\n          marginRight: 8\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 248,\n          columnNumber: 6\n        }\n      }, \"Save\"), /*#__PURE__*/React.createElement(Popconfirm, {\n        title: \"Sure to cancel?\",\n        onConfirm: cancel,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 257,\n          columnNumber: 6\n        }\n      }, /*#__PURE__*/React.createElement(\"a\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 258,\n          columnNumber: 7\n        }\n      }, \"Cancel\"))) : /*#__PURE__*/React.createElement(\"a\", {\n        disabled: editingKey !== '',\n        onClick: () => edit(record),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 262,\n          columnNumber: 5\n        }\n      }, \"Edit\");\n    }\n  }, {\n    title: '',\n    dataIndex: 'actions',\n    render: (_, elm) => /*#__PURE__*/React.createElement(\"div\", {\n      className: \"text-right\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 272,\n        columnNumber: 5\n      }\n    }, /*#__PURE__*/React.createElement(Tooltip, {\n      title: \"View\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 273,\n        columnNumber: 6\n      }\n    }, /*#__PURE__*/React.createElement(Button, {\n      type: \"primary\",\n      className: \"mr-2\",\n      icon: /*#__PURE__*/React.createElement(EyeOutlined, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 274,\n          columnNumber: 54\n        }\n      }),\n      onClick: () => {\n        this.showUserProfile(elm);\n      },\n      size: \"small\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 274,\n        columnNumber: 7\n      }\n    })), /*#__PURE__*/React.createElement(Tooltip, {\n      title: \"Delete\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 276,\n        columnNumber: 6\n      }\n    }, /*#__PURE__*/React.createElement(Button, {\n      danger: true,\n      icon: /*#__PURE__*/React.createElement(DeleteOutlined, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 277,\n          columnNumber: 29\n        }\n      }),\n      onClick: () => {\n        this.deleteUser(elm.id);\n      },\n      size: \"small\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 277,\n        columnNumber: 7\n      }\n    })))\n  }];\n  const mergedColumns = columns.map(col => {\n    if (!col.editable) return col;\n    return { ...col,\n      onCell: record => ({\n        record,\n        inputType: col.dataIndex === 'age' ? 'number' : 'text',\n        dataIndex: col.dataIndex,\n        title: col.title,\n        editing: isEditing(record)\n      })\n    };\n  });\n  return /*#__PURE__*/React.createElement(Card, {\n    bodyStyle: {\n      'padding': '0px'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 300,\n      columnNumber: 3\n    }\n  }, /*#__PURE__*/React.createElement(Form, {\n    form: form,\n    component: false,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 301,\n      columnNumber: 4\n    }\n  }, /*#__PURE__*/React.createElement(Table, {\n    components: {\n      body: {\n        cell: EditableCell\n      }\n    },\n    bordered: true,\n    dataSource: data,\n    columns: mergedColumns,\n    rowClassName: \"editable-row\",\n    pagination: {\n      onChange: cancel\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 302,\n      columnNumber: 5\n    }\n  })), /*#__PURE__*/React.createElement(UserView, {\n    data: selectedUser,\n    visible: userProfileVisible,\n    close: () => {\n      this.closeUserProfile();\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 315,\n      columnNumber: 4\n    }\n  }));\n};\n\nexport default EditableTable;","map":{"version":3,"sources":["/Users/dhruvaagrawal/Desktop/Work/Spocto/CMS/app/src/views/app-views/journeys/journey-ivr/userRoles/index.js"],"names":["React","useState","Card","Table","Tag","Tooltip","message","Popconfirm","Button","InputNumber","Input","Form","EyeOutlined","DeleteOutlined","moment","UserView","AvatarStatus","originData","EditableCell","editing","dataIndex","title","inputType","record","index","children","restProps","inputNode","margin","required","EditableTable","users","userProfileVisible","selectedUser","state","form","useForm","data","setData","editingKey","setEditingKey","isEditing","key","edit","setFieldsValue","name","age","address","cancel","save","row","validateFields","newData","findIndex","item","splice","push","errInfo","console","log","columns","render","_","img","email","sorter","compare","a","b","toLowerCase","role","length","date","unix","format","lastOnline","width","editable","marginRight","elm","showUserProfile","deleteUser","id","mergedColumns","map","col","onCell","body","cell","onChange","closeUserProfile"],"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","sourcesContent":["// import React, { Component } from 'react'\n// import { Card, Table, Tag, Tooltip, message, Popconfirm, Button, InputNumber, Input, Form } from 'antd';\n// import { EyeOutlined, DeleteOutlined } from '@ant-design/icons';\n// import moment from 'moment';\n// import UserView from './UserView';\n// import AvatarStatus from 'components/shared-components/AvatarStatus';\n\n// const EditableCell = ({ editing, dataIndex, title, inputType, record, index, children, ...restProps }) => {\n// \tconst inputNode = inputType === 'number' ? <InputNumber /> : <Input />;\n// \treturn (\n// \t  \t<td {...restProps}>\n// \t\t\t{editing ? (\n// \t\t  \t\t<Form.Item\n// \t\t\t\t\tname={dataIndex}\n// \t\t\t\t\tstyle={{\n// \t\t\t\t\tmargin: 0,\n// \t\t\t\t\t}}\n// \t\t\t\t\trules={[\n// \t\t\t\t\t{\n// \t\t\t\t\t\trequired: true,\n// \t\t\t\t\t\tmessage: `Please Input ${title}!`,\n// \t\t\t\t\t},\n// \t\t\t\t\t]}\n// \t\t\t\t>\n// \t\t\t\t\t{inputNode}\n// \t\t  \t\t</Form.Item>\n// \t\t\t) : ( children )\n// \t\t\t}\n// \t  \t</td>\n// \t);\n// };\n\n// export default class UserRoles extends Component {\n\n// \tstate = {\n// \t\tusers: userData,\n// \t\tuserProfileVisible: false,\n// \t\tselectedUser: null,\n// \t\tdata: originData,\n// \t\teditingKey: ''\n// \t}\n\n// \t[ form ] = Form.useForm();\n// \t//[ data, setData ] = useState(originData);\n// \t// [ editingKey, setEditingKey ] = useState('');\n\t\n// \tsetData = () => {\n// \t\tthis.setState({\n\n// \t\t})\n// \t}\n\n// \tsetEditingKey = () => {\n// \t\tthis.setState({\n\t\t\t\n// \t\t})\n// \t}\n\n\n// \tisEditing = record => record.key === editingKey;\n  \n// \tedit = record => {\n// \t  \tform.setFieldsValue({\n// \t\t\tname: '',\n// \t\t\tage: '',\n// \t\t\taddress: '',\n// \t\t\t...record,\n// \t\t});\n// \t  \tsetEditingKey(record.key);\n// \t};\n  \n// \tcancel = () => {\n// \t\tsetEditingKey('');\n// \t};\n  \n// \tsave = async (key) => {\n// \t\ttry {\n// \t\t\tconst row = await form.validateFields();\n// \t\t\tconst newData = [...data];\n// \t\t\tconst index = newData.findIndex((item) => key === item.key);\n\t\n// \t\t\tif (index > -1) {\n// \t\t\t\tconst item = newData[index];\n// \t\t\t\tnewData.splice(index, 1, { ...item, ...row });\n// \t\t\t\tsetData(newData);\n// \t\t\t\tsetEditingKey('');\n// \t\t\t} else {\n// \t\t\t\tnewData.push(row);\n// \t\t\t\tsetData(newData);\n// \t\t\t\tsetEditingKey('');\n// \t\t\t}\n// \t\t} catch (errInfo) {\n// \t\t\tconsole.log('Validate Failed:', errInfo);\n// \t}\n\n// \tdeleteUser = userId => {\n// \t\tthis.setState({\n// \t\t\tusers: this.state.users.filter(item => item.id !== userId),\n// \t\t})\n// \t\tmessage.success({ content: `Deleted user ${userId}`, duration: 2 });\n// \t}\n\n// \tshowUserProfile = userInfo => {\n// \t\tthis.setState({\n// \t\t\tuserProfileVisible: true,\n// \t\t\tselectedUser: userInfo\n// \t\t});\n// \t};\n\t\n// \tcloseUserProfile = () => {\n// \t\tthis.setState({\n// \t\t\tuserProfileVisible: false,\n// \t\t\tselectedUser: null\n//     \t});\n// \t}\n\n// \trender() {\n// \t\tconst { users, userProfileVisible, selectedUser } = this.state;\n\n// \t\t];\n// \t\treturn (\n// \t\t\t<Card >\n// \t\t\t\t<Table columns={tableColumns} dataSource={users} rowKey='id' />\n// \t\t\t\t<UserView data={selectedUser} visible={userProfileVisible} close={()=> {this.closeUserProfile()}}/>\n// \t\t\t</Card>\n// \t\t)\n// \t}\n// }\n\nimport React, { useState } from 'react';\nimport { Card, Table, Tag, Tooltip, message, Popconfirm, Button, InputNumber, Input, Form } from 'antd';\nimport { EyeOutlined, DeleteOutlined } from '@ant-design/icons';\nimport moment from 'moment';\nimport UserView from './UserView';\nimport AvatarStatus from 'components/shared-components/AvatarStatus';\nimport originData from \"assets/data/user-list.data.json\";\n\n\nconst EditableCell = ({ editing, dataIndex, title, inputType, record, index, children, ...restProps }) => {\n\tconst inputNode = inputType === 'number' ? <InputNumber /> : <Input />;\n\treturn (\n\t\t<td { ...restProps }>\n\t\t\t{editing ? (\n\t\t\t\t<Form.Item\n\t\t\t\t\tname={ dataIndex }\n\t\t\t\t\tstyle={{ margin: 0, }}\n\t\t\t\t\trules={[ { required: true, message: `Please Input ${title}!` } ]}\n\t\t\t\t>\n\t\t\t\t\t{ inputNode }\n\t\t\t\t</Form.Item>\n\t\t\t) : ( children )}\n\t\t</td>\n\t);\n};\n\nconst EditableTable = () => {\n\tconst { users, userProfileVisible, selectedUser } = this.state;\n\tconst [form] = Form.useForm();\n\tconst [data, setData] = useState(originData);\n\tconst [editingKey, setEditingKey] = useState('');\n\n\tconst isEditing = (record) => record.key === editingKey;\n\n\tconst edit = (record) => {\n\t\tform.setFieldsValue({\n\t\t\tname: '',\n\t\t\tage: '',\n\t\t\taddress: '',\n\t\t\t...record\n\t\t});\n\t\tsetEditingKey(record.key);\n\t};\n\n\tconst cancel = () => {\n\t\tsetEditingKey('');\n\t};\n\n\tconst save = async (key) => {\n\t\ttry {\n\t\t\tconst row = await form.validateFields();\n\t\t\tconst newData = [...data];\n\t\t\tconst index = newData.findIndex((item) => key === item.key);\n\n\t\t\tif (index > -1) {\n\t\t\t\tconst item = newData[index];\n\t\t\t\tnewData.splice(index, 1, { ...item, ...row });\n\t\t\t\tsetData(newData);\n\t\t\t\tsetEditingKey('');\n\t\t\t} else {\n\t\t\t\tnewData.push(row);\n\t\t\t\tsetData(newData);\n\t\t\t\tsetEditingKey('');\n\t\t\t}\n\n\t\t} catch (errInfo) {\n\t\t\tconsole.log('Validation Failed:', errInfo);\n\t\t}\n\t};\n\n\tconst columns = [\n\t\t{\n\t\t\ttitle: 'User',\n\t\t\tdataIndex: 'name',\n\t\t\trender: (_, record) => (\n\t\t\t\t<div className=\"d-flex\">\n\t\t\t\t\t<AvatarStatus src={record.img} name={record.name} subTitle={record.email}/>\n\t\t\t\t</div>\n\t\t\t),\n\t\t\tsorter: {\n\t\t\t\tcompare: (a, b) => {\n\t\t\t\t\ta = a.name.toLowerCase();\n\t\t\t\t\tb = b.name.toLowerCase();\n\t\t\t\t\treturn a > b ? -1 : b > a ? 1 : 0;\n\t\t\t\t},\n\t\t\t}\n\t\t},\n\t\t{\n\t\t\ttitle: 'Role',\n\t\t\tdataIndex: 'role',\n\t\t\trender: role => (\n\t\t\t\t<Tag className =\"text-capitalize\" color={role === 'Admin' ? 'red' : role === 'Manager' ? 'blue' : 'cyan' }>{role}</Tag>\n\t\t\t),\n\t\t\tsorter: {\n\t\t\t\tcompare: (a, b) => a.role.length - b.role.length,\n\t\t\t}\n\t\t},\n\t\t{\n\t\t\ttitle: 'Last online',\n\t\t\tdataIndex: 'lastOnline',\n\t\t\trender: date => (\n\t\t\t\t<span>{moment.unix(date).format(\"MM/DD/YYYY\")} </span>\n\t\t\t),\n\t\t\tsorter: (a, b) => moment(a.lastOnline).unix() - moment(b.lastOnline).unix()\n\t\t},\n\t\t{\n\t\t\ttitle: 'Address',\n\t\t\tdataIndex: 'address',\n\t\t\twidth: '40%',\n\t\t\teditable: true,\n\t\t},\n\t\t{\n\t\t\ttitle: 'Edit',\n\t\t\tdataIndex: 'edit',\n\t\t\trender: (_, record) => {\n\t\t\t\tconst editable = isEditing(record);\n\t\t\t\treturn editable ? (\n\t\t\t\t<span>\n\t\t\t\t\t<a\n\t\t\t\t\t\thref=\"javascript:;\"\n\t\t\t\t\t\tonClick={() => save(record.key)}\n\t\t\t\t\t\tstyle={{\n\t\t\t\t\t\t\tmarginRight: 8,\n\t\t\t\t\t\t}}\n\t\t\t\t\t>\n\t\t\t\t\t\tSave\n\t\t\t\t\t</a>\n\t\t\t\t\t<Popconfirm title=\"Sure to cancel?\" onConfirm={cancel}>\n\t\t\t\t\t\t<a>Cancel</a>\n\t\t\t\t\t</Popconfirm>\n\t\t\t\t</span>\n\t\t\t\t) : (\n\t\t\t\t<a disabled={editingKey !== ''} onClick={() => edit(record)}>\n\t\t\t\t\tEdit\n\t\t\t\t</a>\n\t\t\t\t);\n\t\t\t}\n\t\t},\n\t\t{\n\t\t\ttitle: '',\n\t\t\tdataIndex: 'actions',\n\t\t\trender: (_, elm) => (\n\t\t\t\t<div className=\"text-right\">\n\t\t\t\t\t<Tooltip title=\"View\">\n\t\t\t\t\t\t<Button type=\"primary\" className=\"mr-2\" icon={ <EyeOutlined /> } onClick={ () => { this.showUserProfile(elm) } } size=\"small\"/>\n\t\t\t\t\t</Tooltip>\n\t\t\t\t\t<Tooltip title=\"Delete\">\n\t\t\t\t\t\t<Button danger icon={ <DeleteOutlined /> } onClick={ ()=> { this.deleteUser(elm.id) } } size=\"small\"/>\n\t\t\t\t\t</Tooltip>\n\t\t\t\t</div>\n\t\t\t)\n\t\t}\n\t];\n\n\tconst mergedColumns = columns.map((col) => {\n\t\tif (!col.editable) return col\n\n\t\treturn {\n\t\t\t...col,\n\t\t\tonCell: (record) => ({\n\t\t\t\trecord,\n\t\t\t\tinputType: col.dataIndex === 'age' ? 'number' : 'text',\n\t\t\t\tdataIndex: col.dataIndex,\n\t\t\t\ttitle: col.title,\n\t\t\t\tediting: isEditing(record),\n\t\t\t}),\n\t\t};\n\t});\n\n\treturn (\n\t\t<Card bodyStyle={{ 'padding': '0px' }}>\n\t\t\t<Form form={form} component={false}>\n\t\t\t\t<Table\n\t\t\t\t\tcomponents={{\n\t\t\t\t\t\tbody: {\n\t\t\t\t\t\t\tcell: EditableCell,\n\t\t\t\t\t\t}\n\t\t\t\t\t}}\n\t\t\t\t\tbordered\n\t\t\t\t\tdataSource={ data }\n\t\t\t\t\tcolumns={ mergedColumns }\n\t\t\t\t\trowClassName=\"editable-row\"\n\t\t\t\t\tpagination={{ onChange: cancel }}\n\t\t\t\t/>\n\t\t\t</Form>\n\t\t\t<UserView data={selectedUser} visible={userProfileVisible} close={()=> {this.closeUserProfile()}}/>\n\t\t</Card>\n\t);\n};\n\nexport default EditableTable"]},"metadata":{},"sourceType":"module"}