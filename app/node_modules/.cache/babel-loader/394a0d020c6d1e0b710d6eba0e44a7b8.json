{"ast":null,"code":"var _jsxFileName = \"/Users/dhruvaagrawal/Desktop/Work/Spocto/CMS/app/src/views/app-views/ops-admin/FileUploadForm.js\";\nimport React, { useState } from 'react';\nimport { Link } from 'react-router-dom';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { message, Typography, Form, Button, Checkbox, Row, Col, Select, Card } from 'antd';\nimport { CloudUploadOutlined, LeftCircleOutlined, RightCircleOutlined } from '@ant-design/icons';\nimport axios from 'axios';\nimport { v4 as uuidv4 } from 'uuid';\nimport readXlsxFile from 'read-excel-file';\nimport { ES_BASE_URL, ES_BULK_QUERY, ES_PASSWORD, ES_USERNAME } from 'constants/ApiConstant';\nimport { StyledButton, StyledNavButton } from 'constants/StyledComponents';\nimport { APP_PREFIX_PATH } from 'configs/AppConfig';\nconst {\n  Title\n} = Typography;\nconst {\n  Option\n} = Select;\nconst useStyles = makeStyles({\n  table: {\n    minWidth: 650\n  }\n});\n\nconst FileUploadForm = props => {\n  console.log(props); // ---------------------------- VARIABLE ASSIGNMENT ---------------------------- //\n\n  let fileReader;\n  let newArr = [];\n  let checkedLanguages = [];\n  let selectedOptions = [];\n  const [file, setFile] = useState(null);\n  const [rows, setRows] = useState(null);\n  const [visible, setVisible] = useState(false); // const [ show, setShow ] = useState(false)\n\n  const [buttonVisible, setButtonVisible] = useState(true);\n  const [checked, setChecked] = useState(false);\n  const [createTable, setCreateTable] = useState([]);\n  const [languages, setLanguages] = useState([]);\n  const classes = useStyles(); // Create a reference to the hidden file input element\n\n  const hiddenFileInput = React.useRef(null);\n  const formItemLayout = {\n    labelCol: {\n      span: 6\n    },\n    wrapperCol: {\n      span: 14\n    }\n  };\n  const map = {\n    'Product': 'product',\n    'Stage': 'stage',\n    'Type': 'type',\n    'Level': 'level',\n    'Category': 'category',\n    'Content': 'content',\n    'Vendor': 'vendor',\n    'Languages': 'languages',\n    'Status': 'status'\n  }; // --------------------------------------------------------------------- //\n  // ------------------------ FUNCTION ASSIGNMENT ------------------------ //\n  // --------------------------------------------------------------------- //\n\n  const showButtons = () => {\n    return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Card, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(Form.Item, {\n      style: {\n        display: 'flex',\n        justifyContent: 'center',\n        alignItems: 'center',\n        marginTop: 0,\n        marginBottom: 0,\n        paddingtop: 0,\n        paddingTop: 0\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(Row, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 25\n      }\n    }, renderLanguages()))), /*#__PURE__*/React.createElement(StyledButton, {\n      onClick: handleClick,\n      style: {\n        marginTop: '7.5%'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(CloudUploadOutlined, {\n      style: {\n        marginRight: '2%'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 85\n      }\n    }), \" Upload File\"), /*#__PURE__*/React.createElement(Row, {\n      style: {\n        marginTop: '12.5%',\n        display: 'flex',\n        justifyContent: 'center',\n        alignItems: 'center'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(StyledNavButton, {\n      style: {\n        marginRight: '3%'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(LeftCircleOutlined, {\n      style: {\n        marginRight: '2%'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 67\n      }\n    }), \"Go to recommendations\"), /*#__PURE__*/React.createElement(Link, {\n      to: `${APP_PREFIX_PATH}/journeys/journey-ivr/transaction`,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(StyledNavButton, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 25\n      }\n    }, \"Go to transactions\", /*#__PURE__*/React.createElement(RightCircleOutlined, {\n      style: {\n        marginLeft: '2%'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 60\n      }\n    })))));\n  };\n\n  const handleClick = () => {\n    hiddenFileInput.current.click();\n  };\n\n  const onChange = async e => {\n    e.preventDefault();\n    let tableArray = [];\n    let customer_name = 'ICICI';\n    const formData = new FormData();\n    setFile(e.target.files[0]);\n    await readXlsxFile(e.target.files[0], {\n      map\n    }).then(async ({\n      rows\n    }) => {\n      rows.forEach(row => (row.id = uuidv4(), row.channel = 'smartVoice', row.customer_name = customer_name, row.content_name = `${customer_name}-${row.stage}-${row.product}-${row.category}-${row.channel}`, row.language = languages, row.status = 'Client Approved', row.last_updated_on = new Date(), row.last_updated_by = 'Administrator', row.version = 1));\n      formData.append('client_data', rows);\n      props.esData(rows);\n      console.log(formData);\n      await axios({\n        method: 'post',\n        baseURL: ES_BASE_URL,\n        url: ES_BULK_QUERY,\n        data: '',\n        auth: {\n          username: ES_USERNAME,\n          password: ES_PASSWORD\n        }\n      }).then(res => console.log(`Connection with STATUS ${res.status} has been established.`)).catch(function (err) {\n        if (err.response) {\n          console.log(err.response);\n          console.log(err.response.data);\n          console.log(err.response.status);\n          console.log(err.response.headers);\n        } else if (err.request) {\n          console.log(err.request);\n        } else {\n          console.log('Error', err.message);\n        }\n\n        console.log(err.config);\n      });\n    }); // .then( function(res) {\n    //     for (let i = 0; i < 3; i++) {\n    //         tableArray.push(res[i])\n    //     } \n    //     console.log(tableArray)\n    //     setCreateTable(tableArray)\n    //     setVisible(true)\n    //     setButtonVisible(false)\n    // })\n  };\n\n  const onSubmit = async e => {// let res = await uploadFile(file);\n    // console.log(res.data);\n    // checkedLanguages = []\n    // selectedOptions = []\n    // message.success('Your file was successfully submitted and is now being processed')\n  };\n\n  const onCheck = event => {\n    checkedLanguages.push(event.target.value);\n    setLanguages(prevLanguages => prevLanguages.concat(checkedLanguages));\n  }; // const onSelect = event => {\n  //     selectedOptions.push(event.value)\n  //     console.log(selectedOptions)\n  // }\n\n\n  const renderLanguages = () => {\n    const languages = ['English', 'Hindi', 'Tamil', 'Telugu', 'Kannada', 'Marathi', 'Gujarati', 'Bengali', 'Punjabi', 'Malayalam'];\n    return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Form.Item, {\n      name: \"language\",\n      label: \"Language\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 182,\n        columnNumber: 17\n      }\n    }, languages.map(language => /*#__PURE__*/React.createElement(Checkbox.Group, {\n      className: \"pl-3 mt-1\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 184,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(Col, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 185,\n        columnNumber: 33\n      }\n    }, /*#__PURE__*/React.createElement(Checkbox, {\n      value: language,\n      style: {\n        lineHeight: '32px'\n      },\n      onChange: onCheck,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 186,\n        columnNumber: 37\n      }\n    }, language))))));\n  }; // const showTableHeaders = array => {\n  //     newArr = array[0]\n  //     console.log(newArr)\n  //     return (\n  //         <>\n  //         { newArr.map( (num, index) => (\n  //             <Form.Item\n  //                 name={ num }\n  //                 label={ num }\n  //                 hasFeedback\n  //             >\n  //                 <Row>\n  //                     <Select key={ index } labelInValue placeholder={`Please enter ${ num }`} onSelect={ onSelect }>\n  //                         { newArr.map( (num, index) => {\n  //                             return <Option key={ index } value={ num }>{ num }</Option>\n  //                         }) }\n  //                     </Select>\n  //                 </Row>\n  //             </Form.Item>\n  //         ))}\n  //         </>\n  //     )\n  // }\n  // --------------------------------------------------------------------- //\n  // --------------------------------------------------------------------- //\n  // --------------------------------------------------------------------- //\n\n\n  return /*#__PURE__*/React.createElement(Form, Object.assign({\n    name: \"validate_other\"\n  }, formItemLayout, {\n    onFinish: onSubmit,\n    textAlign: \"center\",\n    style: buttonVisible ? {\n      height: '500px'\n    } : {\n      height: '100%'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 227,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(Form.Item, {\n    justify: \"center\",\n    style: {\n      textAlign: 'center',\n      marginTop: '1%'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 234,\n      columnNumber: 4\n    }\n  }, /*#__PURE__*/React.createElement(Title, {\n    level: 1,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 235,\n      columnNumber: 17\n    }\n  }, \"Upload Transactions\")), checked && /*#__PURE__*/React.createElement(Button, {\n    htmlType: \"submit\",\n    variant: \"contained\",\n    type: \"primary\",\n    style: {\n      width: '100%',\n      height: '3rem',\n      fontSize: '1.45rem'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 237,\n      columnNumber: 26\n    }\n  }, \"Create Transactions\"), /*#__PURE__*/React.createElement(Form.Item, {\n    style: {\n      display: 'flex',\n      justifyContent: 'center',\n      alignItems: 'center',\n      textAlign: 'center'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 238,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    type: \"file\",\n    onChange: onChange,\n    ref: hiddenFileInput,\n    style: {\n      display: 'none'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 239,\n      columnNumber: 8\n    }\n  }), buttonVisible ? showButtons() : /*#__PURE__*/React.createElement(Title, {\n    level: 3,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 240,\n      columnNumber: 51\n    }\n  }, \"Please map the headings\")), console.log(createTable));\n};\n\nexport default FileUploadForm;","map":{"version":3,"sources":["/Users/dhruvaagrawal/Desktop/Work/Spocto/CMS/app/src/views/app-views/ops-admin/FileUploadForm.js"],"names":["React","useState","Link","makeStyles","message","Typography","Form","Button","Checkbox","Row","Col","Select","Card","CloudUploadOutlined","LeftCircleOutlined","RightCircleOutlined","axios","v4","uuidv4","readXlsxFile","ES_BASE_URL","ES_BULK_QUERY","ES_PASSWORD","ES_USERNAME","StyledButton","StyledNavButton","APP_PREFIX_PATH","Title","Option","useStyles","table","minWidth","FileUploadForm","props","console","log","fileReader","newArr","checkedLanguages","selectedOptions","file","setFile","rows","setRows","visible","setVisible","buttonVisible","setButtonVisible","checked","setChecked","createTable","setCreateTable","languages","setLanguages","classes","hiddenFileInput","useRef","formItemLayout","labelCol","span","wrapperCol","map","showButtons","display","justifyContent","alignItems","marginTop","marginBottom","paddingtop","paddingTop","renderLanguages","handleClick","marginRight","marginLeft","current","click","onChange","e","preventDefault","tableArray","customer_name","formData","FormData","target","files","then","forEach","row","id","channel","content_name","stage","product","category","language","status","last_updated_on","Date","last_updated_by","version","append","esData","method","baseURL","url","data","auth","username","password","res","catch","err","response","headers","request","config","onSubmit","onCheck","event","push","value","prevLanguages","concat","lineHeight","height","textAlign","width","fontSize"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,SAASC,IAAT,QAAqB,kBAArB;AACA,SAASC,UAAT,QAA2B,0BAA3B;AACA,SAASC,OAAT,EAAkBC,UAAlB,EAA8BC,IAA9B,EAAoCC,MAApC,EAA4CC,QAA5C,EAAsDC,GAAtD,EAA2DC,GAA3D,EAAgEC,MAAhE,EAAwEC,IAAxE,QAAoF,MAApF;AACA,SAASC,mBAAT,EAA8BC,kBAA9B,EAAkDC,mBAAlD,QAA6E,mBAA7E;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAASC,EAAE,IAAIC,MAAf,QAA6B,MAA7B;AACA,OAAOC,YAAP,MAAyB,iBAAzB;AACA,SAASC,WAAT,EAAsBC,aAAtB,EAAqCC,WAArC,EAAkDC,WAAlD,QAAqE,uBAArE;AACA,SAASC,YAAT,EAAuBC,eAAvB,QAA8C,4BAA9C;AACA,SAASC,eAAT,QAAgC,mBAAhC;AAEA,MAAM;AAAEC,EAAAA;AAAF,IAAYtB,UAAlB;AACA,MAAM;AAAEuB,EAAAA;AAAF,IAAajB,MAAnB;AAEA,MAAMkB,SAAS,GAAG1B,UAAU,CAAC;AACzB2B,EAAAA,KAAK,EAAE;AACHC,IAAAA,QAAQ,EAAE;AADP;AADkB,CAAD,CAA5B;;AAMA,MAAMC,cAAc,GAAGC,KAAK,IAAI;AAE5BC,EAAAA,OAAO,CAACC,GAAR,CAAYF,KAAZ,EAF4B,CAI5B;;AAEA,MAAIG,UAAJ;AAEA,MAAIC,MAAM,GAAG,EAAb;AAEA,MAAIC,gBAAgB,GAAG,EAAvB;AACA,MAAIC,eAAe,GAAG,EAAtB;AAEA,QAAM,CAAEC,IAAF,EAAQC,OAAR,IAAoBxC,QAAQ,CAAC,IAAD,CAAlC;AACA,QAAM,CAAEyC,IAAF,EAAQC,OAAR,IAAoB1C,QAAQ,CAAC,IAAD,CAAlC;AACA,QAAM,CAAE2C,OAAF,EAAWC,UAAX,IAA0B5C,QAAQ,CAAC,KAAD,CAAxC,CAf4B,CAgB5B;;AACA,QAAM,CAAE6C,aAAF,EAAiBC,gBAAjB,IAAsC9C,QAAQ,CAAC,IAAD,CAApD;AACA,QAAM,CAAE+C,OAAF,EAAWC,UAAX,IAA0BhD,QAAQ,CAAC,KAAD,CAAxC;AACA,QAAM,CAAEiD,WAAF,EAAeC,cAAf,IAAkClD,QAAQ,CAAC,EAAD,CAAhD;AACA,QAAM,CAAEmD,SAAF,EAAaC,YAAb,IAA8BpD,QAAQ,CAAC,EAAD,CAA5C;AAEA,QAAMqD,OAAO,GAAGzB,SAAS,EAAzB,CAtB4B,CAwB5B;;AACA,QAAM0B,eAAe,GAAGvD,KAAK,CAACwD,MAAN,CAAa,IAAb,CAAxB;AAEA,QAAMC,cAAc,GAAG;AACnBC,IAAAA,QAAQ,EAAE;AACNC,MAAAA,IAAI,EAAE;AADA,KADS;AAInBC,IAAAA,UAAU,EAAE;AACRD,MAAAA,IAAI,EAAE;AADE;AAJO,GAAvB;AASA,QAAME,GAAG,GAAG;AACR,eAAW,SADH;AAER,aAAS,OAFD;AAGR,YAAQ,MAHA;AAIR,aAAS,OAJD;AAKR,gBAAY,UALJ;AAMR,eAAW,SANH;AAOR,cAAU,QAPF;AAQR,iBAAa,WARL;AASR,cAAU;AATF,GAAZ,CApC4B,CAiD5B;AACA;AACA;;AAEA,QAAMC,WAAW,GAAG,MAAM;AAEtB,wBACI,uDACI,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI,oBAAC,IAAD,CAAM,IAAN;AAAW,MAAA,KAAK,EAAE;AAAEC,QAAAA,OAAO,EAAE,MAAX;AAAmBC,QAAAA,cAAc,EAAE,QAAnC;AAA6CC,QAAAA,UAAU,EAAE,QAAzD;AAAmEC,QAAAA,SAAS,EAAE,CAA9E;AAAiFC,QAAAA,YAAY,EAAE,CAA/F;AAAkGC,QAAAA,UAAU,EAAE,CAA9G;AAAiHC,QAAAA,UAAU,EAAE;AAA7H,OAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI,oBAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACMC,eAAe,EADrB,CADJ,CADJ,CADJ,eAQI,oBAAC,YAAD;AAAc,MAAA,OAAO,EAAGC,WAAxB;AAAsC,MAAA,KAAK,EAAE;AAAEL,QAAAA,SAAS,EAAE;AAAb,OAA7C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAAoE,oBAAC,mBAAD;AAAqB,MAAA,KAAK,EAAE;AAAEM,QAAAA,WAAW,EAAE;AAAf,OAA5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAApE,iBARJ,eASI,oBAAC,GAAD;AAAK,MAAA,KAAK,EAAE;AAAEN,QAAAA,SAAS,EAAE,OAAb;AAAsBH,QAAAA,OAAO,EAAE,MAA/B;AAAuCC,QAAAA,cAAc,EAAE,QAAvD;AAAiEC,QAAAA,UAAU,EAAE;AAA7E,OAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI,oBAAC,eAAD;AAAiB,MAAA,KAAK,EAAE;AAAEO,QAAAA,WAAW,EAAE;AAAf,OAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAA8C,oBAAC,kBAAD;AAAoB,MAAA,KAAK,EAAE;AAAEA,QAAAA,WAAW,EAAE;AAAf,OAA3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAA9C,0BADJ,eAEI,oBAAC,IAAD;AAAM,MAAA,EAAE,EAAG,GAAE9C,eAAgB,mCAA7B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI,oBAAC,eAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0CAAmC,oBAAC,mBAAD;AAAqB,MAAA,KAAK,EAAE;AAAE+C,QAAAA,UAAU,EAAE;AAAd,OAA5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAnC,CADJ,CAFJ,CATJ,CADJ;AAkBH,GApBD;;AAsBA,QAAMF,WAAW,GAAG,MAAM;AACtBhB,IAAAA,eAAe,CAACmB,OAAhB,CAAwBC,KAAxB;AACH,GAFD;;AAIA,QAAMC,QAAQ,GAAG,MAAOC,CAAP,IAAa;AAC1BA,IAAAA,CAAC,CAACC,cAAF;AACA,QAAIC,UAAU,GAAG,EAAjB;AACA,QAAIC,aAAa,GAAG,OAApB;AACA,UAAMC,QAAQ,GAAG,IAAIC,QAAJ,EAAjB;AACAzC,IAAAA,OAAO,CAACoC,CAAC,CAACM,MAAF,CAASC,KAAT,CAAe,CAAf,CAAD,CAAP;AACA,UAAMjE,YAAY,CAAC0D,CAAC,CAACM,MAAF,CAASC,KAAT,CAAe,CAAf,CAAD,EAAoB;AAAEvB,MAAAA;AAAF,KAApB,CAAZ,CACLwB,IADK,CACC,OAAO;AAAE3C,MAAAA;AAAF,KAAP,KAAoB;AACvBA,MAAAA,IAAI,CAAC4C,OAAL,CAAcC,GAAG,KACbA,GAAG,CAACC,EAAJ,GAAStE,MAAM,EAAf,EACAqE,GAAG,CAACE,OAAJ,GAAc,YADd,EAEAF,GAAG,CAACP,aAAJ,GAAoBA,aAFpB,EAGAO,GAAG,CAACG,YAAJ,GAAoB,GAAEV,aAAc,IAAGO,GAAG,CAACI,KAAM,IAAGJ,GAAG,CAACK,OAAQ,IAAGL,GAAG,CAACM,QAAS,IAAGN,GAAG,CAACE,OAAQ,EAH/F,EAIAF,GAAG,CAACO,QAAJ,GAAe1C,SAJf,EAKAmC,GAAG,CAACQ,MAAJ,GAAa,iBALb,EAMAR,GAAG,CAACS,eAAJ,GAAsB,IAAIC,IAAJ,EANtB,EAOAV,GAAG,CAACW,eAAJ,GAAsB,eAPtB,EAQAX,GAAG,CAACY,OAAJ,GAAc,CATD,CAAjB;AAWAlB,MAAAA,QAAQ,CAACmB,MAAT,CAAgB,aAAhB,EAA+B1D,IAA/B;AACAT,MAAAA,KAAK,CAACoE,MAAN,CAAa3D,IAAb;AACAR,MAAAA,OAAO,CAACC,GAAR,CAAY8C,QAAZ;AACA,YAAMjE,KAAK,CAAC;AACRsF,QAAAA,MAAM,EAAE,MADA;AAERC,QAAAA,OAAO,EAAEnF,WAFD;AAGRoF,QAAAA,GAAG,EAAEnF,aAHG;AAIRoF,QAAAA,IAAI,EAAE,EAJE;AAKRC,QAAAA,IAAI,EAAE;AACFC,UAAAA,QAAQ,EAAEpF,WADR;AAEFqF,UAAAA,QAAQ,EAAEtF;AAFR;AALE,OAAD,CAAL,CAUL+D,IAVK,CAUCwB,GAAG,IAAI3E,OAAO,CAACC,GAAR,CAAa,0BAAyB0E,GAAG,CAACd,MAAO,wBAAjD,CAVR,EAWLe,KAXK,CAWE,UAASC,GAAT,EAAc;AAClB,YAAIA,GAAG,CAACC,QAAR,EAAkB;AACd9E,UAAAA,OAAO,CAACC,GAAR,CAAY4E,GAAG,CAACC,QAAhB;AACA9E,UAAAA,OAAO,CAACC,GAAR,CAAY4E,GAAG,CAACC,QAAJ,CAAaP,IAAzB;AACAvE,UAAAA,OAAO,CAACC,GAAR,CAAY4E,GAAG,CAACC,QAAJ,CAAajB,MAAzB;AACA7D,UAAAA,OAAO,CAACC,GAAR,CAAY4E,GAAG,CAACC,QAAJ,CAAaC,OAAzB;AACH,SALD,MAKO,IAAIF,GAAG,CAACG,OAAR,EAAiB;AACpBhF,UAAAA,OAAO,CAACC,GAAR,CAAY4E,GAAG,CAACG,OAAhB;AACH,SAFM,MAEA;AACHhF,UAAAA,OAAO,CAACC,GAAR,CAAY,OAAZ,EAAqB4E,GAAG,CAAC3G,OAAzB;AACH;;AACD8B,QAAAA,OAAO,CAACC,GAAR,CAAY4E,GAAG,CAACI,MAAhB;AACH,OAvBK,CAAN;AAwBH,KAxCK,CAAN,CAN0B,CA+C1B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACH,GAxDD;;AA0DA,QAAMC,QAAQ,GAAG,MAAOvC,CAAP,IAAa,CAC1B;AACA;AACA;AACA;AACA;AACN,GANE;;AAQA,QAAMwC,OAAO,GAAGC,KAAK,IAAI;AACrBhF,IAAAA,gBAAgB,CAACiF,IAAjB,CAAsBD,KAAK,CAACnC,MAAN,CAAaqC,KAAnC;AACAnE,IAAAA,YAAY,CAACoE,aAAa,IAAIA,aAAa,CAACC,MAAd,CAAqBpF,gBAArB,CAAlB,CAAZ;AACH,GAHD,CAjJ4B,CAsJ5B;AACA;AACA;AACA;;;AAEA,QAAMgC,eAAe,GAAG,MAAM;AAC1B,UAAMlB,SAAS,GAAG,CAAC,SAAD,EAAY,OAAZ,EAAqB,OAArB,EAA8B,QAA9B,EAAwC,SAAxC,EAAmD,SAAnD,EAA8D,UAA9D,EAA0E,SAA1E,EAAqF,SAArF,EAAgG,WAAhG,CAAlB;AAEA,wBACI,uDACI,oBAAC,IAAD,CAAM,IAAN;AAAW,MAAA,IAAI,EAAC,UAAhB;AAA2B,MAAA,KAAK,EAAC,UAAjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACUA,SAAS,CAACS,GAAV,CAAeiC,QAAQ,iBACrB,oBAAC,QAAD,CAAU,KAAV;AAAgB,MAAA,SAAS,EAAC,WAA1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI,oBAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI,oBAAC,QAAD;AAAU,MAAA,KAAK,EAAGA,QAAlB;AAA6B,MAAA,KAAK,EAAE;AAAE6B,QAAAA,UAAU,EAAE;AAAd,OAApC;AAA4D,MAAA,QAAQ,EAAGN,OAAvE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAmFvB,QAAnF,CADJ,CADJ,CADF,CADV,CADJ,CADJ;AAaH,GAhBD,CA3J4B,CA6K5B;AAEA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;;;AAEH,sBACO,oBAAC,IAAD;AACI,IAAA,IAAI,EAAC;AADT,KAESrC,cAFT;AAGI,IAAA,QAAQ,EAAG2D,QAHf;AAII,IAAA,SAAS,EAAC,QAJd;AAKI,IAAA,KAAK,EAAGtE,aAAa,GAAG;AAAE8E,MAAAA,MAAM,EAAE;AAAV,KAAH,GAAyB;AAAEA,MAAAA,MAAM,EAAE;AAAV,KALlD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAOL,oBAAC,IAAD,CAAM,IAAN;AAAW,IAAA,OAAO,EAAC,QAAnB;AAA4B,IAAA,KAAK,EAAE;AAAEC,MAAAA,SAAS,EAAE,QAAb;AAAuB3D,MAAAA,SAAS,EAAE;AAAlC,KAAnC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACa,oBAAC,KAAD;AAAO,IAAA,KAAK,EAAE,CAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2BADb,CAPK,EAUMlB,OAAO,iBAAI,oBAAC,MAAD;AAAQ,IAAA,QAAQ,EAAC,QAAjB;AAA0B,IAAA,OAAO,EAAC,WAAlC;AAA8C,IAAA,IAAI,EAAC,SAAnD;AAA6D,IAAA,KAAK,EAAE;AAAE8E,MAAAA,KAAK,EAAE,MAAT;AAAiBF,MAAAA,MAAM,EAAE,MAAzB;AAAiCG,MAAAA,QAAQ,EAAE;AAA3C,KAApE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2BAVjB,eAWI,oBAAC,IAAD,CAAM,IAAN;AAAW,IAAA,KAAK,EAAE;AAAEhE,MAAAA,OAAO,EAAE,MAAX;AAAmBC,MAAAA,cAAc,EAAE,QAAnC;AAA6CC,MAAAA,UAAU,EAAE,QAAzD;AAAmE4D,MAAAA,SAAS,EAAE;AAA9E,KAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACL;AAAO,IAAA,IAAI,EAAC,MAAZ;AAAmB,IAAA,QAAQ,EAAGjD,QAA9B;AAAyC,IAAA,GAAG,EAAGrB,eAA/C;AAAkE,IAAA,KAAK,EAAE;AAAEQ,MAAAA,OAAO,EAAE;AAAX,KAAzE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADK,EAEMjB,aAAa,GAAGgB,WAAW,EAAd,gBAAmB,oBAAC,KAAD;AAAO,IAAA,KAAK,EAAE,CAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,+BAFtC,CAXJ,EAoBM5B,OAAO,CAACC,GAAR,CAAYe,WAAZ,CApBN,CADP;AAyBA,CArOD;;AAsOA,eAAelB,cAAf","sourcesContent":["import React, { useState } from 'react'\nimport { Link } from 'react-router-dom'\nimport { makeStyles } from '@material-ui/core/styles';\nimport { message, Typography, Form, Button, Checkbox, Row, Col, Select, Card } from 'antd'\nimport { CloudUploadOutlined, LeftCircleOutlined, RightCircleOutlined } from '@ant-design/icons'\nimport axios from 'axios'\nimport { v4 as uuidv4 } from 'uuid';\nimport readXlsxFile from 'read-excel-file'\nimport { ES_BASE_URL, ES_BULK_QUERY, ES_PASSWORD, ES_USERNAME } from 'constants/ApiConstant'\nimport { StyledButton, StyledNavButton } from 'constants/StyledComponents'\nimport { APP_PREFIX_PATH } from 'configs/AppConfig'\n\nconst { Title } = Typography\nconst { Option } = Select\n\nconst useStyles = makeStyles({\n    table: {\n        minWidth: 650,\n    },\n});\n\nconst FileUploadForm = props => {\n\n    console.log(props)\n\n    // ---------------------------- VARIABLE ASSIGNMENT ---------------------------- //\n\n    let fileReader;\n\n    let newArr = []\n\n    let checkedLanguages = []\n    let selectedOptions = []\n\n    const [ file, setFile ] = useState(null)\n    const [ rows, setRows ] = useState(null)\n    const [ visible, setVisible ] = useState(false)\n    // const [ show, setShow ] = useState(false)\n    const [ buttonVisible, setButtonVisible ] = useState(true)\n    const [ checked, setChecked ] = useState(false)\n    const [ createTable, setCreateTable ] = useState([])\n    const [ languages, setLanguages ] = useState([])\n\n    const classes = useStyles()\n\n    // Create a reference to the hidden file input element\n    const hiddenFileInput = React.useRef(null);\n\n    const formItemLayout = {\n        labelCol: {\n            span: 6,\n        },\n        wrapperCol: {\n            span: 14,\n        },\n    }; \n\n    const map = {\n        'Product': 'product',\n        'Stage': 'stage',\n        'Type': 'type',\n        'Level': 'level',\n        'Category': 'category',\n        'Content': 'content',\n        'Vendor': 'vendor',\n        'Languages': 'languages',\n        'Status': 'status'\n    }\n\n\n    // --------------------------------------------------------------------- //\n    // ------------------------ FUNCTION ASSIGNMENT ------------------------ //\n    // --------------------------------------------------------------------- //\n\n    const showButtons = () => {\n\n        return (\n            <>\n                <Card>\n                    <Form.Item style={{ display: 'flex', justifyContent: 'center', alignItems: 'center', marginTop: 0, marginBottom: 0, paddingtop: 0, paddingTop: 0 }}>\n                        <Row>\n                            { renderLanguages() }\n                        </Row>\n                    </Form.Item>\n                </Card>\n                <StyledButton onClick={ handleClick } style={{ marginTop: '7.5%' }}><CloudUploadOutlined style={{ marginRight: '2%' }} /> Upload File</StyledButton>\n                <Row style={{ marginTop: '12.5%', display: 'flex', justifyContent: 'center', alignItems: 'center'}}>\n                    <StyledNavButton style={{ marginRight: '3%'}}><LeftCircleOutlined style={{ marginRight: '2%' }} />Go to recommendations</StyledNavButton>\n                    <Link to={`${APP_PREFIX_PATH}/journeys/journey-ivr/transaction`}>\n                        <StyledNavButton>Go to transactions<RightCircleOutlined style={{ marginLeft: '2%' }} /></StyledNavButton>\n                    </Link>\n                </Row>\n            </>\n        )\n    }\n\n    const handleClick = () => {\n        hiddenFileInput.current.click()\n    }\n\t\n    const onChange = async (e) => {\n        e.preventDefault()\n        let tableArray = []\n        let customer_name = 'ICICI'\n        const formData = new FormData();\n        setFile(e.target.files[0])\n        await readXlsxFile(e.target.files[0], { map })\n        .then( async ({ rows }) => {\n            rows.forEach( row => (\n                row.id = uuidv4(),\n                row.channel = 'smartVoice',\n                row.customer_name = customer_name,\n                row.content_name = `${customer_name}-${row.stage}-${row.product}-${row.category}-${row.channel}`,\n                row.language = languages,\n                row.status = 'Client Approved',\n                row.last_updated_on = new Date(),\n                row.last_updated_by = 'Administrator',\n                row.version = 1\n            ))\n            formData.append('client_data', rows)\n            props.esData(rows)\n            console.log(formData)\n            await axios({\n                method: 'post',\n                baseURL: ES_BASE_URL,\n                url: ES_BULK_QUERY,\n                data: '',\n                auth: {\n                    username: ES_USERNAME,\n                    password: ES_PASSWORD\n                }\n            })\n            .then( res => console.log(`Connection with STATUS ${res.status} has been established.`))\n            .catch( function(err) {\n                if (err.response) {\n                    console.log(err.response)\n                    console.log(err.response.data)\n                    console.log(err.response.status)\n                    console.log(err.response.headers)\n                } else if (err.request) {\n                    console.log(err.request)\n                } else {\n                    console.log('Error', err.message);\n                }\n                console.log(err.config);\n            })\n        })\n        // .then( function(res) {\n        //     for (let i = 0; i < 3; i++) {\n        //         tableArray.push(res[i])\n        //     } \n        //     console.log(tableArray)\n        //     setCreateTable(tableArray)\n        //     setVisible(true)\n        //     setButtonVisible(false)\n        // })\n    }\n    \n    const onSubmit = async (e) => {\n        // let res = await uploadFile(file);\n        // console.log(res.data);\n        // checkedLanguages = []\n        // selectedOptions = []\n        // message.success('Your file was successfully submitted and is now being processed')\n\t}\n      \n    const onCheck = event => {\n        checkedLanguages.push(event.target.value)\n        setLanguages(prevLanguages => prevLanguages.concat(checkedLanguages))\n    }\n\n    // const onSelect = event => {\n    //     selectedOptions.push(event.value)\n    //     console.log(selectedOptions)\n    // }\n    \n    const renderLanguages = () => {\n        const languages = ['English', 'Hindi', 'Tamil', 'Telugu', 'Kannada', 'Marathi', 'Gujarati', 'Bengali', 'Punjabi', 'Malayalam']\n\n        return (\n            <>\n                <Form.Item name=\"language\" label=\"Language\">\n                        { languages.map( language => (\n                            <Checkbox.Group className=\"pl-3 mt-1\">\n                                <Col>\n                                    <Checkbox value={ language } style={{ lineHeight: '32px' }} onChange={ onCheck }>{ language }</Checkbox>\n                                </Col>\n                            </Checkbox.Group>\n                        )) }\n                </Form.Item>\n            </>\n        )\n    }\n    \n    // const showTableHeaders = array => {\n\n    //     newArr = array[0]\n\n    //     console.log(newArr)\n        \n    //     return (\n    //         <>\n    //         { newArr.map( (num, index) => (\n    //             <Form.Item\n    //                 name={ num }\n    //                 label={ num }\n    //                 hasFeedback\n    //             >\n    //                 <Row>\n    //                     <Select key={ index } labelInValue placeholder={`Please enter ${ num }`} onSelect={ onSelect }>\n    //                         { newArr.map( (num, index) => {\n    //                             return <Option key={ index } value={ num }>{ num }</Option>\n    //                         }) }\n    //                     </Select>\n    //                 </Row>\n    //             </Form.Item>\n    //         ))}\n    //         </>\n    //     )\n    // }\n\n    // --------------------------------------------------------------------- //\n    // --------------------------------------------------------------------- //\n    // --------------------------------------------------------------------- //\n\n\treturn (\n        <Form\n            name=\"validate_other\"\n            { ...formItemLayout }\n            onFinish={ onSubmit }\n            textAlign=\"center\"\n            style={ buttonVisible ? { height: '500px' } : { height: '100%' }}\n        >\n\t\t\t<Form.Item justify=\"center\" style={{ textAlign: 'center', marginTop: '1%' }}>\n                <Title level={1}>Upload Transactions</Title>\n            </Form.Item>\n            { checked && <Button htmlType=\"submit\" variant=\"contained\" type=\"primary\" style={{ width: '100%', height: '3rem', fontSize: '1.45rem' }}>Create Transactions</Button> }\n            <Form.Item style={{ display: 'flex', justifyContent: 'center', alignItems: 'center', textAlign: 'center' }}>\n\t\t\t    <input type=\"file\" onChange={ onChange } ref={ hiddenFileInput }  style={{ display: 'none' }} />\n                { buttonVisible ? showButtons() : <Title level={3}>Please map the headings</Title>}\n            </Form.Item>\n            {/* <Form.Item style={{ display: 'flex', justifyContent: 'center', alignItems: 'center' }} className=\"mt-5\">\n                    <Row>\n                        { visible && showTableHeaders(createTable) }\n                    </Row>\n            </Form.Item> */}\n            { console.log(createTable) }\n\t\t</Form>\n\t)\n        \n}\nexport default FileUploadForm"]},"metadata":{},"sourceType":"module"}