{"ast":null,"code":"var _jsxFileName = \"/Users/dhruvaagrawal/Desktop/Work/Spocto/CMS/app/src/views/app-views/journeys/journey-ivr/campaignAssignment/index.js\";\nimport React from 'react';\nimport { Card, Table, Form, Select, Button, Checkbox, Row, Col, Typography, Input } from 'antd';\nimport { CloseCircleOutlined, PlusCircleOutlined, DownCircleOutlined } from '@ant-design/icons';\nimport Flex from 'components/shared-components/Flex';\nconst {\n  Title\n} = Typography;\nconst {\n  Option\n} = Select;\nconst {\n  TextArea\n} = Input;\n\nfunction campaignAssigment() {\n  return /*#__PURE__*/React.createElement(Card, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 11,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Title, {\n    style: {\n      textAlign: 'center',\n      fontSize: '2rem',\n      marginTop: '2%'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 13\n    }\n  }, \"Campaign Assignment\"), /*#__PURE__*/React.createElement(Form, Object.assign({\n    name: \"validate_other\"\n  }, formItemLayout, {\n    onFinish: onFinish,\n    textAlign: \"center\",\n    initialValues: {\n      rate: 3.5\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(Form.Item, {\n    style: {\n      margin: '0',\n      position: 'absolute',\n      left: '50%',\n      transform: 'translateX(-50%)'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Flex, {\n    mobileFlex: false,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"mb-3 mr-3\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    type: \"primary\",\n    onClick: () => props.history.push(\"/app/home\"),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    style: {\n      marginRight: '0.5rem'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 100\n    }\n  }, /*#__PURE__*/React.createElement(CloseCircleOutlined, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 140\n    }\n  })), \"Close\")))), /*#__PURE__*/React.createElement(Form.Item, {\n    name: \"select\",\n    label: \"Client Name\",\n    hasFeedback: true,\n    rules: [{\n      required: true,\n      message: 'Please select a client'\n    }],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Select, {\n    placeholder: \"Please select a client\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 21\n    }\n  }, renderClients())), /*#__PURE__*/React.createElement(Form.Item, {\n    name: \"language\",\n    label: \"Language\",\n    rules: [{\n      required: true\n    }],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Checkbox.Group, {\n    className: \"pl-3\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Row, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 21\n    }\n  }, renderLanguages()))), /*#__PURE__*/React.createElement(Form.Item, {\n    name: \"product\",\n    label: \"Product\",\n    hasFeedback: true,\n    rules: [{\n      required: true,\n      message: 'Please select a product'\n    }],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Select, {\n    placeholder: \"Please select a product\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 17\n    }\n  }, renderProducts())), /*#__PURE__*/React.createElement(Form.Item, {\n    name: \"segment\",\n    label: \"Segment\",\n    hasFeedback: true,\n    rules: [{\n      required: true,\n      message: 'Please select a segment'\n    }],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Select, {\n    placeholder: \"Please select a segment\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 17\n    }\n  }, renderSegments())), /*#__PURE__*/React.createElement(Form.Item, {\n    name: \"stage\",\n    label: \"Stage\",\n    hasFeedback: true,\n    rules: [{\n      message: 'Please select a stage'\n    }],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Select, {\n    placeholder: \"Please select a stage\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 17\n    }\n  }, renderStages())), /*#__PURE__*/React.createElement(Form.Item, {\n    name: \"type\",\n    label: \"Type\",\n    hasFeedback: true,\n    rules: [{\n      message: 'Please select a type'\n    }],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Select, {\n    placeholder: \"Please select a type\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 17\n    }\n  }, renderTypes())), /*#__PURE__*/React.createElement(Form.Item, {\n    name: \"level\",\n    label: \"Level\",\n    hasFeedback: true,\n    rules: [{\n      message: 'Please select a level'\n    }],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Select, {\n    placeholder: \"Please select a level\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 17\n    }\n  }, renderLevels())), /*#__PURE__*/React.createElement(Form.Item, {\n    name: \"category\",\n    label: \"Category\",\n    hasFeedback: true,\n    rules: [{\n      required: true,\n      message: 'Please select a category'\n    }],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Select, {\n    placeholder: \"Please select a category\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 17\n    }\n  }, renderCategories())), /*#__PURE__*/React.createElement(Form.Item, {\n    name: \"content\",\n    label: \"Content\",\n    rules: [{\n      required: true,\n      message: 'Please enter the content'\n    }],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(TextArea, {\n    rows: 4,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 17\n    }\n  })), /*#__PURE__*/React.createElement(Form.Item, {\n    name: \"channel\",\n    label: \"Channel\",\n    hasFeedback: true,\n    rules: [{\n      required: true,\n      message: 'Please select a channel'\n    }],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 120,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Select, {\n    placeholder: \"Please select the channel(s)\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 126,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Option, {\n    value: \"ivr\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 127,\n      columnNumber: 21\n    }\n  }, \"IVR\"), /*#__PURE__*/React.createElement(Option, {\n    value: \"sms\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 128,\n      columnNumber: 21\n    }\n  }, \"SMS\"), /*#__PURE__*/React.createElement(Option, {\n    value: \"email\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 129,\n      columnNumber: 21\n    }\n  }, \"E-mail\"))), /*#__PURE__*/React.createElement(Form.Item, {\n    style: {\n      display: 'flex',\n      justifyContent: 'center',\n      alignItems: 'center'\n    },\n    className: \"mt-5\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 132,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    variant: \"contained\",\n    type: \"primary\",\n    style: {\n      width: '100%',\n      height: '3rem',\n      fontSize: '1.25rem'\n    },\n    danger: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 133,\n      columnNumber: 17\n    }\n  }, \"Create and Notify Admin\"))));\n}\n\nexport default campaignAssigment;","map":{"version":3,"sources":["/Users/dhruvaagrawal/Desktop/Work/Spocto/CMS/app/src/views/app-views/journeys/journey-ivr/campaignAssignment/index.js"],"names":["React","Card","Table","Form","Select","Button","Checkbox","Row","Col","Typography","Input","CloseCircleOutlined","PlusCircleOutlined","DownCircleOutlined","Flex","Title","Option","TextArea","campaignAssigment","textAlign","fontSize","marginTop","formItemLayout","onFinish","rate","margin","position","left","transform","props","history","push","marginRight","required","message","renderClients","renderLanguages","renderProducts","renderSegments","renderStages","renderTypes","renderLevels","renderCategories","display","justifyContent","alignItems","width","height"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,IAAT,EAAeC,KAAf,EAAsBC,IAAtB,EAA4BC,MAA5B,EAAoCC,MAApC,EAA4CC,QAA5C,EAAsDC,GAAtD,EAA2DC,GAA3D,EAAgEC,UAAhE,EAA4EC,KAA5E,QAAyF,MAAzF;AACA,SAASC,mBAAT,EAA8BC,kBAA9B,EAAkDC,kBAAlD,QAA4E,mBAA5E;AACA,OAAOC,IAAP,MAAiB,mCAAjB;AACA,MAAM;AAAEC,EAAAA;AAAF,IAAYN,UAAlB;AACA,MAAM;AAAEO,EAAAA;AAAF,IAAaZ,MAAnB;AACA,MAAM;AAAEa,EAAAA;AAAF,IAAeP,KAArB;;AAEA,SAASQ,iBAAT,GAA6B;AACzB,sBACI,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,KAAD;AAAO,IAAA,KAAK,EAAE;AAAEC,MAAAA,SAAS,EAAE,QAAb;AAAuBC,MAAAA,QAAQ,EAAE,MAAjC;AAAyCC,MAAAA,SAAS,EAAE;AAApD,KAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2BADJ,eAEI,oBAAC,IAAD;AACI,IAAA,IAAI,EAAC;AADT,KAEQC,cAFR;AAGI,IAAA,QAAQ,EAAEC,QAHd;AAII,IAAA,SAAS,EAAC,QAJd;AAKI,IAAA,aAAa,EAAE;AAAEC,MAAAA,IAAI,EAAE;AAAR,KALnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAOI,oBAAC,IAAD,CAAM,IAAN;AAAW,IAAA,KAAK,EAAE;AAAEC,MAAAA,MAAM,EAAE,GAAV;AAAeC,MAAAA,QAAQ,EAAE,UAAzB;AAAqCC,MAAAA,IAAI,EAAE,KAA3C;AAAkDC,MAAAA,SAAS,EAAE;AAA7D,KAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,IAAD;AAAM,IAAA,UAAU,EAAE,KAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAK,IAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,MAAD;AAAQ,IAAA,IAAI,EAAC,SAAb;AAAuB,IAAA,OAAO,EAAE,MAAMC,KAAK,CAACC,OAAN,CAAcC,IAAd,CAAmB,WAAnB,CAAtC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAAuE;AAAM,IAAA,KAAK,EAAE;AAAEC,MAAAA,WAAW,EAAE;AAAf,KAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAAwC,oBAAC,mBAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAAxC,CAAvE,UADJ,CADJ,CADJ,CAPJ,eAcI,oBAAC,IAAD,CAAM,IAAN;AACI,IAAA,IAAI,EAAC,QADT;AAEI,IAAA,KAAK,EAAC,aAFV;AAGI,IAAA,WAAW,MAHf;AAII,IAAA,KAAK,EAAE,CAAC;AAAEC,MAAAA,QAAQ,EAAE,IAAZ;AAAkBC,MAAAA,OAAO,EAAE;AAA3B,KAAD,CAJX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAMI,oBAAC,MAAD;AAAQ,IAAA,WAAW,EAAC,wBAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACMC,aAAa,EADnB,CANJ,CAdJ,eAyBA,oBAAC,IAAD,CAAM,IAAN;AAAW,IAAA,IAAI,EAAC,UAAhB;AAA2B,IAAA,KAAK,EAAC,UAAjC;AAA4C,IAAA,KAAK,EAAE,CAAC;AAAEF,MAAAA,QAAQ,EAAE;AAAZ,KAAD,CAAnD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,QAAD,CAAU,KAAV;AAAgB,IAAA,SAAS,EAAC,MAA1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACMG,eAAe,EADrB,CADJ,CADJ,CAzBA,eAiCA,oBAAC,IAAD,CAAM,IAAN;AACI,IAAA,IAAI,EAAC,SADT;AAEI,IAAA,KAAK,EAAC,SAFV;AAGI,IAAA,WAAW,MAHf;AAII,IAAA,KAAK,EAAE,CAAC;AAAEH,MAAAA,QAAQ,EAAE,IAAZ;AAAkBC,MAAAA,OAAO,EAAE;AAA3B,KAAD,CAJX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAMI,oBAAC,MAAD;AAAQ,IAAA,WAAW,EAAC,yBAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACMG,cAAc,EADpB,CANJ,CAjCA,eA4CA,oBAAC,IAAD,CAAM,IAAN;AACI,IAAA,IAAI,EAAC,SADT;AAEI,IAAA,KAAK,EAAC,SAFV;AAGI,IAAA,WAAW,MAHf;AAII,IAAA,KAAK,EAAE,CAAC;AAAEJ,MAAAA,QAAQ,EAAE,IAAZ;AAAkBC,MAAAA,OAAO,EAAE;AAA3B,KAAD,CAJX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAMI,oBAAC,MAAD;AAAQ,IAAA,WAAW,EAAC,yBAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACMI,cAAc,EADpB,CANJ,CA5CA,eAuDA,oBAAC,IAAD,CAAM,IAAN;AACI,IAAA,IAAI,EAAC,OADT;AAEI,IAAA,KAAK,EAAC,OAFV;AAGI,IAAA,WAAW,MAHf;AAII,IAAA,KAAK,EAAE,CAAC;AAAEJ,MAAAA,OAAO,EAAE;AAAX,KAAD,CAJX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAMI,oBAAC,MAAD;AAAQ,IAAA,WAAW,EAAC,uBAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACMK,YAAY,EADlB,CANJ,CAvDA,eAkEA,oBAAC,IAAD,CAAM,IAAN;AACI,IAAA,IAAI,EAAC,MADT;AAEI,IAAA,KAAK,EAAC,MAFV;AAGI,IAAA,WAAW,MAHf;AAII,IAAA,KAAK,EAAE,CAAC;AAAEL,MAAAA,OAAO,EAAE;AAAX,KAAD,CAJX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAMI,oBAAC,MAAD;AAAQ,IAAA,WAAW,EAAC,sBAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACMM,WAAW,EADjB,CANJ,CAlEA,eA6EA,oBAAC,IAAD,CAAM,IAAN;AACI,IAAA,IAAI,EAAC,OADT;AAEI,IAAA,KAAK,EAAC,OAFV;AAGI,IAAA,WAAW,MAHf;AAII,IAAA,KAAK,EAAE,CAAC;AAAEN,MAAAA,OAAO,EAAE;AAAX,KAAD,CAJX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAMI,oBAAC,MAAD;AAAQ,IAAA,WAAW,EAAC,uBAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACMO,YAAY,EADlB,CANJ,CA7EA,eAwFA,oBAAC,IAAD,CAAM,IAAN;AACI,IAAA,IAAI,EAAC,UADT;AAEI,IAAA,KAAK,EAAC,UAFV;AAGI,IAAA,WAAW,MAHf;AAII,IAAA,KAAK,EAAE,CAAC;AAAER,MAAAA,QAAQ,EAAE,IAAZ;AAAkBC,MAAAA,OAAO,EAAE;AAA3B,KAAD,CAJX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAMI,oBAAC,MAAD;AAAQ,IAAA,WAAW,EAAC,0BAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACMQ,gBAAgB,EADtB,CANJ,CAxFA,eAmGA,oBAAC,IAAD,CAAM,IAAN;AACI,IAAA,IAAI,EAAC,SADT;AAEI,IAAA,KAAK,EAAC,SAFV;AAGI,IAAA,KAAK,EAAE,CAAC;AAAET,MAAAA,QAAQ,EAAE,IAAZ;AAAkBC,MAAAA,OAAO,EAAE;AAA3B,KAAD,CAHX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAKI,oBAAC,QAAD;AAAU,IAAA,IAAI,EAAE,CAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IALJ,CAnGA,eA2GA,oBAAC,IAAD,CAAM,IAAN;AACI,IAAA,IAAI,EAAC,SADT;AAEI,IAAA,KAAK,EAAC,SAFV;AAGI,IAAA,WAAW,MAHf;AAII,IAAA,KAAK,EAAE,CAAC;AAAED,MAAAA,QAAQ,EAAE,IAAZ;AAAkBC,MAAAA,OAAO,EAAE;AAA3B,KAAD,CAJX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAMI,oBAAC,MAAD;AAAQ,IAAA,WAAW,EAAC,8BAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,MAAD;AAAQ,IAAA,KAAK,EAAC,KAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WADJ,eAEI,oBAAC,MAAD;AAAQ,IAAA,KAAK,EAAC,KAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAFJ,eAGI,oBAAC,MAAD;AAAQ,IAAA,KAAK,EAAC,OAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAHJ,CANJ,CA3GA,eAuHA,oBAAC,IAAD,CAAM,IAAN;AAAW,IAAA,KAAK,EAAE;AAACS,MAAAA,OAAO,EAAE,MAAV;AAAkBC,MAAAA,cAAc,EAAE,QAAlC;AAA4CC,MAAAA,UAAU,EAAE;AAAxD,KAAlB;AAAqF,IAAA,SAAS,EAAC,MAA/F;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,MAAD;AAAQ,IAAA,OAAO,EAAC,WAAhB;AAA4B,IAAA,IAAI,EAAC,SAAjC;AAA2C,IAAA,KAAK,EAAE;AAAEC,MAAAA,KAAK,EAAE,MAAT;AAAiBC,MAAAA,MAAM,EAAE,MAAzB;AAAiC3B,MAAAA,QAAQ,EAAE;AAA3C,KAAlD;AAA0G,IAAA,MAAM,MAAhH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,+BADJ,CAvHA,CAFJ,CADJ;AAgIH;;AAED,eAAeF,iBAAf","sourcesContent":["import React from 'react'\nimport { Card, Table, Form, Select, Button, Checkbox, Row, Col, Typography, Input } from 'antd';\nimport { CloseCircleOutlined, PlusCircleOutlined, DownCircleOutlined } from '@ant-design/icons'\nimport Flex from 'components/shared-components/Flex'\nconst { Title } = Typography;\nconst { Option } = Select;\nconst { TextArea } = Input\n\nfunction campaignAssigment() {\n    return (\n        <Card>\n            <Title style={{ textAlign: 'center', fontSize: '2rem', marginTop: '2%' }}>Campaign Assignment</Title>\n            <Form\n                name=\"validate_other\"\n                {...formItemLayout}\n                onFinish={onFinish}\n                textAlign=\"center\"\n                initialValues={{ rate: 3.5 }}\n            >\n                <Form.Item style={{ margin: '0', position: 'absolute', left: '50%', transform: 'translateX(-50%)' }}>\n                    <Flex mobileFlex={false}>\n                        <div className=\"mb-3 mr-3\">\n                            <Button type=\"primary\" onClick={() => props.history.push(\"/app/home\")}><span style={{ marginRight: '0.5rem' }}><CloseCircleOutlined /></span>Close</Button>\n                        </div>\n                    </Flex>\n                </Form.Item>\n                <Form.Item\n                    name=\"select\"\n                    label=\"Client Name\"\n                    hasFeedback\n                    rules={[{ required: true, message: 'Please select a client' }]}\n                >\n                    <Select placeholder=\"Please select a client\">\n                        { renderClients() }\n                    </Select>\n                </Form.Item>\n\n            <Form.Item name=\"language\" label=\"Language\" rules={[{ required: true }]}>\n                <Checkbox.Group className=\"pl-3\">\n                    <Row>\n                        { renderLanguages() }\n                    </Row>\n                </Checkbox.Group>\n            </Form.Item>\n\n            <Form.Item\n                name=\"product\"\n                label=\"Product\"\n                hasFeedback\n                rules={[{ required: true, message: 'Please select a product' }]}\n            >\n                <Select placeholder=\"Please select a product\">\n                    { renderProducts() }\n                </Select>\n            </Form.Item>\n\n            <Form.Item\n                name=\"segment\"\n                label=\"Segment\"\n                hasFeedback\n                rules={[{ required: true, message: 'Please select a segment' }]}\n            >\n                <Select placeholder=\"Please select a segment\">\n                    { renderSegments() }\n                </Select>\n            </Form.Item>\n\n            <Form.Item\n                name=\"stage\"\n                label=\"Stage\"\n                hasFeedback\n                rules={[{ message: 'Please select a stage' }]}\n            >\n                <Select placeholder=\"Please select a stage\">\n                    { renderStages() }\n                </Select>\n            </Form.Item>\n\n            <Form.Item\n                name=\"type\"\n                label=\"Type\"\n                hasFeedback\n                rules={[{ message: 'Please select a type' }]}\n            >\n                <Select placeholder=\"Please select a type\">\n                    { renderTypes() }\n                </Select>\n            </Form.Item>\n\n            <Form.Item\n                name=\"level\"\n                label=\"Level\"\n                hasFeedback\n                rules={[{ message: 'Please select a level' }]}\n            >\n                <Select placeholder=\"Please select a level\">\n                    { renderLevels() }\n                </Select>\n            </Form.Item>\n\n            <Form.Item\n                name=\"category\"\n                label=\"Category\"\n                hasFeedback\n                rules={[{ required: true, message: 'Please select a category' }]}\n            >\n                <Select placeholder=\"Please select a category\">\n                    { renderCategories() }\n                </Select>\n            </Form.Item>\n\n            <Form.Item\n                name=\"content\"\n                label=\"Content\"\n                rules={[{ required: true, message: 'Please enter the content' }]}\n            >\n                <TextArea rows={4} />\n            </Form.Item>\n\n            <Form.Item\n                name=\"channel\"\n                label=\"Channel\"\n                hasFeedback\n                rules={[{ required: true, message: 'Please select a channel' }]}\n            >\n                <Select placeholder=\"Please select the channel(s)\">\n                    <Option value=\"ivr\">IVR</Option>\n                    <Option value=\"sms\">SMS</Option>\n                    <Option value=\"email\">E-mail</Option>\n                </Select>\n            </Form.Item>\n            <Form.Item style={{display: 'flex', justifyContent: 'center', alignItems: 'center'}} className=\"mt-5\">\n                <Button variant=\"contained\" type=\"primary\" style={{ width: '100%', height: '3rem', fontSize: '1.25rem' }} danger>Create and Notify Admin</Button>\n            </Form.Item>\n        </Form>\n        </Card>\n    )\n}\n\nexport default campaignAssigment\n"]},"metadata":{},"sourceType":"module"}