{"ast":null,"code":"'use strict';\n\nvar fs = require('graceful-fs');\n\nfunction extractPath(path, cmdshimContents) {\n  if (/[.]cmd$/.test(path)) {\n    return extractPathFromCmd(cmdshimContents);\n  } else if (/[.]ps1$/.test(path)) {\n    return extractPathFromPowershell(cmdshimContents);\n  } else {\n    return extractPathFromCygwin(cmdshimContents);\n  }\n}\n\nfunction extractPathFromPowershell(cmdshimContents) {\n  var matches = cmdshimContents.match(/\"[$]basedir[/]([^\"]+?)\"\\s+[$]args/);\n  return matches && matches[1];\n}\n\nfunction extractPathFromCmd(cmdshimContents) {\n  var matches = cmdshimContents.match(/\"%(?:~dp0|dp0%)\\\\([^\"]+?)\"\\s+%[*]/);\n  return matches && matches[1];\n}\n\nfunction extractPathFromCygwin(cmdshimContents) {\n  var matches = cmdshimContents.match(/\"[$]basedir[/]([^\"]+?)\"\\s+\"[$]@\"/);\n  return matches && matches[1];\n}\n\nfunction wrapError(thrown, newError) {\n  newError.message = thrown.message;\n  newError.code = thrown.code;\n  return newError;\n}\n\nfunction notaShim(path, er) {\n  if (!er) {\n    er = new Error();\n    Error.captureStackTrace(er, notaShim);\n  }\n\n  er.code = 'ENOTASHIM';\n  er.message = \"Can't read shim path from '\" + path + \"', it doesn't appear to be a cmd-shim\";\n  return er;\n}\n\nvar readCmdShim = module.exports = function (path, cb) {\n  var er = new Error();\n  Error.captureStackTrace(er, readCmdShim);\n  fs.readFile(path, function (readFileEr, contents) {\n    if (readFileEr) return cb(wrapError(readFileEr, er));\n    var destination = extractPath(path, contents.toString());\n    if (destination) return cb(null, destination);\n    return cb(notaShim(path, er));\n  });\n};\n\nmodule.exports.sync = function (path) {\n  var contents = fs.readFileSync(path);\n  var destination = extractPath(path, contents.toString());\n  if (!destination) throw notaShim(path);\n  return destination;\n};","map":null,"metadata":{},"sourceType":"script"}