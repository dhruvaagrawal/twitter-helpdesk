{"ast":null,"code":"'use strict';\n\nvar semver = require('semver');\n\nvar supported = require('../../package.json').engines.node;\n\nvar knownBroken = '<6.2.0 || 9 <9.3.0';\n\nvar checkVersion = exports.checkVersion = function (version) {\n  var versionNoPrerelease = version.replace(/-.*$/, '');\n  return {\n    version: versionNoPrerelease,\n    broken: semver.satisfies(versionNoPrerelease, knownBroken),\n    unsupported: !semver.satisfies(versionNoPrerelease, supported)\n  };\n};\n\nexports.checkForBrokenNode = function () {\n  var nodejs = checkVersion(process.version);\n\n  if (nodejs.broken) {\n    console.error('ERROR: npm is known not to run on Node.js ' + process.version);\n    console.error(\"You'll need to upgrade to a newer Node.js version in order to use this\");\n    console.error('version of npm. You can find the latest version at https://nodejs.org/');\n    process.exit(1);\n  }\n};\n\nexports.checkForUnsupportedNode = function () {\n  var nodejs = checkVersion(process.version);\n\n  if (nodejs.unsupported) {\n    var log = require('npmlog');\n\n    log.warn('npm', 'npm does not support Node.js ' + process.version);\n    log.warn('npm', 'You should probably upgrade to a newer version of node as we');\n    log.warn('npm', \"can't make any promises that npm will work with this version.\");\n    log.warn('npm', 'You can find the latest version at https://nodejs.org/');\n  }\n};","map":null,"metadata":{},"sourceType":"script"}