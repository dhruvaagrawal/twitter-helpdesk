{"ast":null,"code":"var _jsxFileName = \"/Users/dhruvaagrawal/Desktop/Work/Spocto/CMS/app/src/views/app-views/journeys/journey-ivr/userRoles/index.js\";\n// import React, { Component } from 'react'\n// import { Card, Table, Tag, Tooltip, message, Popconfirm, Button, InputNumber, Input, Form } from 'antd';\n// import { EyeOutlined, DeleteOutlined } from '@ant-design/icons';\n// import moment from 'moment';\n// import UserView from './UserView';\n// import AvatarStatus from 'components/shared-components/AvatarStatus';\n// export default class UserRoles extends Component {\n// \trender() {\n// \t\tconst { users, userProfileVisible, selectedUser } = this.state;\n// \t\t];\n// \t\treturn (\n// \t\t\t<Card >\n// \t\t\t\t<Table columns={tableColumns} dataSource={users} rowKey='id' />\n// \t\t\t\t<UserView data={selectedUser} visible={userProfileVisible} close={()=> {this.closeUserProfile()}}/>\n// \t\t\t</Card>\n// \t\t)\n// \t}\n// }\nimport React, { useState } from 'react';\nimport { Alert, Card, Table, Tag, Tooltip, message, Popconfirm, Button, InputNumber, Input, Form } from 'antd';\nimport { EyeOutlined, DeleteOutlined } from '@ant-design/icons';\nimport moment from 'moment';\nimport UserView from './UserView';\nimport AvatarStatus from 'components/shared-components/AvatarStatus';\nimport userData from \"assets/data/user-list.data.json\";\n\nconst EditableCell = ({\n  editing,\n  dataIndex,\n  title,\n  inputType,\n  record,\n  index,\n  children,\n  ...restProps\n}) => {\n  const inputNode = inputType === 'number' ? /*#__PURE__*/React.createElement(InputNumber, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 45\n    }\n  }) : /*#__PURE__*/React.createElement(Input, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 63\n    }\n  });\n  return /*#__PURE__*/React.createElement(\"td\", Object.assign({}, restProps, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 3\n    }\n  }), editing ? /*#__PURE__*/React.createElement(Form.Item, {\n    name: dataIndex,\n    style: {\n      margin: 0\n    },\n    rules: [{\n      required: true,\n      message: `Please Input ${title}!`\n    }],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 5\n    }\n  }, inputNode) : children);\n};\n\nconst UserRoles = () => {\n  const [users] = useState(userData);\n  const [userProfileVisible] = useState(false);\n  const [selectedUser] = useState(null); // const state = {\n  // \tusers: userData,\n  // \tuserProfileVisible: false,\n  // \tselectedUser: null\n  // }\n\n  const [form] = Form.useForm();\n  const [data, setData] = useState(userData);\n  const [editingKey, setEditingKey] = useState('');\n\n  const deleteUser = userId => {\n    this.setState({\n      users: this.state.users.filter(item => item.id !== userId)\n    });\n    message.success({\n      content: `Deleted user ${userId}`,\n      duration: 2\n    });\n  };\n\n  const showUserProfile = userInfo => {\n    this.setState({\n      userProfileVisible: true,\n      selectedUser: userInfo\n    });\n  };\n\n  const closeUserProfile = () => {\n    this.setState({\n      userProfileVisible: false,\n      selectedUser: null\n    });\n  };\n\n  const isEditing = record => record.key === editingKey;\n\n  const edit = record => {\n    form.setFieldsValue({\n      name: '',\n      age: '',\n      address: '',\n      ...record\n    });\n    setEditingKey(record.key);\n  };\n\n  const cancel = () => {\n    setEditingKey('');\n  };\n\n  const save = async key => {\n    try {\n      const row = await form.validateFields();\n      const newData = [...data];\n      const index = newData.findIndex(item => key === item.key);\n\n      if (index > -1) {\n        const item = newData[index];\n        newData.splice(index, 1, { ...item,\n          ...row\n        });\n        setData(newData);\n        setEditingKey('');\n      } else {\n        newData.push(row);\n        setData(newData);\n        setEditingKey('');\n      }\n    } catch (errInfo) {\n      console.log('Validation Failed:', errInfo);\n    }\n  };\n\n  const columns = [{\n    title: 'User',\n    dataIndex: 'name',\n    render: (_, record) => /*#__PURE__*/React.createElement(\"div\", {\n      className: \"d-flex\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 136,\n        columnNumber: 5\n      }\n    }, /*#__PURE__*/React.createElement(AvatarStatus, {\n      src: record.img,\n      name: record.name,\n      subTitle: record.email,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 137,\n        columnNumber: 6\n      }\n    })),\n    sorter: {\n      compare: (a, b) => {\n        a = a.name.toLowerCase();\n        b = b.name.toLowerCase();\n        return a > b ? -1 : b > a ? 1 : 0;\n      }\n    }\n  }, {\n    title: 'Role',\n    dataIndex: 'role',\n    render: role => /*#__PURE__*/React.createElement(Tag, {\n      className: \"text-capitalize\",\n      color: role === 'Admin' ? 'red' : role === 'Manager' ? 'blue' : 'cyan',\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 152,\n        columnNumber: 5\n      }\n    }, role),\n    sorter: {\n      compare: (a, b) => a.role.length - b.role.length\n    }\n  }, {\n    title: 'Last online',\n    dataIndex: 'lastOnline',\n    render: date =>\n    /*#__PURE__*/\n    // <Alert type=\"warning\" message={moment.unix(date).format(\"MM/DD/YYYY\")}></Alert>\n    React.createElement(Tag, {\n      color: 'magenta',\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 163,\n        columnNumber: 5\n      }\n    }, moment.unix(date).format(\"MM/DD/YYYY\")),\n    sorter: (a, b) => moment(a.lastOnline).unix() - moment(b.lastOnline).unix()\n  }, {\n    title: 'Address',\n    dataIndex: 'address',\n    width: '30%',\n    editable: true\n  }, {\n    title: 'Edit',\n    dataIndex: 'edit',\n    render: (_, record) => {\n      const editable = isEditing(record);\n      return editable ? /*#__PURE__*/React.createElement(\"span\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 179,\n          columnNumber: 5\n        }\n      }, /*#__PURE__*/React.createElement(\"a\", {\n        href: \"javascript:;\",\n        onClick: () => save(record.key),\n        style: {\n          marginLeft: 8,\n          marginRight: 8\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 180,\n          columnNumber: 6\n        }\n      }, \"Save\"), /*#__PURE__*/React.createElement(Popconfirm, {\n        title: \"Sure to cancel?\",\n        onConfirm: cancel,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 187,\n          columnNumber: 6\n        }\n      }, /*#__PURE__*/React.createElement(\"a\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 188,\n          columnNumber: 7\n        }\n      }, \"Cancel\"))) : /*#__PURE__*/React.createElement(\"a\", {\n        disabled: editingKey !== '',\n        onClick: () => edit(record),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 192,\n          columnNumber: 6\n        }\n      }, \"Edit\");\n    }\n  }, {\n    title: '',\n    dataIndex: 'actions',\n    render: (_, elm) => /*#__PURE__*/React.createElement(\"div\", {\n      className: \"text-right\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 202,\n        columnNumber: 5\n      }\n    }, /*#__PURE__*/React.createElement(Tooltip, {\n      title: \"View\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 203,\n        columnNumber: 6\n      }\n    }, /*#__PURE__*/React.createElement(Button, {\n      type: \"primary\",\n      className: \"mr-2\",\n      icon: /*#__PURE__*/React.createElement(EyeOutlined, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 204,\n          columnNumber: 54\n        }\n      }),\n      onClick: () => {\n        this.showUserProfile(elm);\n      },\n      size: \"small\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 204,\n        columnNumber: 7\n      }\n    })), /*#__PURE__*/React.createElement(Tooltip, {\n      title: \"Delete\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 206,\n        columnNumber: 6\n      }\n    }, /*#__PURE__*/React.createElement(Button, {\n      danger: true,\n      icon: /*#__PURE__*/React.createElement(DeleteOutlined, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 207,\n          columnNumber: 29\n        }\n      }),\n      onClick: () => {\n        this.deleteUser(elm.id);\n      },\n      size: \"small\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 207,\n        columnNumber: 7\n      }\n    })))\n  }];\n  const mergedColumns = columns.map(col => {\n    if (!col.editable) return col;\n    return { ...col,\n      onCell: record => ({\n        record,\n        inputType: col.dataIndex === 'age' ? 'number' : 'text',\n        dataIndex: col.dataIndex,\n        title: col.title,\n        editing: isEditing(record)\n      })\n    };\n  });\n  return /*#__PURE__*/React.createElement(Card, {\n    bodyStyle: {\n      'padding': '0px'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 230,\n      columnNumber: 3\n    }\n  }, /*#__PURE__*/React.createElement(Form, {\n    form: form,\n    component: false,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 231,\n      columnNumber: 4\n    }\n  }, /*#__PURE__*/React.createElement(Table, {\n    components: {\n      body: {\n        cell: EditableCell\n      }\n    },\n    bordered: true,\n    dataSource: data,\n    columns: mergedColumns,\n    rowClassName: \"editable-row\",\n    pagination: {\n      onChange: cancel\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 232,\n      columnNumber: 5\n    }\n  })), /*#__PURE__*/React.createElement(UserView, {\n    data: selectedUser,\n    visible: userProfileVisible,\n    close: () => {\n      this.closeUserProfile();\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 245,\n      columnNumber: 4\n    }\n  }));\n};\n\nexport default UserRoles;","map":{"version":3,"sources":["/Users/dhruvaagrawal/Desktop/Work/Spocto/CMS/app/src/views/app-views/journeys/journey-ivr/userRoles/index.js"],"names":["React","useState","Alert","Card","Table","Tag","Tooltip","message","Popconfirm","Button","InputNumber","Input","Form","EyeOutlined","DeleteOutlined","moment","UserView","AvatarStatus","userData","EditableCell","editing","dataIndex","title","inputType","record","index","children","restProps","inputNode","margin","required","UserRoles","users","userProfileVisible","selectedUser","form","useForm","data","setData","editingKey","setEditingKey","deleteUser","userId","setState","state","filter","item","id","success","content","duration","showUserProfile","userInfo","closeUserProfile","isEditing","key","edit","setFieldsValue","name","age","address","cancel","save","row","validateFields","newData","findIndex","splice","push","errInfo","console","log","columns","render","_","img","email","sorter","compare","a","b","toLowerCase","role","length","date","unix","format","lastOnline","width","editable","marginLeft","marginRight","elm","mergedColumns","map","col","onCell","body","cell","onChange"],"mappings":"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","sourcesContent":["// import React, { Component } from 'react'\n// import { Card, Table, Tag, Tooltip, message, Popconfirm, Button, InputNumber, Input, Form } from 'antd';\n// import { EyeOutlined, DeleteOutlined } from '@ant-design/icons';\n// import moment from 'moment';\n// import UserView from './UserView';\n// import AvatarStatus from 'components/shared-components/AvatarStatus';\n\n// export default class UserRoles extends Component {\n\n\n\n\n\n\n\n\n// \trender() {\n// \t\tconst { users, userProfileVisible, selectedUser } = this.state;\n\n// \t\t];\n// \t\treturn (\n// \t\t\t<Card >\n// \t\t\t\t<Table columns={tableColumns} dataSource={users} rowKey='id' />\n// \t\t\t\t<UserView data={selectedUser} visible={userProfileVisible} close={()=> {this.closeUserProfile()}}/>\n// \t\t\t</Card>\n// \t\t)\n// \t}\n// }\n\nimport React, { useState } from 'react';\nimport { Alert, Card, Table, Tag, Tooltip, message, Popconfirm, Button, InputNumber, Input, Form } from 'antd';\nimport { EyeOutlined, DeleteOutlined } from '@ant-design/icons';\nimport moment from 'moment';\nimport UserView from './UserView';\nimport AvatarStatus from 'components/shared-components/AvatarStatus';\nimport userData from \"assets/data/user-list.data.json\";\n\n\nconst EditableCell = ({ editing, dataIndex, title, inputType, record, index, children, ...restProps }) => {\n\tconst inputNode = inputType === 'number' ? <InputNumber /> : <Input />;\n\treturn (\n\t\t<td { ...restProps }>\n\t\t\t{editing ? (\n\t\t\t\t<Form.Item\n\t\t\t\t\tname={ dataIndex }\n\t\t\t\t\tstyle={{ margin: 0, }}\n\t\t\t\t\trules={[ { required: true, message: `Please Input ${title}!` } ]}\n\t\t\t\t>\n\t\t\t\t\t{ inputNode }\n\t\t\t\t</Form.Item>\n\t\t\t) : ( children )}\n\t\t</td>\n\t);\n};\n\nconst UserRoles = () => {\n\n\tconst [users ] = useState(userData)\n\tconst [userProfileVisible ] = useState(false)\n\tconst [selectedUser ] = useState(null)\n\n\t// const state = {\n\t// \tusers: userData,\n\t// \tuserProfileVisible: false,\n\t// \tselectedUser: null\n\t// }\n\n\tconst [form] = Form.useForm();\n\tconst [data, setData] = useState(userData);\n\tconst [editingKey, setEditingKey] = useState('');\n\n\tconst deleteUser = userId => {\n\t\tthis.setState({\n\t\t\tusers: this.state.users.filter(item => item.id !== userId),\n\t\t})\n\t\tmessage.success({ content: `Deleted user ${userId}`, duration: 2 });\n\t}\n\n\tconst showUserProfile = userInfo => {\n\t\tthis.setState({\n\t\t\tuserProfileVisible: true,\n\t\t\tselectedUser: userInfo\n\t\t});\n\t};\n\t\n\tconst closeUserProfile = () => {\n\t\tthis.setState({\n\t\t\tuserProfileVisible: false,\n\t\t\tselectedUser: null\n    \t});\n\t}\n\n\tconst isEditing = (record) => record.key === editingKey;\n\n\tconst edit = (record) => {\n\t\tform.setFieldsValue({\n\t\t\tname: '',\n\t\t\tage: '',\n\t\t\taddress: '',\n\t\t\t...record\n\t\t});\n\t\tsetEditingKey(record.key);\n\t};\n\n\tconst cancel = () => {\n\t\tsetEditingKey('');\n\t};\n\n\tconst save = async (key) => {\n\t\ttry {\n\t\t\tconst row = await form.validateFields();\n\t\t\tconst newData = [...data];\n\t\t\tconst index = newData.findIndex((item) => key === item.key);\n\n\t\t\tif (index > -1) {\n\t\t\t\tconst item = newData[index];\n\t\t\t\tnewData.splice(index, 1, { ...item, ...row });\n\t\t\t\tsetData(newData);\n\t\t\t\tsetEditingKey('');\n\t\t\t} else {\n\t\t\t\tnewData.push(row);\n\t\t\t\tsetData(newData);\n\t\t\t\tsetEditingKey('');\n\t\t\t}\n\n\t\t} catch (errInfo) {\n\t\t\tconsole.log('Validation Failed:', errInfo);\n\t\t}\n\t};\n\n\tconst columns = [\n\t\t{\n\t\t\ttitle: 'User',\n\t\t\tdataIndex: 'name',\n\t\t\trender: (_, record) => (\n\t\t\t\t<div className=\"d-flex\">\n\t\t\t\t\t<AvatarStatus src={record.img} name={record.name} subTitle={record.email}/>\n\t\t\t\t</div>\n\t\t\t),\n\t\t\tsorter: {\n\t\t\t\tcompare: (a, b) => {\n\t\t\t\t\ta = a.name.toLowerCase();\n\t\t\t\t\tb = b.name.toLowerCase();\n\t\t\t\t\treturn a > b ? -1 : b > a ? 1 : 0;\n\t\t\t\t},\n\t\t\t}\n\t\t},\n\t\t{\n\t\t\ttitle: 'Role',\n\t\t\tdataIndex: 'role',\n\t\t\trender: role => (\n\t\t\t\t<Tag className =\"text-capitalize\" color={role === 'Admin' ? 'red' : role === 'Manager' ? 'blue' : 'cyan' }>{role}</Tag>\n\t\t\t),\n\t\t\tsorter: {\n\t\t\t\tcompare: (a, b) => a.role.length - b.role.length,\n\t\t\t}\n\t\t},\n\t\t{\n\t\t\ttitle: 'Last online',\n\t\t\tdataIndex: 'lastOnline',\n\t\t\trender: date => (\n\t\t\t\t// <Alert type=\"warning\" message={moment.unix(date).format(\"MM/DD/YYYY\")}></Alert>\n\t\t\t\t<Tag color={'magenta'}>{moment.unix(date).format(\"MM/DD/YYYY\")}</Tag>\n\t\t\t),\n\t\t\tsorter: (a, b) => moment(a.lastOnline).unix() - moment(b.lastOnline).unix()\n\t\t},\n\t\t{\n\t\t\ttitle: 'Address',\n\t\t\tdataIndex: 'address',\n\t\t\twidth: '30%',\n\t\t\teditable: true,\n\t\t},\n\t\t{\n\t\t\ttitle: 'Edit',\n\t\t\tdataIndex: 'edit',\n\t\t\trender: (_, record) => {\n\t\t\t\tconst editable = isEditing(record);\n\t\t\t\treturn editable ? (\n\t\t\t\t<span>\n\t\t\t\t\t<a\n\t\t\t\t\t\thref=\"javascript:;\"\n\t\t\t\t\t\tonClick={() => save(record.key)}\n\t\t\t\t\t\tstyle={{ marginLeft: 8, marginRight: 8 }}\n\t\t\t\t\t>\n\t\t\t\t\t\tSave\n\t\t\t\t\t</a>\n\t\t\t\t\t<Popconfirm title=\"Sure to cancel?\" onConfirm={cancel}>\n\t\t\t\t\t\t<a>Cancel</a>\n\t\t\t\t\t</Popconfirm>\n\t\t\t\t</span>\n\t\t\t\t) : (\n\t\t\t\t\t<a disabled={editingKey !== ''} onClick={ () => edit(record) }>\n\t\t\t\t\t\tEdit\n\t\t\t\t\t</a>\n\t\t\t\t);\n\t\t\t}\n\t\t},\n\t\t{\n\t\t\ttitle: '',\n\t\t\tdataIndex: 'actions',\n\t\t\trender: (_, elm) => (\n\t\t\t\t<div className=\"text-right\">\n\t\t\t\t\t<Tooltip title=\"View\">\n\t\t\t\t\t\t<Button type=\"primary\" className=\"mr-2\" icon={ <EyeOutlined /> } onClick={ () => { this.showUserProfile(elm) } } size=\"small\"/>\n\t\t\t\t\t</Tooltip>\n\t\t\t\t\t<Tooltip title=\"Delete\">\n\t\t\t\t\t\t<Button danger icon={ <DeleteOutlined /> } onClick={ ()=> { this.deleteUser(elm.id) } } size=\"small\"/>\n\t\t\t\t\t</Tooltip>\n\t\t\t\t</div>\n\t\t\t)\n\t\t}\n\t];\n\n\tconst mergedColumns = columns.map((col) => {\n\t\tif (!col.editable) return col\n\n\t\treturn {\n\t\t\t...col,\n\t\t\tonCell: (record) => ({\n\t\t\t\trecord,\n\t\t\t\tinputType: col.dataIndex === 'age' ? 'number' : 'text',\n\t\t\t\tdataIndex: col.dataIndex,\n\t\t\t\ttitle: col.title,\n\t\t\t\tediting: isEditing(record),\n\t\t\t}),\n\t\t};\n\t});\n\n\treturn (\n\t\t<Card bodyStyle={{ 'padding': '0px' }}>\n\t\t\t<Form form={form} component={false}>\n\t\t\t\t<Table\n\t\t\t\t\tcomponents={{\n\t\t\t\t\t\tbody: {\n\t\t\t\t\t\t\tcell: EditableCell,\n\t\t\t\t\t\t}\n\t\t\t\t\t}}\n\t\t\t\t\tbordered\n\t\t\t\t\tdataSource={ data }\n\t\t\t\t\tcolumns={ mergedColumns }\n\t\t\t\t\trowClassName=\"editable-row\"\n\t\t\t\t\tpagination={{ onChange: cancel }}\n\t\t\t\t/>\n\t\t\t</Form>\n\t\t\t<UserView data={selectedUser} visible={userProfileVisible} close={()=> {this.closeUserProfile()}}/>\n\t\t</Card>\n\t);\n};\n\nexport default UserRoles"]},"metadata":{},"sourceType":"module"}