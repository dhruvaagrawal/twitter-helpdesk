{"ast":null,"code":"var _jsxFileName = \"/Users/dhruvaagrawal/Desktop/Work/Spocto/CMS/app/src/views/app-views/journeys/journey-ivr/userRoles/index.js\";\n\n/* eslint-disable no-unused-vars */\nimport React, { useState, useEffect } from 'react';\nimport { Card, Table, Select, Input, Button, Badge, Menu, Tag, Pagination, Typography } from 'antd';\nimport axios from 'axios';\nimport { LoadingOutlined } from '@ant-design/icons'; // import OrderListData from 'assets/data/order-list.data.json'\n\nimport { EyeOutlined, CloudUploadOutlined, CloudDownloadOutlined, ScissorOutlined, SearchOutlined, PlusCircleOutlined, EditOutlined } from '@ant-design/icons';\nimport EllipsisDropdown from 'components/shared-components/EllipsisDropdown';\nimport Flex from 'components/shared-components/Flex';\nimport NumberFormat from 'react-number-format';\nimport moment from 'moment';\nimport { DATE_FORMAT_DD_MM_YYYY } from 'constants/DateConstant';\nimport utils from 'utils';\nimport { Resizable } from 'react-resizable';\nconst {\n  Title\n} = Typography;\nexport default function Demo(props) {\n  const [state, setstate] = useState({});\n  const [loading, setloading] = useState(true);\n  useEffect(() => {\n    fetchData();\n  }, []);\n\n  async function fetchData() {\n    const API_URL = \"https://68ef17ae206a41b485fa164d62a92012.us-east-1.aws.found.io:9243/sc_content_transaction/_search?filter_path=hits.hits/\";\n    const username = \"sp_es_write\";\n    const password = \"JxpZzs8hRV4X7\"; // await axios.get(API_URL, {\n    // \tauth: {\n    // \t\tusername: username,\n    // \t\tpassword: password\n    // \t}\n    // }).then(res => console.log(res))\n\n    await fetch(URL, {\n      method: 'GET',\n      credentials: 'Access-Control-Allow-Origin',\n      redirect: 'follow',\n      agent: null,\n      headers: {\n        \"Content-Type\": \"text/plain\",\n        'Authorization': 'Basic ' + btoa(`${username}:${password}`)\n      },\n      timeout: 500\n    }).then(res => console.log(res)).then(res => {\n      res = res.json();\n    }).then(res => console.log(res)).then(res => {\n      setstate(res.map(row => ({\n        Transaction_ID: row._source.transaction_id,\n        Customer_ID: row._source.customerid,\n        Customer_Name: row._source.customer_name,\n        Channel: row._source.channel,\n        Product: row._source.product,\n        Segment: row._source.segment,\n        Type: row._source.type,\n        Level: row._source.level,\n        Category: row._source.category,\n        Content: row._source.content,\n        Language: row._source.language,\n        Content_Name: row._source.content_name,\n        Version: row._source.Version,\n        Status: row._source.status,\n        Last_Updated: row._source.last_updated,\n        Last_Updated_By: row._source.last_updated_by\n      })));\n    });\n  }\n\n  const columns = [{\n    title: \"Transaction_ID\",\n    dataIndex: \"Transaction_ID\"\n  }, {\n    title: \"Customer_ID\",\n    dataIndex: \"Customer_ID\"\n  }, {\n    title: \"Customer_Name\",\n    dataIndex: \"Customer_Name\"\n  }, {\n    title: \"Channel\",\n    dataIndex: \"Channel\"\n  }, {\n    title: \"Product\",\n    dataIndex: \"Product\"\n  }, {\n    title: \"Segment\",\n    dataIndex: \"Segment\"\n  }, {\n    title: \"Type\",\n    dataIndex: \"Type\"\n  }, {\n    title: \"Level\",\n    dataIndex: \"Level\"\n  }, {\n    title: \"Category\",\n    dataIndex: \"Category\"\n  }, {\n    title: \"Content\",\n    dataIndex: \"Content\"\n  }, {\n    title: \"Language\",\n    dataIndex: \"Language\"\n  }, {\n    title: \"Content_Name\",\n    dataIndex: \"Content_Name\"\n  }, {\n    title: \"Version\",\n    dataIndex: \"Version\"\n  }, {\n    title: \"Status\",\n    dataIndex: \"Status\"\n  }, {\n    title: \"Last_Updated\",\n    dataIndex: \"Last_Updated\"\n  }, {\n    title: \"Last_Updated_By\",\n    dataIndex: \"Last_Updated_By\"\n  }]; // const data = loading ? \"Wait\" : state.map(row => ({ Name: row.name, Email: row.email }));\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 150,\n      columnNumber: 3\n    }\n  }, loading ? /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 152,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(LoadingOutlined, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 153,\n      columnNumber: 8\n    }\n  }), /*#__PURE__*/React.createElement(\"hr\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 154,\n      columnNumber: 6\n    }\n  }), /*#__PURE__*/React.createElement(Title, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 155,\n      columnNumber: 6\n    }\n  }, \"Fetching Data from our servers ...\")) : /*#__PURE__*/React.createElement(Table, {\n    columns: columns,\n    dataSource: state,\n    pagination: {\n      pageSize: 50\n    },\n    scroll: {\n      y: 240\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 158,\n      columnNumber: 5\n    }\n  }));\n}","map":{"version":3,"sources":["/Users/dhruvaagrawal/Desktop/Work/Spocto/CMS/app/src/views/app-views/journeys/journey-ivr/userRoles/index.js"],"names":["React","useState","useEffect","Card","Table","Select","Input","Button","Badge","Menu","Tag","Pagination","Typography","axios","LoadingOutlined","EyeOutlined","CloudUploadOutlined","CloudDownloadOutlined","ScissorOutlined","SearchOutlined","PlusCircleOutlined","EditOutlined","EllipsisDropdown","Flex","NumberFormat","moment","DATE_FORMAT_DD_MM_YYYY","utils","Resizable","Title","Demo","props","state","setstate","loading","setloading","fetchData","API_URL","username","password","fetch","URL","method","credentials","redirect","agent","headers","btoa","timeout","then","res","console","log","json","map","row","Transaction_ID","_source","transaction_id","Customer_ID","customerid","Customer_Name","customer_name","Channel","channel","Product","product","Segment","segment","Type","type","Level","level","Category","category","Content","content","Language","language","Content_Name","content_name","Version","Status","status","Last_Updated","last_updated","Last_Updated_By","last_updated_by","columns","title","dataIndex","pageSize","y"],"mappings":"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","sourcesContent":["/* eslint-disable no-unused-vars */\nimport React, { useState, useEffect } from 'react'\nimport { Card, Table, Select, Input, Button, Badge, Menu, Tag, Pagination, Typography } from 'antd';\nimport axios from 'axios'\nimport { LoadingOutlined } from '@ant-design/icons'\n// import OrderListData from 'assets/data/order-list.data.json'\nimport { EyeOutlined, CloudUploadOutlined, CloudDownloadOutlined, ScissorOutlined, SearchOutlined, PlusCircleOutlined, EditOutlined } from '@ant-design/icons';\nimport EllipsisDropdown from 'components/shared-components/EllipsisDropdown';\nimport Flex from 'components/shared-components/Flex'\nimport NumberFormat from 'react-number-format';\nimport moment from 'moment'; \nimport { DATE_FORMAT_DD_MM_YYYY } from 'constants/DateConstant'\nimport utils from 'utils'\nimport { Resizable } from 'react-resizable';\nconst { Title } = Typography\n\n\nexport default function Demo(props) {\n\n\tconst [state, setstate] = useState({});\n  \tconst [loading, setloading] = useState(true);\n\n\tuseEffect(() => {\n\t\tfetchData()\n\t}, [])\n\n\tasync function fetchData() {\n\t\t\n\t\tconst API_URL = \"https://68ef17ae206a41b485fa164d62a92012.us-east-1.aws.found.io:9243/sc_content_transaction/_search?filter_path=hits.hits/\"\n\n        const username = \"sp_es_write\"\n        const password = \"JxpZzs8hRV4X7\"\n\n\t\t// await axios.get(API_URL, {\n\t\t// \tauth: {\n\t\t// \t\tusername: username,\n\t\t// \t\tpassword: password\n\t\t// \t}\n\t\t// }).then(res => console.log(res))\n        await fetch(URL, {\n\t\t\t\t\tmethod: 'GET',\n\t\t\t\t\tcredentials: 'Access-Control-Allow-Origin',\n\t\t\t\t\tredirect: 'follow',\n\t\t\t\t\tagent: null,\n\t\t\t\t\theaders: {\n\t\t\t\t\t\t\"Content-Type\": \"text/plain\",\n\t\t\t\t\t\t'Authorization': 'Basic ' + btoa(`${username}:${password}`),\n\t\t\t\t\t},\n\t\t\t\t\ttimeout: 500\n\t\t}).then( res => console.log(res) )\n\t\t.then( res => {\n\t\t\tres = res.json()\n\t\t} )\n\t\t.then( res => console.log(res) )\n\t\t.then( res => {\n\t\t\tsetstate(\n\t\t\t\tres.map(row => ({\n\t\t\t\t\tTransaction_ID: row._source.transaction_id,\n\t\t\t\t\tCustomer_ID: row._source.customerid,\n\t\t\t\t\tCustomer_Name: row._source.customer_name,\n\t\t\t\t\tChannel: row._source.channel,\n\t\t\t\t\tProduct: row._source.product,\n\t\t\t\t\tSegment: row._source.segment,\n\t\t\t\t\tType: row._source.type,\n\t\t\t\t\tLevel: row._source.level,\n\t\t\t\t\tCategory: row._source.category,\n\t\t\t\t\tContent: row._source.content,\n\t\t\t\t\tLanguage: row._source.language,\n\t\t\t\t\tContent_Name: row._source.content_name,\n\t\t\t\t\tVersion: row._source.Version,\n\t\t\t\t\tStatus: row._source.status,\n\t\t\t\t\tLast_Updated: row._source.last_updated,\n\t\t\t\t\tLast_Updated_By: row._source.last_updated_by\n\t\t\t\t}))\n\t\t\t\t);\n\t\t\t}\n\t\t)\n\t}\n\n\tconst columns = [\n\t\t{\n\t\t  \ttitle: \"Transaction_ID\",\n\t\t  \tdataIndex: \"Transaction_ID\",\n\t\t},\n\t\t{\n\t\t  \ttitle: \"Customer_ID\",\n\t\t  \tdataIndex: \"Customer_ID\",\n\t\t},\n\t\t{\n\t\t\ttitle: \"Customer_Name\",\n\t\t\tdataIndex: \"Customer_Name\",\n\t\t},\n\t\t{\n\t\t\ttitle: \"Channel\",\n\t\t\tdataIndex: \"Channel\",\n\t\t},\n\t\t{\n\t\t\ttitle: \"Product\",\n\t\t\tdataIndex: \"Product\",\n\t\t},\t\t\n\t\t{\n\t\t\ttitle: \"Segment\",\n\t\t\tdataIndex: \"Segment\",\n\t\t},\n\t\t{\n\t\t\ttitle: \"Type\",\n\t\t\tdataIndex: \"Type\",\n\t\t},\n\t\t{\n\t\t\ttitle: \"Level\",\n\t\t\tdataIndex: \"Level\",\n\t\t},\n\t\t{\n\t\t\ttitle: \"Category\",\n\t\t\tdataIndex: \"Category\",\n\t\t},\n\t\t{\n\t\t\ttitle: \"Content\",\n\t\t\tdataIndex: \"Content\",\n\t\t},\n\t\t{\n\t\t\ttitle: \"Language\",\n\t\t\tdataIndex: \"Language\",\n\t\t},\n\t\t{\n\t\t\ttitle: \"Content_Name\",\n\t\t\tdataIndex: \"Content_Name\",\n\t\t},\n\t\t{\n\t\t\ttitle: \"Version\",\n\t\t\tdataIndex: \"Version\",\n\t\t},\n\t\t{\n\t\t\ttitle: \"Status\",\n\t\t\tdataIndex: \"Status\",\n\t\t},\n\t\t{\n\t\t\ttitle: \"Last_Updated\",\n\t\t\tdataIndex: \"Last_Updated\",\n\t\t},\n\t\t{\n\t\t\ttitle: \"Last_Updated_By\",\n\t\t\tdataIndex: \"Last_Updated_By\",\n\t\t}\n\t  ];\n\n\t// const data = loading ? \"Wait\" : state.map(row => ({ Name: row.name, Email: row.email }));\n\t\n\treturn (\n\t\t<div>\n\t\t\t{ loading ? (\n\t\t\t\t<div>\n\t\t  \t\t\t<LoadingOutlined />\n\t\t\t\t\t<hr />\n\t\t\t\t\t<Title>Fetching Data from our servers ...</Title>\n\t\t\t\t</div>\n\t\t\t) : (\n\t\t\t\t<Table\n\t\t\t\t\tcolumns={ columns }\n\t\t\t\t\tdataSource={ state }\n\t\t\t\t\tpagination={{ pageSize: 50 }}\n\t\t\t\t\tscroll={{ y: 240 }}\n\t\t\t\t/>\n\t\t\t)}\n\t\t</div>\n\t)\n}"]},"metadata":{},"sourceType":"module"}