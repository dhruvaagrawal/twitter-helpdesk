{"ast":null,"code":"var _jsxFileName = \"/Users/dhruvaagrawal/Desktop/Work/Projects/Webdev.nosync/Twitter/app/src/components/layout-components/MenuContent.js\";\nimport React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { Menu, Grid } from \"antd\";\nimport IntlMessage from \"../util-components/IntlMessage\";\nimport Icon from \"../util-components/Icon\";\nimport navigationConfig from \"configs/NavigationConfig\";\nimport { connect } from \"react-redux\";\nimport { SIDE_NAV_LIGHT, NAV_TYPE_SIDE } from \"constants/ThemeConstant\";\nimport utils from 'utils';\nimport { onMobileNavToggle } from \"redux/actions/Theme\";\nconst {\n  SubMenu\n} = Menu;\nconst {\n  useBreakpoint\n} = Grid;\n\nconst setLocale = (isLocaleOn, localeKey) => isLocaleOn ? /*#__PURE__*/React.createElement(IntlMessage, {\n  id: localeKey,\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 16,\n    columnNumber: 16\n  }\n}) : localeKey.toString();\n\nconst setDefaultOpen = key => {\n  let keyList = [];\n  let keyString = \"\";\n\n  if (key) {\n    const arr = key.split(\"-\");\n\n    for (let index = 0; index < arr.length; index++) {\n      const elm = arr[index];\n      index === 0 ? keyString = elm : keyString = `${keyString}-${elm}`;\n      keyList.push(keyString);\n    }\n  }\n\n  return keyList;\n};\n\nconst SideNavContent = props => {\n  const {\n    sideNavTheme,\n    routeInfo,\n    hideGroupTitle,\n    localization,\n    onMobileNavToggle\n  } = props;\n  const isMobile = !utils.getBreakPoint(useBreakpoint()).includes('lg');\n\n  const closeMobileNav = () => {\n    if (isMobile) {\n      onMobileNavToggle(false);\n    }\n  };\n\n  return /*#__PURE__*/React.createElement(Menu, {\n    theme: sideNavTheme === SIDE_NAV_LIGHT ? \"light\" : \"dark\",\n    mode: \"inline\",\n    style: {\n      height: \"100%\",\n      borderRight: 0\n    },\n    defaultSelectedKeys: [routeInfo === null || routeInfo === void 0 ? void 0 : routeInfo.key],\n    defaultOpenKeys: setDefaultOpen(routeInfo === null || routeInfo === void 0 ? void 0 : routeInfo.key),\n    className: hideGroupTitle ? \"hide-group-title\" : \"\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 5\n    }\n  }, navigationConfig.map(menu => menu.submenu.length > 0 ? /*#__PURE__*/React.createElement(Menu.ItemGroup, {\n    key: menu.key,\n    title: setLocale(localization, menu.title),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 11\n    }\n  }, menu.submenu.map(subMenuFirst => subMenuFirst.submenu.length > 0 ? /*#__PURE__*/React.createElement(SubMenu, {\n    icon: subMenuFirst.icon ? /*#__PURE__*/React.createElement(Icon, {\n      type: subMenuFirst === null || subMenuFirst === void 0 ? void 0 : subMenuFirst.icon,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 23\n      }\n    }) : null,\n    key: subMenuFirst.key,\n    title: setLocale(localization, subMenuFirst.title),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 17\n    }\n  }, subMenuFirst.submenu.map(subMenuSecond => /*#__PURE__*/React.createElement(Menu.Item, {\n    key: subMenuSecond.key,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 21\n    }\n  }, subMenuSecond.icon ? /*#__PURE__*/React.createElement(Icon, {\n    type: subMenuSecond === null || subMenuSecond === void 0 ? void 0 : subMenuSecond.icon,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 25\n    }\n  }) : null, /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 23\n    }\n  }, setLocale(localization, subMenuSecond.title)), /*#__PURE__*/React.createElement(Link, {\n    onClick: () => closeMobileNav(),\n    to: subMenuSecond.path,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 23\n    }\n  })))) : /*#__PURE__*/React.createElement(Menu.Item, {\n    key: subMenuFirst.key,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 17\n    }\n  }, subMenuFirst.icon ? /*#__PURE__*/React.createElement(Icon, {\n    type: subMenuFirst.icon,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 40\n    }\n  }) : null, /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 19\n    }\n  }, setLocale(localization, subMenuFirst.title)), /*#__PURE__*/React.createElement(Link, {\n    onClick: () => closeMobileNav(),\n    to: subMenuFirst.path,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 19\n    }\n  })))) : /*#__PURE__*/React.createElement(Menu.Item, {\n    key: menu.key,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 11\n    }\n  }, menu.icon ? /*#__PURE__*/React.createElement(Icon, {\n    type: menu === null || menu === void 0 ? void 0 : menu.icon,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 26\n    }\n  }) : null, /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 13\n    }\n  }, setLocale(localization, menu === null || menu === void 0 ? void 0 : menu.title)), menu.path ? /*#__PURE__*/React.createElement(Link, {\n    onClick: () => closeMobileNav(),\n    to: menu.path,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 26\n    }\n  }) : null)));\n};\n\nconst TopNavContent = props => {\n  const {\n    topNavColor,\n    localization\n  } = props;\n  return /*#__PURE__*/React.createElement(Menu, {\n    mode: \"horizontal\",\n    style: {\n      backgroundColor: topNavColor\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 5\n    }\n  }, navigationConfig.map(menu => menu.submenu.length > 0 ? /*#__PURE__*/React.createElement(SubMenu, {\n    key: menu.key,\n    popupClassName: \"top-nav-menu\",\n    title: /*#__PURE__*/React.createElement(\"span\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 15\n      }\n    }, menu.icon ? /*#__PURE__*/React.createElement(Icon, {\n      type: menu === null || menu === void 0 ? void 0 : menu.icon,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 30\n      }\n    }) : null, /*#__PURE__*/React.createElement(\"span\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 17\n      }\n    }, setLocale(localization, menu.title))),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 11\n    }\n  }, menu.submenu.map(subMenuFirst => subMenuFirst.submenu.length > 0 ? /*#__PURE__*/React.createElement(SubMenu, {\n    key: subMenuFirst.key,\n    icon: subMenuFirst.icon ? /*#__PURE__*/React.createElement(Icon, {\n      type: subMenuFirst === null || subMenuFirst === void 0 ? void 0 : subMenuFirst.icon,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 121,\n        columnNumber: 23\n      }\n    }) : null,\n    title: setLocale(localization, subMenuFirst.title),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 17\n    }\n  }, subMenuFirst.submenu.map(subMenuSecond => /*#__PURE__*/React.createElement(Menu.Item, {\n    key: subMenuSecond.key,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 127,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 128,\n      columnNumber: 23\n    }\n  }, setLocale(localization, subMenuSecond.title)), /*#__PURE__*/React.createElement(Link, {\n    to: subMenuSecond.path,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 131,\n      columnNumber: 23\n    }\n  })))) : /*#__PURE__*/React.createElement(Menu.Item, {\n    key: subMenuFirst.key,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 136,\n      columnNumber: 17\n    }\n  }, subMenuFirst.icon ? /*#__PURE__*/React.createElement(Icon, {\n    type: subMenuFirst === null || subMenuFirst === void 0 ? void 0 : subMenuFirst.icon,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 138,\n      columnNumber: 21\n    }\n  }) : null, /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 140,\n      columnNumber: 19\n    }\n  }, setLocale(localization, subMenuFirst.title)), /*#__PURE__*/React.createElement(Link, {\n    to: subMenuFirst.path,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 141,\n      columnNumber: 19\n    }\n  })))) : /*#__PURE__*/React.createElement(Menu.Item, {\n    key: menu.key,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 147,\n      columnNumber: 11\n    }\n  }, menu.icon ? /*#__PURE__*/React.createElement(Icon, {\n    type: menu === null || menu === void 0 ? void 0 : menu.icon,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 148,\n      columnNumber: 26\n    }\n  }) : null, /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 149,\n      columnNumber: 13\n    }\n  }, setLocale(localization, menu === null || menu === void 0 ? void 0 : menu.title)), menu.path ? /*#__PURE__*/React.createElement(Link, {\n    to: menu.path,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 150,\n      columnNumber: 26\n    }\n  }) : null)));\n};\n\nconst MenuContent = props => {\n  return props.type === NAV_TYPE_SIDE ? /*#__PURE__*/React.createElement(SideNavContent, Object.assign({}, props, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 160,\n      columnNumber: 5\n    }\n  })) : /*#__PURE__*/React.createElement(TopNavContent, Object.assign({}, props, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 162,\n      columnNumber: 5\n    }\n  }));\n};\n\nconst mapStateToProps = ({\n  theme\n}) => {\n  const {\n    sideNavTheme,\n    topNavColor\n  } = theme;\n  return {\n    sideNavTheme,\n    topNavColor\n  };\n};\n\nexport default connect(mapStateToProps, {\n  onMobileNavToggle\n})(MenuContent);","map":{"version":3,"sources":["/Users/dhruvaagrawal/Desktop/Work/Projects/Webdev.nosync/Twitter/app/src/components/layout-components/MenuContent.js"],"names":["React","Link","Menu","Grid","IntlMessage","Icon","navigationConfig","connect","SIDE_NAV_LIGHT","NAV_TYPE_SIDE","utils","onMobileNavToggle","SubMenu","useBreakpoint","setLocale","isLocaleOn","localeKey","toString","setDefaultOpen","key","keyList","keyString","arr","split","index","length","elm","push","SideNavContent","props","sideNavTheme","routeInfo","hideGroupTitle","localization","isMobile","getBreakPoint","includes","closeMobileNav","height","borderRight","map","menu","submenu","title","subMenuFirst","icon","subMenuSecond","path","TopNavContent","topNavColor","backgroundColor","MenuContent","type","mapStateToProps","theme"],"mappings":"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","sourcesContent":["import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { Menu, Grid } from \"antd\";\r\nimport IntlMessage from \"../util-components/IntlMessage\";\r\nimport Icon from \"../util-components/Icon\";\r\nimport navigationConfig from \"configs/NavigationConfig\";\r\nimport { connect } from \"react-redux\";\r\nimport { SIDE_NAV_LIGHT, NAV_TYPE_SIDE } from \"constants/ThemeConstant\";\r\nimport utils from 'utils'\r\nimport { onMobileNavToggle } from \"redux/actions/Theme\";\r\n\r\nconst { SubMenu } = Menu;\r\nconst { useBreakpoint } = Grid;\r\n\r\nconst setLocale = (isLocaleOn, localeKey) =>\r\n  isLocaleOn ? <IntlMessage id={localeKey} /> : localeKey.toString();\r\n\r\nconst setDefaultOpen = (key) => {\r\n  let keyList = [];\r\n  let keyString = \"\";\r\n  if (key) {\r\n    const arr = key.split(\"-\");\r\n    for (let index = 0; index < arr.length; index++) {\r\n      const elm = arr[index];\r\n      index === 0 ? (keyString = elm) : (keyString = `${keyString}-${elm}`);\r\n      keyList.push(keyString);\r\n    }\r\n  }\r\n  return keyList;\r\n};\r\n\r\nconst SideNavContent = (props) => {\r\n\tconst { sideNavTheme, routeInfo, hideGroupTitle, localization, onMobileNavToggle } = props;\r\n\tconst isMobile = !utils.getBreakPoint(useBreakpoint()).includes('lg')\r\n\tconst closeMobileNav = () => {\r\n\t\tif (isMobile) {\r\n\t\t\tonMobileNavToggle(false)\r\n\t\t}\r\n\t}\r\n  return (\r\n    <Menu\r\n      theme={sideNavTheme === SIDE_NAV_LIGHT ? \"light\" : \"dark\"}\r\n      mode=\"inline\"\r\n      style={{ height: \"100%\", borderRight: 0 }}\r\n      defaultSelectedKeys={[routeInfo?.key]}\r\n      defaultOpenKeys={setDefaultOpen(routeInfo?.key)}\r\n      className={hideGroupTitle ? \"hide-group-title\" : \"\"}\r\n    >\r\n      {navigationConfig.map((menu) =>\r\n        menu.submenu.length > 0 ? (\r\n          <Menu.ItemGroup\r\n            key={menu.key}\r\n            title={setLocale(localization, menu.title)}\r\n          >\r\n            {menu.submenu.map((subMenuFirst) =>\r\n              subMenuFirst.submenu.length > 0 ? (\r\n                <SubMenu\r\n                  icon={\r\n                    subMenuFirst.icon ? (\r\n                      <Icon type={subMenuFirst?.icon} />\r\n                    ) : null\r\n                  }\r\n                  key={subMenuFirst.key}\r\n                  title={setLocale(localization, subMenuFirst.title)}\r\n                >\r\n                  {subMenuFirst.submenu.map((subMenuSecond) => (\r\n                    <Menu.Item key={subMenuSecond.key}>\r\n                      {subMenuSecond.icon ? (\r\n                        <Icon type={subMenuSecond?.icon} />\r\n                      ) : null}\r\n                      <span>\r\n                        {setLocale(localization, subMenuSecond.title)}\r\n                      </span>\r\n                      <Link onClick={() => closeMobileNav()} to={subMenuSecond.path} />\r\n                    </Menu.Item>\r\n                  ))}\r\n                </SubMenu>\r\n              ) : (\r\n                <Menu.Item key={subMenuFirst.key}>\r\n                  {subMenuFirst.icon ? <Icon type={subMenuFirst.icon} /> : null}\r\n                  <span>{setLocale(localization, subMenuFirst.title)}</span>\r\n                  <Link onClick={() => closeMobileNav()} to={subMenuFirst.path} />\r\n                </Menu.Item>\r\n              )\r\n            )}\r\n          </Menu.ItemGroup>\r\n        ) : (\r\n          <Menu.Item key={menu.key}>\r\n            {menu.icon ? <Icon type={menu?.icon} /> : null}\r\n            <span>{setLocale(localization, menu?.title)}</span>\r\n            {menu.path ? <Link onClick={() => closeMobileNav()} to={menu.path} /> : null}\r\n          </Menu.Item>\r\n        )\r\n      )}\r\n    </Menu>\r\n  );\r\n};\r\n\r\nconst TopNavContent = (props) => {\r\n  const { topNavColor, localization } = props;\r\n  return (\r\n    <Menu mode=\"horizontal\" style={{ backgroundColor: topNavColor }}>\r\n      {navigationConfig.map((menu) =>\r\n        menu.submenu.length > 0 ? (\r\n          <SubMenu\r\n            key={menu.key}\r\n            popupClassName=\"top-nav-menu\"\r\n            title={\r\n              <span>\r\n                {menu.icon ? <Icon type={menu?.icon} /> : null}\r\n                <span>{setLocale(localization, menu.title)}</span>\r\n              </span>\r\n            }\r\n          >\r\n            {menu.submenu.map((subMenuFirst) =>\r\n              subMenuFirst.submenu.length > 0 ? (\r\n                <SubMenu\r\n                  key={subMenuFirst.key}\r\n                  icon={\r\n                    subMenuFirst.icon ? (\r\n                      <Icon type={subMenuFirst?.icon} />\r\n                    ) : null\r\n                  }\r\n                  title={setLocale(localization, subMenuFirst.title)}\r\n                >\r\n                  {subMenuFirst.submenu.map((subMenuSecond) => (\r\n                    <Menu.Item key={subMenuSecond.key}>\r\n                      <span>\r\n                        {setLocale(localization, subMenuSecond.title)}\r\n                      </span>\r\n                      <Link to={subMenuSecond.path} />\r\n                    </Menu.Item>\r\n                  ))}\r\n                </SubMenu>\r\n              ) : (\r\n                <Menu.Item key={subMenuFirst.key}>\r\n                  {subMenuFirst.icon ? (\r\n                    <Icon type={subMenuFirst?.icon} />\r\n                  ) : null}\r\n                  <span>{setLocale(localization, subMenuFirst.title)}</span>\r\n                  <Link to={subMenuFirst.path} />\r\n                </Menu.Item>\r\n              )\r\n            )}\r\n          </SubMenu>\r\n        ) : (\r\n          <Menu.Item key={menu.key}>\r\n            {menu.icon ? <Icon type={menu?.icon} /> : null}\r\n            <span>{setLocale(localization, menu?.title)}</span>\r\n            {menu.path ? <Link to={menu.path} /> : null}\r\n          </Menu.Item>\r\n        )\r\n      )}\r\n    </Menu>\r\n  );\r\n};\r\n\r\nconst MenuContent = (props) => {\r\n  return props.type === NAV_TYPE_SIDE ? (\r\n    <SideNavContent {...props} />\r\n  ) : (\r\n    <TopNavContent {...props} />\r\n  );\r\n};\r\n\r\nconst mapStateToProps = ({ theme }) => {\r\n  const { sideNavTheme, topNavColor } = theme;\r\n  return { sideNavTheme, topNavColor };\r\n};\r\n\r\nexport default connect(mapStateToProps, { onMobileNavToggle })(MenuContent);\r\n"]},"metadata":{},"sourceType":"module"}