{"ast":null,"code":"var _jsxFileName = \"/Users/dhruvaagrawal/Desktop/Work/Spocto/CMS/app/src/views/app-views/journeys/journey-ivr/campaignAssignment/index.js\";\nimport React, { useEffect, useState } from 'react';\nimport { Card, Tag, Table, Form, Select, Button, Checkbox, Row, Col, Typography, Input } from 'antd';\nimport { CloseCircleOutlined, PlusCircleOutlined, DownCircleOutlined, SearchOutlined } from '@ant-design/icons';\nimport Flex from 'components/shared-components/Flex';\nimport AvatarStatus from 'components/shared-components/AvatarStatus';\nimport agentData from \"assets/data/agent-list.data.json\";\nimport { DataGrid } from '@material-ui/data-grid';\nimport utils from 'utils';\nconst {\n  Title\n} = Typography;\nconst {\n  Option\n} = Select;\nconst {\n  TextArea\n} = Input;\nconst AGENT_ASSIGNED_API_URL = 'http://dev2.spoctocular.com/test_api/public/api/agent_assignedlist';\nconst CAMPAIGNS_API_URL = 'http://dev2.spoctocular.com/test_api/public/api/campaigns';\nconst AGENT_DETAILS_API_URL = 'http://dev2.spoctocular.com/test_api/public/api/agentdetails';\n\nfunction CampaignAssigment(props) {\n  const [camps, setCamps] = useState([]);\n  const [agents, setAgents] = useState([]);\n  const [details, setDetails] = useState([]);\n  const [objLabel, setLabel] = useState();\n  const [visible, setVisible] = useState(false);\n  const [checked, setChecked] = useState(false);\n  const checkedLanguages = [];\n  useEffect(() => {\n    fetchAPI_Campaigns(CAMPAIGNS_API_URL);\n    fetchAPI_Agents_Assigned(AGENT_ASSIGNED_API_URL);\n  }, []);\n  const formItemLayout = {\n    labelCol: {\n      span: 6\n    },\n    wrapperCol: {\n      span: 14\n    }\n  };\n  const dataSource = [{\n    key: '1',\n    name: 'Puja Srivastava',\n    agent_id: 1,\n    campaign_id: 32,\n    language: 'English, Hindi,'\n  }, {\n    key: '2',\n    name: 'Dhruva Agrawal',\n    agent_id: 2,\n    campaign_id: 4,\n    language: 'English, Hindi, Tamil, Telugu, Gujarati'\n  }, {\n    key: '3',\n    name: 'Sourabh Choudhary',\n    agent_id: 3,\n    campaign_id: 23,\n    language: 'English'\n  }, {\n    key: '4',\n    name: 'Aaina Khan',\n    agent_id: 4,\n    campaign_id: 32,\n    language: 'Hindi, Tamil'\n  }];\n  const columns = [{\n    title: 'ID',\n    key: 'id',\n    dataIndex: 'id'\n  }, {\n    title: 'User',\n    key: 'name',\n    dataIndex: 'name',\n    render: (_, record) => /*#__PURE__*/React.createElement(\"div\", {\n      className: \"d-flex\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 5\n      }\n    }, /*#__PURE__*/React.createElement(AvatarStatus, {\n      key: record.id,\n      src: record.img,\n      name: record.name,\n      subTitle: record.name.toLowerCase().split(' ').join('') + \"@spocto.com\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 6\n      }\n    })),\n    sorter: {\n      compare: (a, b) => {\n        a = a.name.toLowerCase();\n        b = b.name.toLowerCase();\n        return a > b ? -1 : b > a ? 1 : 0;\n      }\n    },\n    editable: true\n  }, {\n    title: 'Languages',\n    key: 'language',\n    dataIndex: 'language',\n    render: num => /*#__PURE__*/React.createElement(Tag, {\n      color: 'red',\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 17\n      }\n    }, num),\n    sorter: {\n      compare: (a, b) => a.activeChats.length - b.activeChats.length\n    }\n  }];\n\n  function fetchAPI_Campaigns(url) {\n    fetch(url).then(response => response.json()).then(res => setCamps(res.campaigns));\n  }\n\n  function fetchAPI_Agents_Assigned(url) {\n    fetch(url).then(response => response.json()).then(res => setAgents(res.agentassigned));\n  }\n\n  function loadServerRows() {\n    new Promise((resolve, reject) => {\n      fetch(AGENT_DETAILS_API_URL).then(response => response.json()).then(res => res.agentdetails).then(data => {\n        console.log(data); // resolve({\n        //     rows: data\n        // });\n        // resolve({\n        //     rows: data.map((row) => ({ key: row.id, ...row }))\n        // });\n      }).catch(error => reject(error));\n    });\n  }\n\n  const onCheck = event => {\n    checkedLanguages.push(event.target.value);\n  };\n\n  const renderCampaignName = () => {\n    return /*#__PURE__*/React.createElement(React.Fragment, null, camps.map(name => /*#__PURE__*/React.createElement(Option, {\n      value: name.id,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 149,\n        columnNumber: 21\n      }\n    }, name.name)));\n  }; // const renderCampaignId = () => {\n  //     return (\n  //         <>\n  //             {camps.map( name => {\n  //                 name.name === 'Demo - DEBT Collect' ? <Tag color=\"red\">20</Tag> :\n  //                 name.name === 'Demo - Payment Reminder' ? <Tag color=\"red\">21</Tag> :\n  //                 name.name === 'Demo - Legal Reminder' ? <Tag color=\"red\">22</Tag> :\n  //                 <Tag color=\"red\">32</Tag>\n  //             })}\n  //         </>   \n  //     )\n  // }\n\n\n  const selectCampaignOption = value => {\n    console.log(`${value.label} has been selected`);\n    setVisible(true);\n    setLabel(value.label); // const { rows } = async () => await loadServerRows()\n    // console.log(rows)\n    // setDetails(rows)\n  };\n\n  const renderLanguages = () => {\n    const languages = ['English', 'Hindi', 'Tamil', 'Telugu', 'Kannada', 'Marathi', 'Gujarati', 'Bengali', 'Punjabi', 'Malayalam'];\n    return /*#__PURE__*/React.createElement(React.Fragment, null, languages.map(language => /*#__PURE__*/React.createElement(Col, {\n      span: 6,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 184,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(Checkbox, {\n      value: language,\n      style: {\n        lineHeight: '32px'\n      },\n      onChange: onCheck,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 185,\n        columnNumber: 25\n      }\n    }, language))));\n  };\n\n  const handleSubmit = () => {\n    console.log('Button clicked');\n    const data = {\n      campaign_id: 4,\n      agent_id: 2\n    };\n  };\n\n  const onFinish = values => {\n    console.log('Received values of form: ', values);\n  };\n\n  return /*#__PURE__*/React.createElement(Card, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 202,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Title, {\n    style: {\n      textAlign: 'center',\n      fontSize: '2rem',\n      marginTop: '2%',\n      marginBottom: '4%'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 203,\n      columnNumber: 13\n    }\n  }, \"Campaign Assignment\"), /*#__PURE__*/React.createElement(Form, Object.assign({\n    name: \"validate_other\"\n  }, formItemLayout, {\n    onFinish: onFinish,\n    textAlign: \"center\",\n    initialValues: {\n      rate: 3.5\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 204,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(Form.Item, {\n    style: {\n      margin: '0',\n      position: 'absolute',\n      left: '50%',\n      transform: 'translateX(-50%)'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 211,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Flex, {\n    mobileFlex: false,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 212,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"mb-3 mr-3\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 213,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    type: \"primary\",\n    onClick: () => props.history.push(\"/app/home\"),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 214,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    style: {\n      marginRight: '0.5rem'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 214,\n      columnNumber: 100\n    }\n  }, /*#__PURE__*/React.createElement(CloseCircleOutlined, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 214,\n      columnNumber: 140\n    }\n  })), \"Close\")))), /*#__PURE__*/React.createElement(Form.Item, {\n    name: \"select\",\n    label: \"Campaign Name\",\n    hasFeedback: true,\n    rules: [{\n      required: true,\n      message: 'Please select a campaign name'\n    }],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 218,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Select, {\n    labelInValue: true,\n    placeholder: \"Please select a campaign name\",\n    onChange: selectCampaignOption,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 224,\n      columnNumber: 21\n    }\n  }, renderCampaignName())), visible && /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Form.Item, {\n    name: \"language\",\n    label: \"Language\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 233,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(Checkbox.Group, {\n    className: \"pl-3\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 234,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(Row, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 235,\n      columnNumber: 33\n    }\n  }, renderLanguages()))), /*#__PURE__*/React.createElement(Table, {\n    dataSource: dataSource,\n    columns: columns,\n    rowSelection: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 240,\n      columnNumber: 25\n    }\n  }), /*#__PURE__*/React.createElement(Form.Item, {\n    style: {\n      display: 'flex',\n      justifyContent: 'center',\n      alignItems: 'center'\n    },\n    className: \"mt-5\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 245,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    variant: \"contained\",\n    type: \"primary\",\n    onClick: handleSubmit,\n    style: {\n      width: '100%',\n      height: '3rem',\n      fontSize: '1.25rem'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 246,\n      columnNumber: 29\n    }\n  }, \"Submit\")))));\n}\n\nexport default CampaignAssigment;","map":{"version":3,"sources":["/Users/dhruvaagrawal/Desktop/Work/Spocto/CMS/app/src/views/app-views/journeys/journey-ivr/campaignAssignment/index.js"],"names":["React","useEffect","useState","Card","Tag","Table","Form","Select","Button","Checkbox","Row","Col","Typography","Input","CloseCircleOutlined","PlusCircleOutlined","DownCircleOutlined","SearchOutlined","Flex","AvatarStatus","agentData","DataGrid","utils","Title","Option","TextArea","AGENT_ASSIGNED_API_URL","CAMPAIGNS_API_URL","AGENT_DETAILS_API_URL","CampaignAssigment","props","camps","setCamps","agents","setAgents","details","setDetails","objLabel","setLabel","visible","setVisible","checked","setChecked","checkedLanguages","fetchAPI_Campaigns","fetchAPI_Agents_Assigned","formItemLayout","labelCol","span","wrapperCol","dataSource","key","name","agent_id","campaign_id","language","columns","title","dataIndex","render","_","record","id","img","toLowerCase","split","join","sorter","compare","a","b","editable","num","activeChats","length","url","fetch","then","response","json","res","campaigns","agentassigned","loadServerRows","Promise","resolve","reject","agentdetails","data","console","log","catch","error","onCheck","event","push","target","value","renderCampaignName","map","selectCampaignOption","label","renderLanguages","languages","lineHeight","handleSubmit","onFinish","values","textAlign","fontSize","marginTop","marginBottom","rate","margin","position","left","transform","history","marginRight","required","message","display","justifyContent","alignItems","width","height"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from 'react'\nimport { Card, Tag, Table, Form, Select, Button, Checkbox, Row, Col, Typography, Input } from 'antd';\nimport { CloseCircleOutlined, PlusCircleOutlined, DownCircleOutlined, SearchOutlined } from '@ant-design/icons'\nimport Flex from 'components/shared-components/Flex'\nimport AvatarStatus from 'components/shared-components/AvatarStatus';\nimport agentData from \"assets/data/agent-list.data.json\";\nimport { DataGrid } from '@material-ui/data-grid'\nimport utils from 'utils'\n\nconst { Title } = Typography;\nconst { Option } = Select;\nconst { TextArea } = Input\n\nconst AGENT_ASSIGNED_API_URL = 'http://dev2.spoctocular.com/test_api/public/api/agent_assignedlist'\nconst CAMPAIGNS_API_URL = 'http://dev2.spoctocular.com/test_api/public/api/campaigns'\nconst AGENT_DETAILS_API_URL = 'http://dev2.spoctocular.com/test_api/public/api/agentdetails'\n\nfunction CampaignAssigment(props) {\n\n    const[ camps, setCamps ] = useState([])\n    const[ agents, setAgents ] = useState([])\n    const[ details, setDetails ] = useState([])\n    const [ objLabel, setLabel ] = useState()\n    const [ visible, setVisible ] = useState(false)\n    const [ checked, setChecked ] = useState(false)\n    const checkedLanguages = []\n\n    useEffect(() => {\n        fetchAPI_Campaigns(CAMPAIGNS_API_URL)\n        fetchAPI_Agents_Assigned(AGENT_ASSIGNED_API_URL)\n    }, [])\n\n    const formItemLayout = {\n        labelCol: {\n            span: 6,\n        },\n        wrapperCol: {\n            span: 14,\n        },\n    };\n\n    const dataSource = [\n        {\n            key: '1',\n            name: 'Puja Srivastava',\n            agent_id: 1,\n            campaign_id: 32,\n            language: 'English, Hindi,'\n        },\n        {\n            key: '2',\n            name: 'Dhruva Agrawal',\n            agent_id: 2,\n            campaign_id: 4,\n            language: 'English, Hindi, Tamil, Telugu, Gujarati'\n        },\n        {\n            key: '3',\n            name: 'Sourabh Choudhary',\n            agent_id: 3,\n            campaign_id: 23,\n            language: 'English'\n        },\n        {\n            key: '4',\n            name: 'Aaina Khan',\n            agent_id: 4,\n            campaign_id: 32,\n            language: 'Hindi, Tamil'\n        }\n    ];\n\n    const columns = [\n        {\n            title: 'ID',\n            key: 'id',\n\t\t\tdataIndex: 'id',\n\t\t},\n\t\t{\n            title: 'User',\n            key: 'name',\n\t\t\tdataIndex: 'name',\n\t\t\trender: (_, record) => (\n\t\t\t\t<div className=\"d-flex\">\n\t\t\t\t\t<AvatarStatus  key={record.id} src={record.img} name={record.name} subTitle={record.name.toLowerCase().split(' ').join('') + \"@spocto.com\"}/>\n\t\t\t\t</div>\n\t\t\t),\n\t\t\tsorter: {\n\t\t\t\tcompare: (a, b) => {\n\t\t\t\t\ta = a.name.toLowerCase();\n\t\t\t\t\tb = b.name.toLowerCase();\n\t\t\t\t\treturn a > b ? -1 : b > a ? 1 : 0;\n\t\t\t\t},\n\t\t\t},\n\t\t\teditable: true\n        },\n        {\n            title: 'Languages',\n            key: 'language',\n\t\t\tdataIndex: 'language',\n\t\t\trender: num => (\n                <Tag color={'red'}>{ num }</Tag>\n\t\t\t),\n            sorter: {\n\t\t\t\tcompare: (a, b) => a.activeChats.length - b.activeChats.length,\n\t\t\t}\n\t\t},\n    ]\n    \n    function fetchAPI_Campaigns(url) {\n        fetch(url)\n            .then( response => response.json() )\n            .then( res => setCamps(res.campaigns))\n    }\n\n    function fetchAPI_Agents_Assigned(url) {\n        fetch(url)\n            .then( response => response.json() )\n            .then( res => setAgents(res.agentassigned))\n    }\n\n    function loadServerRows() {\n        new Promise((resolve, reject) => {\n            fetch(AGENT_DETAILS_API_URL)\n            .then( response => response.json() )\n            .then( res => res.agentdetails )\n            .then(data => {\n                console.log(data)\n                // resolve({\n                //     rows: data\n                // });\n                // resolve({\n                //     rows: data.map((row) => ({ key: row.id, ...row }))\n                // });\n            })\n            .catch((error) => reject(error));\n        });\n    }\n\n    const onCheck = event => {\n        checkedLanguages.push(event.target.value)\n    }\n    \n    const renderCampaignName = () => {\n\n        return (\n            <>\n                {camps.map( name => (\n                    <Option value={ name.id }>{ name.name }</Option>\n                ))}  \n            </>   \n        )\n    }\n\n    // const renderCampaignId = () => {\n\n    //     return (\n    //         <>\n    //             {camps.map( name => {\n    //                 name.name === 'Demo - DEBT Collect' ? <Tag color=\"red\">20</Tag> :\n    //                 name.name === 'Demo - Payment Reminder' ? <Tag color=\"red\">21</Tag> :\n    //                 name.name === 'Demo - Legal Reminder' ? <Tag color=\"red\">22</Tag> :\n    //                 <Tag color=\"red\">32</Tag>\n    //             })}\n    //         </>   \n    //     )\n    // }\n\n    const selectCampaignOption = value => {\n        console.log(`${value.label} has been selected`)\n        setVisible(true)\n        setLabel(value.label)\n        // const { rows } = async () => await loadServerRows()\n        // console.log(rows)\n        // setDetails(rows)\n    }\n\n    const renderLanguages = () => {\n        const languages = ['English', 'Hindi', 'Tamil', 'Telugu', 'Kannada', 'Marathi', 'Gujarati', 'Bengali', 'Punjabi', 'Malayalam']\n\n        return (\n            <>\n                {languages.map( language => (\n                    <Col span={6}>\n                        <Checkbox value={ language } style={{ lineHeight: '32px' }} onChange={ onCheck }>{ language }</Checkbox>\n                    </Col>\n                ))}\n            </>\n        )\n    }\n    \n    const handleSubmit = () => {\n        console.log('Button clicked')\n        const data = { campaign_id: 4 , agent_id: 2 }\n    }\n\n    const onFinish = (values) => {\n        console.log('Received values of form: ', values);\n    };\n\n    return (\n        <Card>\n            <Title style={{ textAlign: 'center', fontSize: '2rem', marginTop: '2%', marginBottom: '4%' }}>Campaign Assignment</Title>\n            <Form\n                name=\"validate_other\"\n                {...formItemLayout}\n                onFinish={onFinish}\n                textAlign=\"center\"\n                initialValues={{ rate: 3.5 }}\n            >\n                <Form.Item style={{ margin: '0', position: 'absolute', left: '50%', transform: 'translateX(-50%)' }}>\n                    <Flex mobileFlex={false}>\n                        <div className=\"mb-3 mr-3\">\n                            <Button type=\"primary\" onClick={() => props.history.push(\"/app/home\")}><span style={{ marginRight: '0.5rem' }}><CloseCircleOutlined /></span>Close</Button>\n                        </div>\n                    </Flex>\n                </Form.Item>\n                <Form.Item\n                    name=\"select\"\n                    label=\"Campaign Name\"\n                    hasFeedback\n                    rules={[{ required: true, message: 'Please select a campaign name' }]}\n                >\n                    <Select labelInValue placeholder=\"Please select a campaign name\" onChange={ selectCampaignOption }>\n                        { renderCampaignName() }\n                    </Select>\n                </Form.Item>\n                { visible && \n                    <>  \n                        {/* <Form.Item name=\"tag\" label=\"Campaign ID\" hasFeedback>\n                            { renderCampaignId() }\n                        </Form.Item> */}\n                        <Form.Item name=\"language\" label=\"Language\">\n                            <Checkbox.Group className=\"pl-3\">\n                                <Row>\n                                    { renderLanguages() }\n                                </Row>\n                            </Checkbox.Group>\n                        </Form.Item>\n                        <Table\n                            dataSource={dataSource}\n                            columns={columns}\n                            rowSelection\n                        />\n                        <Form.Item style={{display: 'flex', justifyContent: 'center', alignItems: 'center'}} className=\"mt-5\">\n                            <Button variant=\"contained\" type=\"primary\" onClick={ handleSubmit } style={{ width: '100%', height: '3rem', fontSize: '1.25rem' }}>Submit</Button>\n                        </Form.Item>\n                    </>\n                }\n                {/* { console.log(checkedLanguages) }\n                { console.log(details) } */}\n            </Form>\n        </Card>\n    )\n}\n\nexport default CampaignAssigment"]},"metadata":{},"sourceType":"module"}