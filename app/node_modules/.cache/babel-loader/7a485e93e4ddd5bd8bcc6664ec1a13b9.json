{"ast":null,"code":"module.exports = loadPrefix;\n\nvar findPrefix = require('find-npm-prefix');\n\nvar path = require('path');\n\nfunction loadPrefix(cb) {\n  var cli = this.list[0];\n  Object.defineProperty(this, 'prefix', {\n    set: function (prefix) {\n      var g = this.get('global');\n      this[g ? 'globalPrefix' : 'localPrefix'] = prefix;\n    }.bind(this),\n    get: function () {\n      var g = this.get('global');\n      return g ? this.globalPrefix : this.localPrefix;\n    }.bind(this),\n    enumerable: true\n  });\n  Object.defineProperty(this, 'globalPrefix', {\n    set: function (prefix) {\n      this.set('prefix', prefix);\n    }.bind(this),\n    get: function () {\n      return path.resolve(this.get('prefix'));\n    }.bind(this),\n    enumerable: true\n  });\n  var p;\n  Object.defineProperty(this, 'localPrefix', {\n    set: function (prefix) {\n      p = prefix;\n    },\n    get: function () {\n      return p;\n    },\n    enumerable: true\n  }); // try to guess at a good node_modules location.\n  // If we are *explicitly* given a prefix on the cli, then\n  // always use that.  otherwise, infer local prefix from cwd.\n\n  if (Object.prototype.hasOwnProperty.call(cli, 'prefix')) {\n    p = path.resolve(cli.prefix);\n    process.nextTick(cb);\n  } else {\n    findPrefix(process.cwd()).then(found => {\n      p = found;\n      cb();\n    }, cb);\n  }\n}","map":null,"metadata":{},"sourceType":"script"}