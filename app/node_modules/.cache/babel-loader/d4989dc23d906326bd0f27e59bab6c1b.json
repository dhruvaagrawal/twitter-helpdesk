{"ast":null,"code":"var _jsxFileName = \"/Users/dhruvaagrawal/Desktop/Work/Spocto/CMS/app/src/views/app-views/ops-admin/UploadTransactions.js\";\nimport React, { useState } from 'react';\nimport { useHistory } from 'react-router';\nimport { InboxOutlined } from '@ant-design/icons';\nimport { Form, Button, Upload, Typography, message } from 'antd';\nimport FileMapping from 'assets/functions/FileMapping';\nconst {\n  Title\n} = Typography;\nconst {\n  Dragger\n} = Upload;\nconst formItemLayout = {\n  labelCol: {\n    span: 6\n  },\n  wrapperCol: {\n    span: 14\n  }\n};\n\nconst normFile = event => {\n  // return new Promise( (resolve, reject) => {\n  //     const reader = new FileReader()\n  //     // reader.readAsText(file)\n  //     // reader.readAsBinaryString(file)\n  //     reader.onload = () => resolve(reader.readAsArrayBuffer(file))\n  //     reader.onerror = error => reject(error)\n  // })\n  let input = event.target.files[0];\n  const reader = new FileReader();\n\n  reader.onload = function (e) {\n    console.log(e.target.result);\n  };\n\n  reader.readAsBinaryString(input);\n};\n\nconst UploadTransactions = props => {\n  const {\n    push\n  } = useHistory();\n\n  const onFinish = values => {\n    console.log('Received values of form: ', values);\n  };\n\n  return /*#__PURE__*/React.createElement(Form, Object.assign({\n    name: \"validate_other\"\n  }, formItemLayout, {\n    onFinish: onFinish,\n    initialValues: {\n      rate: 3.5\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(Form.Item, {\n    justify: \"center\",\n    style: {\n      textAlign: 'center',\n      marginTop: '1%'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Title, {\n    level: 1,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 17\n    }\n  }, \"Upload Transactions\")), /*#__PURE__*/React.createElement(Form.Item, {\n    justify: \"center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    type: \"file\",\n    accept: \".csv, .xlsx\",\n    onChange: normFile,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 17\n    }\n  })), /*#__PURE__*/React.createElement(Form.Item, {\n    style: {\n      display: 'flex',\n      justifyContent: 'center',\n      alignItems: 'center'\n    },\n    className: \"mt-5\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    onClick: () => push(\"app/journeys/dashboard\"),\n    variant: \"contained\",\n    type: \"primary\",\n    style: {\n      width: '100%',\n      height: '3rem',\n      fontSize: '1.25rem'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 17\n    }\n  }, \"Create Transactions\")));\n};\n\nexport default UploadTransactions;","map":{"version":3,"sources":["/Users/dhruvaagrawal/Desktop/Work/Spocto/CMS/app/src/views/app-views/ops-admin/UploadTransactions.js"],"names":["React","useState","useHistory","InboxOutlined","Form","Button","Upload","Typography","message","FileMapping","Title","Dragger","formItemLayout","labelCol","span","wrapperCol","normFile","event","input","target","files","reader","FileReader","onload","e","console","log","result","readAsBinaryString","UploadTransactions","props","push","onFinish","values","rate","textAlign","marginTop","display","justifyContent","alignItems","width","height","fontSize"],"mappings":"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","sourcesContent":["import React, { useState } from 'react'\nimport { useHistory } from 'react-router'\nimport { InboxOutlined } from '@ant-design/icons';\nimport { Form, Button, Upload, Typography, message } from 'antd';\nimport FileMapping from 'assets/functions/FileMapping'\n\nconst { Title } = Typography\nconst { Dragger } = Upload\n\nconst formItemLayout = {\n    labelCol: {\n        span: 6,\n    },\n    wrapperCol: {\n        span: 14,\n    },\n};\n\nconst normFile = event => {\n    // return new Promise( (resolve, reject) => {\n    //     const reader = new FileReader()\n    //     // reader.readAsText(file)\n    //     // reader.readAsBinaryString(file)\n    //     reader.onload = () => resolve(reader.readAsArrayBuffer(file))\n    //     reader.onerror = error => reject(error)\n    // })\n    let input = event.target.files[0]\n    const reader = new FileReader()\n    reader.onload = function(e) {\n        console.log(e.target.result)\n    }\n    reader.readAsBinaryString(input)\n};\n  \nconst UploadTransactions = props => {\n\n    const { push } = useHistory()\n\n    const onFinish = (values) => {\n        console.log('Received values of form: ', values);\n    }\n\n    return (\n        <Form\n            name=\"validate_other\"\n            {...formItemLayout}\n            onFinish={onFinish}\n            initialValues={{ rate: 3.5 }}\n        >\n            <Form.Item justify=\"center\" style={{ textAlign: 'center', marginTop: '1%' }}>\n                <Title level={1}>Upload Transactions</Title>\n            </Form.Item>\n            <Form.Item justify=\"center\">\n                <input type=\"file\" accept=\".csv, .xlsx\" onChange={ normFile } />\n                {/* <Form.Item name=\"fileUpload\" valuePropName=\"fileList\" getValueFromEvent={ normFile } noStyle>\n                    <Dragger>\n                        <p className=\"ant-upload-drag-icon\">\n                            <InboxOutlined />\n                        </p>\n                        <p className=\"ant-upload-text\">Click or drag file to this area to upload</p>\n                        <p className=\"ant-upload-hint\">Support for single and bulk upload.</p>\n                    </Dragger>\n                </Form.Item> */}\n            </Form.Item>\n            <Form.Item style={{display: 'flex', justifyContent: 'center', alignItems: 'center'}} className=\"mt-5\">\n                <Button onClick={ () => push(\"app/journeys/dashboard\")} variant=\"contained\" type=\"primary\" style={{ width: '100%', height: '3rem', fontSize: '1.25rem' }}>Create Transactions</Button>\n            </Form.Item>\n      </Form>\n    );\n};  \n\nexport default UploadTransactions"]},"metadata":{},"sourceType":"module"}