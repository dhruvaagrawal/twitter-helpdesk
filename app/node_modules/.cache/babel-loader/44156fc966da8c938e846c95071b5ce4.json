{"ast":null,"code":"var _jsxFileName = \"/Users/dhruvaagrawal/Desktop/Work/Spocto/CMS/app/src/views/app-views/journeys/dashboard/index.js\";\nimport React, { useState } from \"react\";\nimport { Row, Col, Card, Avatar, Dropdown, Table, Menu, Tag, Badge, Typography } from 'antd';\nimport Flex from 'components/shared-components/Flex';\nimport StatisticWidget from 'components/shared-components/StatisticWidget';\nimport AvatarStatus from 'components/shared-components/AvatarStatus';\nimport PieChart from 'components/shared-components/PieChart';\nimport NumberFormat from 'react-number-format';\nimport moment from 'moment';\nimport { DATE_FORMAT_DD_MM_YYYY } from 'constants/DateConstant';\nimport utils from 'utils';\nimport { AnnualStatisticData, RecentTransactionData } from './DefaultDashboardData';\nimport { sessionData, sessionLabels, combinedSessionData, sessionColor, recentOrderData } from './SalesDashboardData.js';\nimport { FileExcelOutlined, PrinterOutlined, EllipsisOutlined, ReloadOutlined } from '@ant-design/icons';\nimport { withRouter } from 'react-router-dom';\nconst {\n  Title\n} = Typography;\n\nconst getPaymentStatus = status => {\n  if (status === 'Paid') {\n    return 'success';\n  }\n\n  if (status === 'Pending') {\n    return 'warning';\n  }\n\n  if (status === 'Expired') {\n    return 'error';\n  }\n\n  return '';\n};\n\nconst getShippingStatus = status => {\n  if (status === 'Ready') {\n    return 'blue';\n  }\n\n  if (status === 'Shipped') {\n    return 'cyan';\n  }\n\n  return '';\n};\n\nconst SalesByCategory = () => /*#__PURE__*/React.createElement(Card, {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 43,\n    columnNumber: 2\n  }\n}, /*#__PURE__*/React.createElement(Title, {\n  level: 3,\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 44,\n    columnNumber: 2\n  }\n}, \"IVR Progress\"), /*#__PURE__*/React.createElement(PieChart, {\n  series: sessionData,\n  labels: sessionLabels,\n  customOptions: {\n    colors: sessionColor\n  },\n  extra: /*#__PURE__*/React.createElement(Row, {\n    justify: \"center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 4\n    }\n  }, /*#__PURE__*/React.createElement(Col, {\n    xs: 20,\n    sm: 20,\n    md: 20,\n    lg: 24,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"mt-4 mx-auto\",\n    style: {\n      maxWidth: 200\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 6\n    }\n  }, combinedSessionData.map(elm => /*#__PURE__*/React.createElement(Flex, {\n    alignItems: \"center\",\n    justifyContent: \"between\",\n    className: \"mb-3\",\n    key: elm.label,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 8\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Badge, {\n    color: elm.color,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 10\n    }\n  }), /*#__PURE__*/React.createElement(\"span\", {\n    className: \"text-gray-light\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 10\n    }\n  }, elm.label)), /*#__PURE__*/React.createElement(\"span\", {\n    className: \"font-weight-bold text-dark\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 9\n    }\n  }, elm.data)))))),\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 45,\n    columnNumber: 2\n  }\n}));\n\nconst tableColumns = [{\n  title: 'ID',\n  dataIndex: 'id'\n}, {\n  title: 'Product',\n  dataIndex: 'name',\n  render: (_, record) => /*#__PURE__*/React.createElement(Flex, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 4\n    }\n  }, /*#__PURE__*/React.createElement(AvatarStatus, {\n    size: 30,\n    src: record.image,\n    name: record.name,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 5\n    }\n  })),\n  sorter: (a, b) => utils.antdTableSorter(a, b, 'name')\n}, {\n  title: 'Date',\n  dataIndex: 'date',\n  render: (_, record) => /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 4\n    }\n  }, moment.unix(record.date).format(DATE_FORMAT_DD_MM_YYYY)),\n  sorter: (a, b) => utils.antdTableSorter(a, b, 'date')\n}, {\n  title: 'Order status',\n  dataIndex: 'orderStatus',\n  render: (_, record) => /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Tag, {\n    color: getShippingStatus(record.orderStatus),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 6\n    }\n  }, record.orderStatus)),\n  sorter: (a, b) => utils.antdTableSorter(a, b, 'orderStatus')\n}, {\n  title: 'Payment status',\n  dataIndex: 'paymentStatus',\n  render: (_, record) => /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Badge, {\n    status: getPaymentStatus(record.paymentStatus),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 6\n    }\n  }), /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 63\n    }\n  }, record.paymentStatus)),\n  sorter: (a, b) => utils.antdTableSorter(a, b, 'paymentStatus')\n}, {\n  title: 'Total',\n  dataIndex: 'amount',\n  render: (_, record) => /*#__PURE__*/React.createElement(\"span\", {\n    className: \"font-weight-semibold\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 4\n    }\n  }, /*#__PURE__*/React.createElement(NumberFormat, {\n    displayType: 'text',\n    value: (Math.round(record.amount * 100) / 100).toFixed(2),\n    prefix: '$',\n    thousandSeparator: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 5\n    }\n  })),\n  sorter: (a, b) => utils.antdTableSorter(a, b, 'amount')\n}];\n\nconst RecentOrder = () => /*#__PURE__*/React.createElement(Card, {\n  title: \"Recent Order\",\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 127,\n    columnNumber: 2\n  }\n}, /*#__PURE__*/React.createElement(Table, {\n  pagination: false,\n  columns: tableColumns,\n  dataSource: recentOrderData,\n  rowKey: \"id\",\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 128,\n    columnNumber: 3\n  }\n}));\n\nconst latestTransactionOption = /*#__PURE__*/React.createElement(Menu, {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 137,\n    columnNumber: 2\n  }\n}, /*#__PURE__*/React.createElement(Menu.Item, {\n  key: \"0\",\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 138,\n    columnNumber: 4\n  }\n}, /*#__PURE__*/React.createElement(\"span\", {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 139,\n    columnNumber: 3\n  }\n}, /*#__PURE__*/React.createElement(\"div\", {\n  className: \"d-flex align-items-center\",\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 140,\n    columnNumber: 5\n  }\n}, /*#__PURE__*/React.createElement(ReloadOutlined, {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 141,\n    columnNumber: 4\n  }\n}), /*#__PURE__*/React.createElement(\"span\", {\n  className: \"ml-2\",\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 142,\n    columnNumber: 4\n  }\n}, \"Refresh\")))), /*#__PURE__*/React.createElement(Menu.Item, {\n  key: \"1\",\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 146,\n    columnNumber: 4\n  }\n}, /*#__PURE__*/React.createElement(\"span\", {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 147,\n    columnNumber: 3\n  }\n}, /*#__PURE__*/React.createElement(\"div\", {\n  className: \"d-flex align-items-center\",\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 148,\n    columnNumber: 5\n  }\n}, /*#__PURE__*/React.createElement(PrinterOutlined, {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 149,\n    columnNumber: 4\n  }\n}), /*#__PURE__*/React.createElement(\"span\", {\n  className: \"ml-2\",\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 150,\n    columnNumber: 4\n  }\n}, \"Print\")))), /*#__PURE__*/React.createElement(Menu.Item, {\n  key: \"12\",\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 154,\n    columnNumber: 4\n  }\n}, /*#__PURE__*/React.createElement(\"span\", {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 155,\n    columnNumber: 3\n  }\n}, /*#__PURE__*/React.createElement(\"div\", {\n  className: \"d-flex align-items-center\",\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 156,\n    columnNumber: 5\n  }\n}, /*#__PURE__*/React.createElement(FileExcelOutlined, {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 157,\n    columnNumber: 4\n  }\n}), /*#__PURE__*/React.createElement(\"span\", {\n  className: \"ml-2\",\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 158,\n    columnNumber: 4\n  }\n}, \"Export\")))));\n\nconst cardDropdown = menu => /*#__PURE__*/React.createElement(Dropdown, {\n  overlay: menu,\n  trigger: ['click'],\n  placement: \"bottomRight\",\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 166,\n    columnNumber: 2\n  }\n}, /*#__PURE__*/React.createElement(\"a\", {\n  href: \"/#\",\n  className: \"text-gray font-size-lg\",\n  onClick: e => e.preventDefault(),\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 167,\n    columnNumber: 4\n  }\n}, /*#__PURE__*/React.createElement(EllipsisOutlined, {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 168,\n    columnNumber: 3\n  }\n})));\n\nconst tableColumns_1 = [{\n  title: 'Customer',\n  dataIndex: 'name',\n  key: 'name',\n  render: (text, record) => /*#__PURE__*/React.createElement(\"div\", {\n    className: \"d-flex align-items-center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 179,\n      columnNumber: 3\n    }\n  }, /*#__PURE__*/React.createElement(Avatar, {\n    size: 30,\n    className: \"font-size-sm\",\n    style: {\n      backgroundColor: record.avatarColor\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 180,\n      columnNumber: 5\n    }\n  }, utils.getNameInitial(text)), /*#__PURE__*/React.createElement(\"span\", {\n    className: \"ml-2\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 183,\n      columnNumber: 5\n    }\n  }, text))\n}, {\n  title: 'Date',\n  dataIndex: 'date',\n  key: 'date'\n}, {\n  title: 'Amount',\n  dataIndex: 'amount',\n  key: 'amount'\n}, {\n  title: () => /*#__PURE__*/React.createElement(\"div\", {\n    className: \"text-right\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 198,\n      columnNumber: 17\n    }\n  }, \"Status\"),\n  key: 'status',\n  render: (_, record) => /*#__PURE__*/React.createElement(\"div\", {\n    className: \"text-right\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 201,\n      columnNumber: 3\n    }\n  }, /*#__PURE__*/React.createElement(Tag, {\n    className: \"mr-0\",\n    color: record.status === 'Approved' ? 'cyan' : record.status === 'Pending' ? 'blue' : 'volcano',\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 202,\n      columnNumber: 5\n    }\n  }, record.status))\n}];\n\nconst Dashboard = () => {\n  const [annualStatisticData] = useState(AnnualStatisticData);\n  const [recentTransactionData] = useState(RecentTransactionData);\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Row, {\n    gutter: 16,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 214,\n      columnNumber: 4\n    }\n  }, /*#__PURE__*/React.createElement(Col, {\n    xs: 24,\n    sm: 24,\n    md: 24,\n    lg: 24,\n    xl: 16,\n    xxl: 16,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 215,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Row, {\n    gutter: 16,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 216,\n      columnNumber: 6\n    }\n  }, annualStatisticData.map((elm, i) => /*#__PURE__*/React.createElement(Col, {\n    xs: 24,\n    sm: 24,\n    md: 24,\n    lg: 24,\n    xl: 6,\n    key: i,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 219,\n      columnNumber: 8\n    }\n  }, /*#__PURE__*/React.createElement(StatisticWidget, {\n    title: elm.title,\n    value: elm.value,\n    status: elm.status,\n    subtitle: elm.subtitle,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 220,\n      columnNumber: 9\n    }\n  })))), /*#__PURE__*/React.createElement(Row, {\n    gutter: 16,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 230,\n      columnNumber: 6\n    }\n  }, /*#__PURE__*/React.createElement(Col, {\n    xs: 24,\n    sm: 24,\n    md: 24,\n    lg: 24,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 231,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Card, {\n    title: \"Latest Transactions\",\n    extra: cardDropdown(latestTransactionOption),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 232,\n      columnNumber: 8\n    }\n  }, /*#__PURE__*/React.createElement(Table, {\n    className: \"no-border-last\",\n    columns: tableColumns_1,\n    dataSource: recentTransactionData,\n    rowKey: \"id\",\n    pagination: false,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 233,\n      columnNumber: 9\n    }\n  }))))), /*#__PURE__*/React.createElement(Col, {\n    xs: 24,\n    sm: 24,\n    md: 24,\n    lg: 8,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 244,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(SalesByCategory, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 245,\n      columnNumber: 6\n    }\n  }))));\n};\n\nexport default withRouter(Dashboard);","map":{"version":3,"sources":["/Users/dhruvaagrawal/Desktop/Work/Spocto/CMS/app/src/views/app-views/journeys/dashboard/index.js"],"names":["React","useState","Row","Col","Card","Avatar","Dropdown","Table","Menu","Tag","Badge","Typography","Flex","StatisticWidget","AvatarStatus","PieChart","NumberFormat","moment","DATE_FORMAT_DD_MM_YYYY","utils","AnnualStatisticData","RecentTransactionData","sessionData","sessionLabels","combinedSessionData","sessionColor","recentOrderData","FileExcelOutlined","PrinterOutlined","EllipsisOutlined","ReloadOutlined","withRouter","Title","getPaymentStatus","status","getShippingStatus","SalesByCategory","colors","maxWidth","map","elm","label","color","data","tableColumns","title","dataIndex","render","_","record","image","name","sorter","a","b","antdTableSorter","unix","date","format","orderStatus","paymentStatus","Math","round","amount","toFixed","RecentOrder","latestTransactionOption","cardDropdown","menu","e","preventDefault","tableColumns_1","key","text","backgroundColor","avatarColor","getNameInitial","Dashboard","annualStatisticData","recentTransactionData","i","value","subtitle"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\r\nimport { Row, Col, Card, Avatar, Dropdown, Table, Menu, Tag, Badge, Typography } from 'antd';\r\nimport Flex from 'components/shared-components/Flex'\r\nimport StatisticWidget from 'components/shared-components/StatisticWidget';\r\nimport AvatarStatus from 'components/shared-components/AvatarStatus';\r\nimport PieChart from 'components/shared-components/PieChart'\r\nimport NumberFormat from 'react-number-format';\r\nimport moment from 'moment'; \r\nimport { DATE_FORMAT_DD_MM_YYYY } from 'constants/DateConstant'\r\nimport utils from 'utils'\r\nimport { AnnualStatisticData, RecentTransactionData } from './DefaultDashboardData';\r\nimport {  sessionData, sessionLabels, combinedSessionData, sessionColor, recentOrderData } from './SalesDashboardData.js'\r\n\r\nimport { FileExcelOutlined, PrinterOutlined, EllipsisOutlined, ReloadOutlined } from '@ant-design/icons';\r\nimport { withRouter } from 'react-router-dom';\r\n\r\nconst { Title } = Typography\r\n\r\nconst getPaymentStatus = status => {\r\n\tif(status === 'Paid') {\r\n\t\treturn 'success'\r\n\t}\r\n\tif(status === 'Pending') {\r\n\t\treturn 'warning'\r\n\t}\r\n\tif(status === 'Expired') {\r\n\t\treturn 'error'\r\n\t}\r\n\treturn ''\r\n}\r\n\r\nconst getShippingStatus = status => {\r\n\tif(status === 'Ready') {\r\n\t\treturn 'blue'\r\n\t}\r\n\tif(status === 'Shipped') {\r\n\t\treturn 'cyan'\r\n\t}\r\n\treturn ''\r\n}\r\n\r\nconst SalesByCategory = () => (\r\n\t<Card>\r\n\t<Title level={3}>IVR Progress</Title>\r\n\t<PieChart \r\n\t\tseries={sessionData} \r\n\t\tlabels={sessionLabels} \r\n\t\tcustomOptions={{colors: sessionColor}}\r\n\t\textra={\r\n\t\t\t<Row  justify=\"center\">\r\n\t\t\t\t<Col xs={20} sm={20} md={20} lg={24}>\r\n\t\t\t\t\t<div className=\"mt-4 mx-auto\" style={{maxWidth: 200}}>\r\n\t\t\t\t\t\t{combinedSessionData.map(elm => (\r\n\t\t\t\t\t\t\t<Flex alignItems=\"center\" justifyContent=\"between\" className=\"mb-3\" key={elm.label}>\r\n\t\t\t\t\t\t\t\t<div>\r\n\t\t\t\t\t\t\t\t\t<Badge color={elm.color} />\r\n\t\t\t\t\t\t\t\t\t<span className=\"text-gray-light\">{elm.label}</span>\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t<span className=\"font-weight-bold text-dark\">{elm.data}</span>\r\n\t\t\t\t\t\t\t</Flex>\r\n\t\t\t\t\t\t))}\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</Col>\r\n\t\t\t</Row>\r\n\t\t}\r\n\t/>\r\n\t</Card>\r\n)\r\n\r\nconst tableColumns = [\r\n\t{\r\n\t\ttitle: 'ID',\r\n\t\tdataIndex: 'id'\r\n\t},\r\n\t{\r\n\t\ttitle: 'Product',\r\n\t\tdataIndex: 'name',\r\n\t\trender: (_, record) => (\r\n\t\t\t<Flex>\r\n\t\t\t\t<AvatarStatus size={30} src={record.image} name={record.name}/>\r\n\t\t\t</Flex>\r\n\t\t),\r\n\t\tsorter: (a, b) => utils.antdTableSorter(a, b, 'name')\r\n\t},\r\n\t{\r\n\t\ttitle: 'Date',\r\n\t\tdataIndex: 'date',\r\n\t\trender: (_, record) => (\r\n\t\t\t<span>{moment.unix(record.date).format(DATE_FORMAT_DD_MM_YYYY)}</span>\r\n\t\t),\r\n\t\tsorter: (a, b) => utils.antdTableSorter(a, b, 'date')\r\n\t},\r\n\t{\r\n\t\ttitle: 'Order status',\r\n\t\tdataIndex: 'orderStatus',\r\n\t\trender: (_, record) => (\r\n\t\t\t<><Tag color={getShippingStatus(record.orderStatus)}>{record.orderStatus}</Tag></>\r\n\t\t),\r\n\t\tsorter: (a, b) => utils.antdTableSorter(a, b, 'orderStatus')\r\n\t},\r\n\t{\r\n\t\ttitle: 'Payment status',\r\n\t\tdataIndex: 'paymentStatus',\r\n\t\trender: (_, record) => (\r\n\t\t\t<><Badge status={getPaymentStatus(record.paymentStatus)} /><span>{record.paymentStatus}</span></>\r\n\t\t),\r\n\t\tsorter: (a, b) => utils.antdTableSorter(a, b, 'paymentStatus')\r\n\t},\r\n\t{\r\n\t\ttitle: 'Total',\r\n\t\tdataIndex: 'amount',\r\n\t\trender: (_, record) => (\r\n\t\t\t<span className=\"font-weight-semibold\">\r\n\t\t\t\t<NumberFormat\r\n\t\t\t\t\tdisplayType={'text'} \r\n\t\t\t\t\tvalue={(Math.round(record.amount * 100) / 100).toFixed(2)} \r\n\t\t\t\t\tprefix={'$'} \r\n\t\t\t\t\tthousandSeparator={true} \r\n\t\t\t\t/>\r\n\t\t\t</span>\r\n\t\t),\r\n\t\tsorter: (a, b) => utils.antdTableSorter(a, b, 'amount')\r\n\t}\r\n]\r\n\r\nconst RecentOrder = () => (\r\n\t<Card title=\"Recent Order\">\r\n\t\t<Table\r\n\t\t\tpagination={false}\r\n\t\t\tcolumns={tableColumns} \r\n\t\t\tdataSource={recentOrderData} \r\n\t\t\trowKey='id'\r\n\t\t/>\r\n\t</Card>\r\n)\r\n  const latestTransactionOption = (\r\n\t<Menu>\r\n\t  <Menu.Item key=\"0\">\r\n\t\t<span>\r\n\t\t  <div className=\"d-flex align-items-center\">\r\n\t\t\t<ReloadOutlined />\r\n\t\t\t<span className=\"ml-2\">Refresh</span>\r\n\t\t  </div>\r\n\t\t</span>\r\n\t  </Menu.Item>\r\n\t  <Menu.Item key=\"1\">\r\n\t\t<span>\r\n\t\t  <div className=\"d-flex align-items-center\">\r\n\t\t\t<PrinterOutlined />\r\n\t\t\t<span className=\"ml-2\">Print</span>\r\n\t\t  </div>\r\n\t\t</span>\r\n\t  </Menu.Item>\r\n\t  <Menu.Item key=\"12\">\r\n\t\t<span>\r\n\t\t  <div className=\"d-flex align-items-center\">\r\n\t\t\t<FileExcelOutlined />\r\n\t\t\t<span className=\"ml-2\">Export</span>\r\n\t\t  </div>\r\n\t\t</span>\r\n\t  </Menu.Item>\r\n\t</Menu>\r\n  );\r\n  \r\n  const cardDropdown = (menu) => (\r\n\t<Dropdown overlay={menu} trigger={['click']} placement=\"bottomRight\">\r\n\t  <a href=\"/#\" className=\"text-gray font-size-lg\" onClick={e => e.preventDefault()}>\r\n\t\t<EllipsisOutlined />\r\n\t  </a>\r\n\t</Dropdown>\r\n  )\r\n  \r\n  const tableColumns_1 = [\r\n\t{\r\n\t  title: 'Customer',\r\n\t  dataIndex: 'name',\r\n\t  key: 'name',\r\n\t  render: (text, record) => (\r\n\t\t<div className=\"d-flex align-items-center\">\r\n\t\t  <Avatar size={30} className=\"font-size-sm\" style={{backgroundColor: record.avatarColor}}>\r\n\t\t\t{utils.getNameInitial(text)}\r\n\t\t  </Avatar>\r\n\t\t  <span className=\"ml-2\">{text}</span>\r\n\t\t</div>\r\n\t  ),\r\n\t},\r\n\t{\r\n\t  title: 'Date',\r\n\t  dataIndex: 'date',\r\n\t  key: 'date',\r\n\t},\r\n\t{\r\n\t  title: 'Amount',\r\n\t  dataIndex: 'amount',\r\n\t  key: 'amount',\r\n\t},\r\n\t{\r\n\t  title: () => <div className=\"text-right\">Status</div>,\r\n\t  key: 'status',\r\n\t  render: (_, record) => (\r\n\t\t<div className=\"text-right\">\r\n\t\t  <Tag className=\"mr-0\" color={record.status === 'Approved' ? 'cyan' : record.status === 'Pending' ? 'blue' : 'volcano'}>{record.status}</Tag>\r\n\t\t</div>\r\n\t  ),\r\n\t},\r\n  ];\r\n\r\nconst Dashboard = () => {\r\n\tconst [annualStatisticData] = useState(AnnualStatisticData);\r\n\tconst [recentTransactionData] = useState(RecentTransactionData)\r\n\r\n\treturn (\r\n\t\t<>\r\n\t\t\t<Row gutter={16}>\r\n\t\t\t\t<Col xs={24} sm={24} md={24} lg={24} xl={16} xxl={16}>\r\n\t\t\t\t\t<Row gutter={16}>\r\n\t\t\t\t\t\t{\r\n\t\t\t\t\t\tannualStatisticData.map((elm, i) => (\r\n\t\t\t\t\t\t\t<Col xs={24} sm={24} md={24} lg={24} xl={6} key={i}>\r\n\t\t\t\t\t\t\t\t<StatisticWidget \r\n\t\t\t\t\t\t\t\t\ttitle={elm.title} \r\n\t\t\t\t\t\t\t\t\tvalue={elm.value}\r\n\t\t\t\t\t\t\t\t\tstatus={elm.status}\r\n\t\t\t\t\t\t\t\t\tsubtitle={elm.subtitle}\r\n\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t</Col>\r\n\t\t\t\t\t\t))\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t</Row>\r\n\t\t\t\t\t<Row gutter={16}>\r\n\t\t\t\t\t\t<Col xs={24} sm={24} md={24} lg={24}>\r\n\t\t\t\t\t\t\t<Card title=\"Latest Transactions\" extra={cardDropdown(latestTransactionOption)}>\r\n\t\t\t\t\t\t\t\t<Table \r\n\t\t\t\t\t\t\t\t\tclassName=\"no-border-last\" \r\n\t\t\t\t\t\t\t\t\tcolumns={tableColumns_1} \r\n\t\t\t\t\t\t\t\t\tdataSource={recentTransactionData} \r\n\t\t\t\t\t\t\t\t\trowKey='id' \r\n\t\t\t\t\t\t\t\t\tpagination={false}\r\n\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t</Card>\r\n\t\t\t\t\t\t</Col>\r\n\t\t\t\t\t</Row>\r\n\t\t\t\t</Col>\r\n\t\t\t\t<Col xs={24} sm={24} md={24} lg={8}>\r\n\t\t\t\t\t<SalesByCategory />\r\n\t\t\t\t</Col>\r\n\t\t\t</Row>\r\n\r\n\t\t</>\r\n\t)\r\n}\r\n\r\nexport default withRouter(Dashboard)"]},"metadata":{},"sourceType":"module"}