{"ast":null,"code":"var _jsxFileName = \"/Users/dhruvaagrawal/Desktop/Work/Spocto/CMS/app/src/views/auth-views/components/LoginForm.js\";\nimport React, { useEffect } from 'react';\nimport { connect } from \"react-redux\";\nimport { Button, Form, Input, Alert } from \"antd\";\nimport { MailOutlined, LockOutlined } from '@ant-design/icons';\nimport PropTypes from 'prop-types';\nimport { signIn, showLoading, showAuthMessage, hideAuthMessage } from 'redux/actions/Auth';\nimport { useHistory } from \"react-router-dom\";\nimport { motion } from \"framer-motion\";\nimport crypto from 'crypto';\nimport bcrypt from 'bcrypt';\nexport const LoginForm = props => {\n  let history = useHistory();\n  const {\n    showForgetPassword,\n    hideAuthMessage,\n    onForgetPasswordClick,\n    showLoading,\n    signIn,\n    token,\n    loading,\n    redirect,\n    showMessage,\n    message,\n    allowRedirect\n  } = props;\n  const initialCredential = {\n    email: 'user1@themenate.net',\n    password: '2005ipo'\n  };\n\n  const onLogin = values => {\n    console.log(values);\n    let created_hash = crypto.createHash('sha256').update(String(values.email).concat(values.password)).digest('hex');\n    console.log(created_hash); // showLoading()\n    // signIn(values);\n  };\n\n  useEffect(() => {\n    if (token !== null && allowRedirect) {\n      history.push(redirect);\n    }\n\n    if (showMessage) {\n      setTimeout(() => {\n        hideAuthMessage();\n      }, 3000);\n    }\n  });\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(motion.div, {\n    initial: {\n      opacity: 0,\n      marginBottom: 0\n    },\n    animate: {\n      opacity: showMessage ? 1 : 0,\n      marginBottom: showMessage ? 20 : 0\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 4\n    }\n  }, /*#__PURE__*/React.createElement(Alert, {\n    type: \"error\",\n    showIcon: true,\n    message: message,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 5\n    }\n  })), /*#__PURE__*/React.createElement(Form, {\n    layout: \"vertical\",\n    name: \"login-form\",\n    initialValues: initialCredential,\n    onFinish: onLogin,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 4\n    }\n  }, /*#__PURE__*/React.createElement(Form.Item, {\n    name: \"email\",\n    label: \"Email\",\n    rules: [{\n      required: true,\n      message: 'Please input your email'\n    }, {\n      type: 'email',\n      message: 'Please enter a validate email!'\n    }],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Input, {\n    prefix: /*#__PURE__*/React.createElement(MailOutlined, {\n      className: \"text-primary\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 22\n      }\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 6\n    }\n  })), /*#__PURE__*/React.createElement(Form.Item, {\n    name: \"password\",\n    label: /*#__PURE__*/React.createElement(\"div\", {\n      className: `${showForgetPassword ? 'd-flex justify-content-between w-100 align-items-center' : ''}`,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"span\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 8\n      }\n    }, \"Password\"), showForgetPassword && /*#__PURE__*/React.createElement(\"span\", {\n      onClick: () => onForgetPasswordClick,\n      className: \"cursor-pointer font-size-sm font-weight-normal text-muted\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 9\n      }\n    }, \"Forgot Password?\")),\n    rules: [{\n      required: true,\n      message: 'Please input your password'\n    }],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Input.Password, {\n    prefix: /*#__PURE__*/React.createElement(LockOutlined, {\n      className: \"text-primary\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 30\n      }\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 6\n    }\n  })), /*#__PURE__*/React.createElement(Form.Item, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    type: \"primary\",\n    htmlType: \"submit\",\n    block: true,\n    loading: loading,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 6\n    }\n  }, \"Sign In\"))));\n};\nLoginForm.propTypes = {\n  showForgetPassword: PropTypes.bool,\n  extra: PropTypes.oneOfType([PropTypes.string, PropTypes.element])\n};\nLoginForm.defaultProps = {\n  showForgetPassword: false\n};\n\nconst mapStateToProps = ({\n  auth\n}) => {\n  const {\n    loading,\n    message,\n    showMessage,\n    token,\n    redirect\n  } = auth;\n  return {\n    loading,\n    message,\n    showMessage,\n    token,\n    redirect\n  };\n};\n\nconst mapDispatchToProps = {\n  signIn,\n  showAuthMessage,\n  showLoading,\n  hideAuthMessage\n};\nexport default connect(mapStateToProps, mapDispatchToProps)(LoginForm);","map":{"version":3,"sources":["/Users/dhruvaagrawal/Desktop/Work/Spocto/CMS/app/src/views/auth-views/components/LoginForm.js"],"names":["React","useEffect","connect","Button","Form","Input","Alert","MailOutlined","LockOutlined","PropTypes","signIn","showLoading","showAuthMessage","hideAuthMessage","useHistory","motion","crypto","bcrypt","LoginForm","props","history","showForgetPassword","onForgetPasswordClick","token","loading","redirect","showMessage","message","allowRedirect","initialCredential","email","password","onLogin","values","console","log","created_hash","createHash","update","String","concat","digest","push","setTimeout","opacity","marginBottom","required","type","propTypes","bool","extra","oneOfType","string","element","defaultProps","mapStateToProps","auth","mapDispatchToProps"],"mappings":"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","sourcesContent":["import React, { useEffect } from 'react';\r\nimport { connect } from \"react-redux\";\r\nimport { Button, Form, Input, Alert } from \"antd\";\r\nimport { MailOutlined, LockOutlined } from '@ant-design/icons';\r\nimport PropTypes from 'prop-types';\r\nimport { signIn, showLoading, showAuthMessage, hideAuthMessage } from 'redux/actions/Auth';\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { motion } from \"framer-motion\"\r\nimport crypto from 'crypto'\r\nimport bcrypt from 'bcrypt'\r\n\r\n\r\nexport const LoginForm = props => {\r\n\tlet history = useHistory();\r\n\r\n\tconst { showForgetPassword, hideAuthMessage, onForgetPasswordClick, showLoading, signIn, token, loading, redirect, showMessage, message, allowRedirect } = props\r\n\r\n\tconst initialCredential = {\r\n\t\temail: 'user1@themenate.net',\r\n\t\tpassword: '2005ipo'\r\n\t}\r\n\r\n\tconst onLogin = values => {\r\n\t\tconsole.log(values)\r\n\t\tlet created_hash = crypto.createHash('sha256').update(String(values.email).concat(values.password)).digest('hex')\r\n\t\tconsole.log(created_hash)\r\n\t\t// showLoading()\r\n\t\t// signIn(values);\r\n\t};\r\n\r\n\tuseEffect(() => {\r\n\t\tif (token !== null && allowRedirect) {\r\n\t\t\thistory.push(redirect)\r\n\t\t}\r\n\t\tif(showMessage) {\r\n\t\t\tsetTimeout(() => {\r\n\t\t\t\thideAuthMessage();\r\n\t\t\t}, 3000);\r\n\t\t}\r\n\t});\r\n\r\n\treturn (\r\n\t\t<>\r\n\t\t\t<motion.div \r\n\t\t\t\tinitial={{ opacity: 0, marginBottom: 0 }} \r\n\t\t\t\tanimate={{  opacity: showMessage ? 1 : 0, marginBottom: showMessage ? 20 : 0 }}> \r\n\t\t\t\t<Alert type=\"error\" showIcon message={ message }></Alert>\r\n\t\t\t</motion.div>\r\n\t\t\t<Form \r\n\t\t\t\tlayout=\"vertical\" \r\n\t\t\t\tname=\"login-form\" \r\n\t\t\t\tinitialValues={ initialCredential }\r\n\t\t\t\tonFinish={ onLogin }\r\n\t\t\t>\r\n\t\t\t\t<Form.Item \r\n\t\t\t\t\tname=\"email\" \r\n\t\t\t\t\tlabel=\"Email\" \r\n\t\t\t\t\trules={[{ required: true,message: 'Please input your email' }, { type: 'email', message: 'Please enter a validate email!' }]}>\r\n\t\t\t\t\t<Input prefix={ <MailOutlined className=\"text-primary\" /> }/>\r\n\t\t\t\t</Form.Item>\r\n\t\t\t\t<Form.Item \r\n\t\t\t\t\tname=\"password\" \r\n\t\t\t\t\tlabel={\r\n\t\t\t\t\t\t<div className={`${ showForgetPassword? 'd-flex justify-content-between w-100 align-items-center' : ''}`}>\r\n\t\t\t\t\t\t\t<span>Password</span>\r\n\t\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t\tshowForgetPassword && \r\n\t\t\t\t\t\t\t\t<span\r\n\t\t\t\t\t\t\t\t\tonClick={ () => onForgetPasswordClick } \r\n\t\t\t\t\t\t\t\t\tclassName=\"cursor-pointer font-size-sm font-weight-normal text-muted\"\r\n\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\tForgot Password?\r\n\t\t\t\t\t\t\t\t</span>\r\n\t\t\t\t\t\t\t} \r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t} \r\n\t\t\t\t\trules={[{ required: true, message: 'Please input your password' }]}\r\n\t\t\t\t>\r\n\t\t\t\t\t<Input.Password prefix={<LockOutlined className=\"text-primary\" />}/>\r\n\t\t\t\t</Form.Item>\r\n\t\t\t\t<Form.Item>\r\n\t\t\t\t\t<Button type=\"primary\" htmlType=\"submit\" block loading={loading}>\r\n\t\t\t\t\t\tSign In\r\n\t\t\t\t\t</Button>\r\n\t\t\t\t</Form.Item>\r\n\t\t\t</Form>\r\n\t\t</>\r\n\t)\r\n}\r\n\r\nLoginForm.propTypes = {\r\n\tshowForgetPassword: PropTypes.bool,\r\n\textra: PropTypes.oneOfType([\r\n\t\tPropTypes.string,\r\n\t\tPropTypes.element\r\n\t]),\r\n};\r\n\r\nLoginForm.defaultProps = { showForgetPassword: false };\r\n\r\n\r\nconst mapStateToProps = ({ auth }) => {\r\n\tconst { loading, message, showMessage, token, redirect } = auth;\r\n  return { loading, message, showMessage, token, redirect }\r\n}\r\n\r\nconst mapDispatchToProps = { signIn, showAuthMessage, showLoading, hideAuthMessage }\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(LoginForm)"]},"metadata":{},"sourceType":"module"}