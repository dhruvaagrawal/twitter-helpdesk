{"ast":null,"code":"import _defineProperty from\"/Users/dhruvaagrawal/Desktop/Work/Spocto/CMS/app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty\";import _objectSpread from\"/Users/dhruvaagrawal/Desktop/Work/Spocto/CMS/app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";import _toConsumableArray from\"/Users/dhruvaagrawal/Desktop/Work/Spocto/CMS/app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";import React,{useContext}from'react';import{ScrumboardProvider,ScrumboardContext}from'./ScrumboardContext';import Board from'./Board';import{DragDropContext,Droppable}from'react-beautiful-dnd';import{PlusOutlined}from'@ant-design/icons';import{Avatar}from'antd';import reorder,{reorderQuoteMap}from'./reorder';import{memberIds}from'./ScrumboardData';import ModalForm from'./ModalForm';import{modalModeTypes,createCardObject,AssigneeAvatar}from'./utils';import{Scrollbars}from'react-custom-scrollbars';var ScrumboardWrapper=function ScrumboardWrapper(props){var _useContext=useContext(ScrumboardContext),ordered=_useContext.ordered,columns=_useContext.columns,modal=_useContext.modal,cardData=_useContext.cardData,currentListId=_useContext.currentListId,modalMode=_useContext.modalMode,updateOrdered=_useContext.updateOrdered,updateColumns=_useContext.updateColumns,updateModal=_useContext.updateModal,updateCurrentListId=_useContext.updateCurrentListId;var _onDragEnd=function onDragEnd(result){if(result.combine){if(result.type==='COLUMN'){var shallow=_toConsumableArray(ordered);shallow.splice(result.source.index,1);updateOrdered(shallow);return;}var column=columns[result.source.droppableId];var withQuoteRemoved=_toConsumableArray(column);withQuoteRemoved.splice(result.source.index,1);var newColumns=_objectSpread(_objectSpread({},columns),{},_defineProperty({},result.source.droppableId,withQuoteRemoved));updateColumns(newColumns);return;}if(!result.destination){return;}var source=result.source;var destination=result.destination;if(source.droppableId===destination.droppableId&&source.index===destination.index){return;}if(result.type==='COLUMN'){var newOrdered=reorder(ordered,source.index,destination.index);updateOrdered(newOrdered);return;}var data=reorderQuoteMap({quoteMap:columns,source:source,destination:destination});updateColumns(data.quoteMap);};var onCloseModal=function onCloseModal(){updateModal(false);};var _onModalSubmit=function onModalSubmit(values,mode){var data=columns;if(mode===modalModeTypes(0)){var newCard=createCardObject();newCard.name=values.cardTitle?values.cardTitle:'Untitled Card';data[currentListId].push(newCard);updateColumns(data);updateModal(false);updateCurrentListId('');}if(mode===modalModeTypes(1)){var updatadedCard=data[currentListId].map(function(elm){if(values.id===elm.id){elm=values;}return elm;});data[currentListId]=updatadedCard;updateColumns(data);updateModal(false);}if(mode===modalModeTypes(2)){data[values.boardTitle?values.boardTitle:'Untitled Board']=[];var newOrdered=[].concat(_toConsumableArray(ordered),[values.boardTitle?values.boardTitle:'Untitled Board']);var newColumns={};newOrdered.forEach(function(elm){newColumns[elm]=data[elm];});updateColumns(newColumns);updateOrdered(Object.keys(newColumns));updateModal(false);}};return/*#__PURE__*/React.createElement(React.Fragment,null,/*#__PURE__*/React.createElement(DragDropContext,{onDragEnd:function onDragEnd(result){return _onDragEnd(result);}},props.containerHeight?/*#__PURE__*/React.createElement(\"div\",{className:\"scrumboard\"},/*#__PURE__*/React.createElement(BoardWrapper,props)):/*#__PURE__*/React.createElement(BoardWrapper,props)),/*#__PURE__*/React.createElement(ModalForm,{visible:modal,onClose:function onClose(){return onCloseModal();},onModalSubmit:function onModalSubmit(values,modalMode){return _onModalSubmit(values,modalMode);},modalMode:modalMode,cardData:cardData,listId:currentListId}));};var BoardWrapper=function BoardWrapper(_ref){var containerHeight=_ref.containerHeight,useClone=_ref.useClone,isCombineEnabled=_ref.isCombineEnabled,withScrollableColumns=_ref.withScrollableColumns;var _useContext2=useContext(ScrumboardContext),ordered=_useContext2.ordered,columns=_useContext2.columns,updateModal=_useContext2.updateModal,updateModalMode=_useContext2.updateModalMode;var onAddBoardModal=function onAddBoardModal(){updateModal(true);updateModalMode(modalModeTypes(2));};return/*#__PURE__*/React.createElement(Droppable,{droppableId:\"board\",type:\"COLUMN\",direction:\"horizontal\",ignoreContainerClipping:containerHeight,isCombineEnabled:isCombineEnabled},function(provided){return/*#__PURE__*/React.createElement(\"div\",Object.assign({className:\"scrumboard\",ref:provided.innerRef},provided.droppableProps),/*#__PURE__*/React.createElement(\"div\",{className:\"scrumboard-header\"},/*#__PURE__*/React.createElement(\"div\",null,/*#__PURE__*/React.createElement(\"h3\",null,\"Backlog\")),/*#__PURE__*/React.createElement(\"div\",{className:\"text-right\"},/*#__PURE__*/React.createElement(\"div\",{className:\"d-flex align-items-center\"},memberIds.map(function(member,i){return i<4?/*#__PURE__*/React.createElement(AssigneeAvatar,{key:member,id:member,size:30,chain:true}):null;}),/*#__PURE__*/React.createElement(Avatar,{className:\"ml-n2\",size:30},/*#__PURE__*/React.createElement(\"span\",{className:\"text-gray font-weight-semibold font-size-base\"},\"+9\"))))),/*#__PURE__*/React.createElement(Scrollbars,{className:\"scrumboard-body\"},ordered.map(function(key,index){return/*#__PURE__*/React.createElement(Board,{key:key,index:index,title:key,contents:columns[key],isScrollable:withScrollableColumns,isCombineEnabled:isCombineEnabled,useClone:useClone});}),provided.placeholder,/*#__PURE__*/React.createElement(\"div\",{className:\"board-column add\"},/*#__PURE__*/React.createElement(\"div\",{className:\"board-title\",onClick:function onClick(){return onAddBoardModal();}},/*#__PURE__*/React.createElement(\"h4\",{className:\"mb-0\"},/*#__PURE__*/React.createElement(PlusOutlined,null),/*#__PURE__*/React.createElement(\"span\",null,\"Add List\"))))));});};var Scrumboard=function Scrumboard(props){return/*#__PURE__*/React.createElement(ScrumboardProvider,null,/*#__PURE__*/React.createElement(ScrumboardWrapper,props));};export default Scrumboard;","map":{"version":3,"sources":["/Users/dhruvaagrawal/Desktop/Work/Spocto/CMS/app/src/views/app-views/journeys/journey-ivr/taskTracker/index.js"],"names":["React","useContext","ScrumboardProvider","ScrumboardContext","Board","DragDropContext","Droppable","PlusOutlined","Avatar","reorder","reorderQuoteMap","memberIds","ModalForm","modalModeTypes","createCardObject","AssigneeAvatar","Scrollbars","ScrumboardWrapper","props","ordered","columns","modal","cardData","currentListId","modalMode","updateOrdered","updateColumns","updateModal","updateCurrentListId","onDragEnd","result","combine","type","shallow","splice","source","index","column","droppableId","withQuoteRemoved","newColumns","destination","newOrdered","data","quoteMap","onCloseModal","onModalSubmit","values","mode","newCard","name","cardTitle","push","updatadedCard","map","elm","id","boardTitle","forEach","Object","keys","containerHeight","BoardWrapper","useClone","isCombineEnabled","withScrollableColumns","updateModalMode","onAddBoardModal","provided","innerRef","droppableProps","member","i","key","placeholder","Scrumboard"],"mappings":"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","sourcesContent":["import React, { useContext } from 'react'\nimport { ScrumboardProvider, ScrumboardContext } from './ScrumboardContext'\nimport Board from './Board';\nimport { DragDropContext, Droppable } from 'react-beautiful-dnd';\nimport { PlusOutlined } from '@ant-design/icons';\nimport { Avatar  } from 'antd';\nimport reorder, { reorderQuoteMap } from './reorder'\nimport { memberIds } from './ScrumboardData';\nimport ModalForm from './ModalForm';\nimport { modalModeTypes, createCardObject, AssigneeAvatar } from './utils';\nimport { Scrollbars } from 'react-custom-scrollbars';\n\nconst ScrumboardWrapper = props => {\n\tconst { \n\t\tordered,\n\t\tcolumns,\n\t\tmodal,\n\t\tcardData,\n\t\tcurrentListId,\n\t\tmodalMode,\n\t\tupdateOrdered,\n\t\tupdateColumns,\n\t\tupdateModal,\n\t\tupdateCurrentListId\n\t} = useContext(ScrumboardContext)\n\n\tconst onDragEnd = result => {\n    if (result.combine) {\n      if (result.type === 'COLUMN') {\n        const shallow = [...ordered];\n        shallow.splice(result.source.index, 1);\n\t\t\t\tupdateOrdered(shallow)\n        return;\n      }\n\n      const column = columns[result.source.droppableId];\n      const withQuoteRemoved = [...column];\n      withQuoteRemoved.splice(result.source.index, 1);\n      const newColumns = {\n        ...columns,\n        [result.source.droppableId]: withQuoteRemoved,\n\t\t\t};\n\t\t\tupdateColumns(newColumns)\n      return;\n    }\n\n    if (!result.destination) {\n      return;\n    }\n\n    const source = result.source;\n    const destination = result.destination;\n\n    if (\n      source.droppableId === destination.droppableId && source.index === destination.index\n    ) {\n      return;\n    }\n\n    if (result.type === 'COLUMN') {\n      const newOrdered = reorder(\n        ordered,\n        source.index,\n        destination.index,\n      );\n\t\t\tupdateOrdered(newOrdered)\n      return;\n    }\n    const data = reorderQuoteMap({\n      quoteMap: columns,\n      source,\n      destination,\n    });\n\t\tupdateColumns(data.quoteMap)\n\t}\n\t\n\tconst onCloseModal = () => {\n\t\tupdateModal(false)\n\t}\n\n\tconst onModalSubmit = (values, mode) => {\n\t\tconst data = columns\n    if(mode === modalModeTypes(0)) {\n\t\t\tlet newCard = createCardObject()\n\t\t\tnewCard.name = values.cardTitle ? values.cardTitle : 'Untitled Card'\n\t\t\tdata[currentListId].push(newCard)\n\t\t\tupdateColumns(data)\n\t\t\tupdateModal(false)\n\t\t\tupdateCurrentListId('')\n    }\n\n    if(mode === modalModeTypes(1)) {\n      const updatadedCard = data[currentListId].map(elm => {\n        if(values.id === elm.id) {\n          elm = values\n        }\n        return elm\n\t\t\t})\n\t  \tdata[currentListId] = updatadedCard\n\t\t\tupdateColumns(data)\n\t\t\tupdateModal(false)\n    }\n\n    if(mode === modalModeTypes(2)) {\n\t\t\tdata[values.boardTitle? values.boardTitle : 'Untitled Board'] = [];\n\t\t\tconst newOrdered = [...ordered, ...[values.boardTitle? values.boardTitle : 'Untitled Board']]\n\t\t\tlet newColumns = {}\n\t\t\tnewOrdered.forEach(elm => {\n\t\t\t\tnewColumns[elm] = data[elm]\n\t\t\t});\n\t\t\tupdateColumns(newColumns)\n\t\t\tupdateOrdered(Object.keys(newColumns))\n\t\t\tupdateModal(false)\n\t\t}\n\t}\n\n\treturn (\n\t\t<>\n\t\t\t<DragDropContext onDragEnd={result => onDragEnd(result)}>\n\t\t\t\t{props.containerHeight ? (\n\t\t\t\t\t<div className=\"scrumboard\">\n\t\t\t\t\t\t<BoardWrapper {...props}/>\n\t\t\t\t\t</div>\n\t\t\t\t) : (\n\t\t\t\t\t<BoardWrapper {...props}/>\n\t\t\t\t)}\n\t\t\t</DragDropContext>\n\t\t\t<ModalForm \n\t\t\t\tvisible={modal} \n\t\t\t\tonClose={() => onCloseModal()} \n\t\t\t\tonModalSubmit={(values, modalMode) => onModalSubmit(values, modalMode)}\n\t\t\t\tmodalMode={modalMode}\n\t\t\t\tcardData={cardData}\n\t\t\t\tlistId={currentListId}\n\t\t\t/>\n\t\t</>\n\t)\n}\n\nconst BoardWrapper = ({ containerHeight, useClone, isCombineEnabled, withScrollableColumns }) => {\n\tconst { ordered, columns, updateModal, updateModalMode } = useContext(ScrumboardContext)\n\n\tconst onAddBoardModal = () => {\n\t\tupdateModal(true)\n\t\tupdateModalMode(modalModeTypes(2))\n\t} \n\treturn (\n\t\t<Droppable\n\t\t\tdroppableId=\"board\"\n\t\t\ttype=\"COLUMN\"\n\t\t\tdirection=\"horizontal\"\n\t\t\tignoreContainerClipping={containerHeight}\n\t\t\tisCombineEnabled={isCombineEnabled}\n\t\t>\n\t\t\t{(provided) => (\n\t\t\t\t<div className=\"scrumboard\" ref={provided.innerRef} {...provided.droppableProps}>\n\t\t\t\t\t<div className=\"scrumboard-header\">\n\t\t\t\t\t\t<div>\n\t\t\t\t\t\t\t<h3>Backlog</h3>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t<div className=\"text-right\">\n\t\t\t\t\t\t\t<div className=\"d-flex align-items-center\">\n\t\t\t\t\t\t\t\t{memberIds.map((member, i) => i < 4 ? <AssigneeAvatar key={member} id={member} size={30} chain/> : null)}\n\t\t\t\t\t\t\t\t<Avatar className=\"ml-n2\" size={30}>\n\t\t\t\t\t\t\t\t\t<span className=\"text-gray font-weight-semibold font-size-base\">+9</span>\n\t\t\t\t\t\t\t\t</Avatar>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\t\t\t\t\t<Scrollbars className=\"scrumboard-body\">\n\t\t\t\t\t\t{ordered.map((key, index) => (\n\t\t\t\t\t\t\t<Board\n\t\t\t\t\t\t\t\tkey={key}\n\t\t\t\t\t\t\t\tindex={index}\n\t\t\t\t\t\t\t\ttitle={key}\n\t\t\t\t\t\t\t\tcontents={columns[key]}\n\t\t\t\t\t\t\t\tisScrollable={withScrollableColumns}\n\t\t\t\t\t\t\t\tisCombineEnabled={isCombineEnabled}\n\t\t\t\t\t\t\t\tuseClone={useClone}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t))}\n\t\t\t\t\t\t{provided.placeholder}\n\t\t\t\t\t\t<div className=\"board-column add\">\n\t\t\t\t\t\t\t<div className=\"board-title\" onClick={() => onAddBoardModal()}>\n\t\t\t\t\t\t\t\t<h4 className=\"mb-0\">\n\t\t\t\t\t\t\t\t\t<PlusOutlined />\n\t\t\t\t\t\t\t\t\t<span>Add List</span>\n\t\t\t\t\t\t\t\t</h4>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</Scrollbars>\n\t\t\t\t</div>\n\t\t\t)}\n\t\t</Droppable>\n\t)\n}\n\nconst Scrumboard = props => {\n\treturn (\n\t\t<ScrumboardProvider>\n\t\t\t<ScrumboardWrapper {...props} />\n\t\t</ScrumboardProvider>\n\t)\n}\n\nexport default Scrumboard"]},"metadata":{},"sourceType":"module"}