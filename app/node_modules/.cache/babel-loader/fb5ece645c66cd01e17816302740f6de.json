{"ast":null,"code":"var _jsxFileName = \"/Users/dhruvaagrawal/Desktop/Work/Projects/Webdev.nosync/Twitter/app/src/views/app-views/helpdesk/ChatMenu.js\";\nimport React, { useState } from 'react';\nimport ChatData from \"assets/data/chat.data.json\";\nimport { Badge, Input } from 'antd';\nimport AvatarStatus from 'components/shared-components/AvatarStatus';\nimport { COLOR_1 } from 'constants/ChartConstant';\nimport { SearchOutlined } from '@ant-design/icons';\nimport { useHistory } from \"react-router-dom\";\n\nconst ChatMenu = ({\n  match,\n  location\n}) => {\n  const [list, setList] = useState(ChatData);\n  let history = useHistory();\n\n  const openChat = id => {\n    const data = list.map(elm => {\n      if (elm.id === id) {\n        elm.unread = 0;\n      }\n\n      return elm;\n    });\n    setList(data);\n    history.push(`${match.url}/${id}`);\n  };\n\n  const id = parseInt(location.pathname.match(/\\/([^/]+)\\/?$/)[1]);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"chat-menu\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 3\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"chat-menu-list\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 4\n    }\n  }, list.map((item, i) => /*#__PURE__*/React.createElement(\"div\", {\n    key: `chat-item-${item.id}`,\n    onClick: () => openChat(item.id),\n    className: `chat-menu-list-item ${i === list.length - 1 ? 'last' : ''} ${item.id === id ? 'selected' : ''}`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(AvatarStatus, {\n    src: item.avatar,\n    name: item.name,\n    subTitle: item.msg[item.msg.length - 1].text,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 8\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"text-right\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 8\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"chat-menu-list-item-time\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 9\n    }\n  }, item.time), item.unread === 0 ? /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 31\n    }\n  }) : /*#__PURE__*/React.createElement(Badge, {\n    count: item.unread,\n    style: {\n      backgroundColor: COLOR_1\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 47\n    }\n  }))))));\n};\n\nexport default ChatMenu;","map":{"version":3,"sources":["/Users/dhruvaagrawal/Desktop/Work/Projects/Webdev.nosync/Twitter/app/src/views/app-views/helpdesk/ChatMenu.js"],"names":["React","useState","ChatData","Badge","Input","AvatarStatus","COLOR_1","SearchOutlined","useHistory","ChatMenu","match","location","list","setList","history","openChat","id","data","map","elm","unread","push","url","parseInt","pathname","item","i","length","avatar","name","msg","text","time","backgroundColor"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAOC,QAAP,MAAqB,4BAArB;AACA,SAASC,KAAT,EAAgBC,KAAhB,QAA6B,MAA7B;AACA,OAAOC,YAAP,MAAyB,2CAAzB;AACA,SAASC,OAAT,QAAwB,yBAAxB;AACA,SAASC,cAAT,QAA+B,mBAA/B;AACA,SAASC,UAAT,QAA2B,kBAA3B;;AAEA,MAAMC,QAAQ,GAAG,CAAC;AAAEC,EAAAA,KAAF;AAASC,EAAAA;AAAT,CAAD,KAAyB;AACzC,QAAM,CAAEC,IAAF,EAAQC,OAAR,IAAoBZ,QAAQ,CAACC,QAAD,CAAlC;AACA,MAAIY,OAAO,GAAGN,UAAU,EAAxB;;AACA,QAAMO,QAAQ,GAAGC,EAAE,IAAI;AACtB,UAAMC,IAAI,GAAGL,IAAI,CAACM,GAAL,CAAUC,GAAG,IAAI;AAC7B,UAAGA,GAAG,CAACH,EAAJ,KAAWA,EAAd,EAAkB;AACjBG,QAAAA,GAAG,CAACC,MAAJ,GAAa,CAAb;AACA;;AACD,aAAOD,GAAP;AACA,KALY,CAAb;AAMAN,IAAAA,OAAO,CAACI,IAAD,CAAP;AACAH,IAAAA,OAAO,CAACO,IAAR,CAAc,GAAEX,KAAK,CAACY,GAAI,IAAGN,EAAG,EAAhC;AACA,GATD;;AAWA,QAAMA,EAAE,GAAGO,QAAQ,CAACZ,QAAQ,CAACa,QAAT,CAAkBd,KAAlB,CAAwB,eAAxB,EAAyC,CAAzC,CAAD,CAAnB;AAEA,sBACC;AAAK,IAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACC;AAAK,IAAA,SAAS,EAAC,gBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAEEE,IAAI,CAACM,GAAL,CAAU,CAACO,IAAD,EAAOC,CAAP,kBACT;AACC,IAAA,GAAG,EAAI,aAAYD,IAAI,CAACT,EAAG,EAD5B;AAEC,IAAA,OAAO,EAAG,MAAMD,QAAQ,CAACU,IAAI,CAACT,EAAN,CAFzB;AAGC,IAAA,SAAS,EAAI,uBAAuBU,CAAC,KAAMd,IAAI,CAACe,MAAL,GAAc,CAArB,GAAyB,MAAzB,GAAkC,EAAI,IAAIF,IAAI,CAACT,EAAL,KAAYA,EAAZ,GAAgB,UAAhB,GAA6B,EAAI,EAHhH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAKC,oBAAC,YAAD;AAAc,IAAA,GAAG,EAAGS,IAAI,CAACG,MAAzB;AAAkC,IAAA,IAAI,EAAGH,IAAI,CAACI,IAA9C;AAAqD,IAAA,QAAQ,EAAGJ,IAAI,CAACK,GAAL,CAASL,IAAI,CAACK,GAAL,CAASH,MAAT,GAAkB,CAA3B,EAA8BI,IAA9F;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IALD,eAMC;AAAK,IAAA,SAAS,EAAC,YAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACC;AAAK,IAAA,SAAS,EAAC,0BAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAA4CN,IAAI,CAACO,IAAjD,CADD,EAEGP,IAAI,CAACL,MAAL,KAAgB,CAAhB,gBAAoB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAApB,gBAAoC,oBAAC,KAAD;AAAO,IAAA,KAAK,EAAGK,IAAI,CAACL,MAApB;AAA6B,IAAA,KAAK,EAAE;AAAEa,MAAAA,eAAe,EAAE3B;AAAnB,KAApC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFvC,CAND,CADD,CAFF,CADD,CADD;AAqBA,CArCD;;AAuCA,eAAeG,QAAf","sourcesContent":["import React, { useState } from 'react'\nimport ChatData from \"assets/data/chat.data.json\"\nimport { Badge, Input } from 'antd';\nimport AvatarStatus from 'components/shared-components/AvatarStatus';\nimport { COLOR_1 } from 'constants/ChartConstant';\nimport { SearchOutlined } from '@ant-design/icons';\nimport { useHistory } from \"react-router-dom\";\n\nconst ChatMenu = ({ match, location }) => {\n\tconst [ list, setList ] = useState(ChatData);\n\tlet history = useHistory();\n\tconst openChat = id => {\n\t\tconst data = list.map( elm => {\n\t\t\tif(elm.id === id) {\n\t\t\t\telm.unread = 0\n\t\t\t}\n\t\t\treturn elm\n\t\t})\n\t\tsetList(data)\n\t\thistory.push(`${match.url}/${id}`)\n\t}\n\n\tconst id = parseInt(location.pathname.match(/\\/([^/]+)\\/?$/)[1])\n\n\treturn (\n\t\t<div className=\"chat-menu\">\n\t\t\t<div className=\"chat-menu-list\">\n\t\t\t\t{\n\t\t\t\t\tlist.map( (item, i) => (\n\t\t\t\t\t\t<div \n\t\t\t\t\t\t\tkey={ `chat-item-${item.id}` } \n\t\t\t\t\t\t\tonClick={ () => openChat(item.id) } \n\t\t\t\t\t\t\tclassName={ `chat-menu-list-item ${ i === (list.length - 1)? 'last' : '' } ${ item.id === id? 'selected' : '' }` }\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\t<AvatarStatus src={ item.avatar } name={ item.name } subTitle={ item.msg[item.msg.length - 1].text } />\n\t\t\t\t\t\t\t<div className=\"text-right\">\n\t\t\t\t\t\t\t\t<div className=\"chat-menu-list-item-time\">{ item.time }</div>\n\t\t\t\t\t\t\t\t{ item.unread === 0 ? <span></span> : <Badge count={ item.unread } style={{ backgroundColor: COLOR_1 }} />}\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t))\n\t\t\t\t}\n\t\t\t</div>\n\t\t</div>\n\t)\n}\n\nexport default ChatMenu"]},"metadata":{},"sourceType":"module"}