{"ast":null,"code":"import _defineProperty from\"/Users/dhruvaagrawal/Desktop/Work/Spocto/CMS/app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty\";import _slicedToArray from\"/Users/dhruvaagrawal/Desktop/Work/Spocto/CMS/app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React,{useContext,useState}from'react';import{ScrumboardContext}from'./ScrumboardContext';import{Draggable}from'react-beautiful-dnd';import BoardCard from'./BoardCard';import{modalModeTypes}from'./utils';import EllipsisDropdown from'components/shared-components/EllipsisDropdown';import{Menu,Form,Input,Modal}from'antd';import{CloseOutlined,EditOutlined,DeleteOutlined,ExclamationCircleOutlined}from'@ant-design/icons';var RenameForm=function RenameForm(_ref){var title=_ref.title,finish=_ref.finish;var _Form$useForm=Form.useForm(),_Form$useForm2=_slicedToArray(_Form$useForm,1),form=_Form$useForm2[0];var onRenameSubmit=function onRenameSubmit(values){finish(values.title);};var onClose=function onClose(){form.submit();};return/*#__PURE__*/React.createElement(Form,{form:form,name:\"renameField\",onFinish:onRenameSubmit,layout:\"vertical\",autoComplete:\"off\",className:\"w-100\",initialValues:{title:title}},/*#__PURE__*/React.createElement(Form.Item,{name:\"title\",className:\"mb-0\"},/*#__PURE__*/React.createElement(Input,{autoFocus:true,value:title,suffix:/*#__PURE__*/React.createElement(\"div\",{className:\"cursor-pointer\",onClick:function onClick(){return onClose();}},/*#__PURE__*/React.createElement(CloseOutlined,null))})));};var Board=function Board(_ref2){var title=_ref2.title,contents=_ref2.contents,index=_ref2.index,isScrollable=_ref2.isScrollable,isCombineEnabled=_ref2.isCombineEnabled,useClone=_ref2.useClone;var _useContext=useContext(ScrumboardContext),updateModal=_useContext.updateModal,updateModalMode=_useContext.updateModalMode,updateCurrentListId=_useContext.updateCurrentListId,updateCardData=_useContext.updateCardData,columns=_useContext.columns,updateColumns=_useContext.updateColumns,ordered=_useContext.ordered,updateOrdered=_useContext.updateOrdered;var _useState=useState(''),_useState2=_slicedToArray(_useState,2),renameActive=_useState2[0],setRenameActive=_useState2[1];var newCard=function newCard(listId){updateModal(true);updateModalMode(modalModeTypes(0));updateCurrentListId(listId);};var onUpdateCardModal=function onUpdateCardModal(obj,listId){updateModal(true);updateModalMode(modalModeTypes(1));updateCurrentListId(listId);updateCardData(obj);};var onTitleClick=function onTitleClick(title){setRenameActive(title);};var onFinish=function onFinish(newTitle){if(newTitle){var newColumns={};delete Object.assign(newColumns,columns,_defineProperty({},newTitle,columns[title]))[title];var newOrder=ordered.map(function(elm){if(elm===title){return newTitle;}return elm;});updateColumns(newColumns);updateOrdered(newOrder);}setRenameActive('');};var onBoardDelete=function onBoardDelete(title){Modal.confirm({title:'Do you want to delete this board?',icon:/*#__PURE__*/React.createElement(ExclamationCircleOutlined,null),okText:'Yes',cancelText:'Cancel',onOk:function onOk(){var newOrder=ordered.filter(function(elm){return elm!==title;});var newColumns={};Object.assign(newColumns,columns);delete newColumns[title];updateColumns(newColumns);updateOrdered(newOrder);}});};return/*#__PURE__*/React.createElement(Draggable,{draggableId:title,index:index},function(provided,snapshot){return/*#__PURE__*/React.createElement(\"div\",Object.assign({className:\"board-column\",ref:provided.innerRef},provided.draggableProps),/*#__PURE__*/React.createElement(\"div\",Object.assign({className:\"board-title\"},provided.dragHandleProps),renameActive===title?/*#__PURE__*/React.createElement(RenameForm,{title:title,finish:onFinish}):/*#__PURE__*/React.createElement(React.Fragment,null,/*#__PURE__*/React.createElement(\"h4\",{className:\"mb-0\"},title),/*#__PURE__*/React.createElement(EllipsisDropdown,{menu:/*#__PURE__*/React.createElement(Menu,null,/*#__PURE__*/React.createElement(Menu.Item,{onClick:function onClick(){return onTitleClick(title);}},/*#__PURE__*/React.createElement(EditOutlined,null),/*#__PURE__*/React.createElement(\"span\",null,\"Rename Board\")),/*#__PURE__*/React.createElement(Menu.Item,{onClick:function onClick(){return onBoardDelete(title);}},/*#__PURE__*/React.createElement(DeleteOutlined,null),/*#__PURE__*/React.createElement(\"span\",null,\"Delete Board\")))}))),/*#__PURE__*/React.createElement(BoardCard,{listId:title,listType:\"CONTENT\",className:snapshot.isDragging?'is-dragging':'',contents:contents,internalScroll:isScrollable,isCombineEnabled:isCombineEnabled,useClone:useClone,cardData:onUpdateCardModal}),/*#__PURE__*/React.createElement(\"div\",{className:\"board-add\",onClick:function onClick(){return newCard(title);}},/*#__PURE__*/React.createElement(\"div\",null,\"Add task\")));});};export default Board;","map":{"version":3,"sources":["/Users/dhruvaagrawal/Desktop/Work/Spocto/CMS/app/src/views/app-views/journeys/journey-ivr/taskTracker/Board.js"],"names":["React","useContext","useState","ScrumboardContext","Draggable","BoardCard","modalModeTypes","EllipsisDropdown","Menu","Form","Input","Modal","CloseOutlined","EditOutlined","DeleteOutlined","ExclamationCircleOutlined","RenameForm","title","finish","useForm","form","onRenameSubmit","values","onClose","submit","Board","contents","index","isScrollable","isCombineEnabled","useClone","updateModal","updateModalMode","updateCurrentListId","updateCardData","columns","updateColumns","ordered","updateOrdered","renameActive","setRenameActive","newCard","listId","onUpdateCardModal","obj","onTitleClick","onFinish","newTitle","newColumns","Object","assign","newOrder","map","elm","onBoardDelete","confirm","icon","okText","cancelText","onOk","filter","provided","snapshot","innerRef","draggableProps","dragHandleProps","isDragging"],"mappings":"gVAAA,MAAOA,CAAAA,KAAP,EAAgBC,UAAhB,CAA4BC,QAA5B,KAA4C,OAA5C,CACA,OAASC,iBAAT,KAAkC,qBAAlC,CACA,OAASC,SAAT,KAA0B,qBAA1B,CACA,MAAOC,CAAAA,SAAP,KAAsB,aAAtB,CACA,OAASC,cAAT,KAA+B,SAA/B,CACA,MAAOC,CAAAA,gBAAP,KAA6B,+CAA7B,CACA,OAASC,IAAT,CAAeC,IAAf,CAAqBC,KAArB,CAA4BC,KAA5B,KAAyC,MAAzC,CACA,OAASC,aAAT,CAAwBC,YAAxB,CAAsCC,cAAtC,CAAsDC,yBAAtD,KAAuF,mBAAvF,CAEA,GAAMC,CAAAA,UAAU,CAAG,QAAbA,CAAAA,UAAa,MAAuB,IAApBC,CAAAA,KAAoB,MAApBA,KAAoB,CAAbC,MAAa,MAAbA,MAAa,mBAC1BT,IAAI,CAACU,OAAL,EAD0B,gDAClCC,IADkC,mBAGzC,GAAMC,CAAAA,cAAc,CAAG,QAAjBA,CAAAA,cAAiB,CAAAC,MAAM,CAAI,CAChCJ,MAAM,CAACI,MAAM,CAACL,KAAR,CAAN,CACA,CAFD,CAIA,GAAMM,CAAAA,OAAO,CAAG,QAAVA,CAAAA,OAAU,EAAM,CACnBH,IAAI,CAACI,MAAL,GACD,CAFF,CAIA,mBACC,oBAAC,IAAD,EACC,IAAI,CAAEJ,IADP,CAEC,IAAI,CAAC,aAFN,CAGC,QAAQ,CAAEC,cAHX,CAIC,MAAM,CAAC,UAJR,CAKC,YAAY,CAAC,KALd,CAMC,SAAS,CAAC,OANX,CAOC,aAAa,CAAE,CACdJ,KAAK,CAAEA,KADO,CAPhB,eAWC,oBAAC,IAAD,CAAM,IAAN,EAAW,IAAI,CAAC,OAAhB,CAAwB,SAAS,CAAC,MAAlC,eACC,oBAAC,KAAD,EACC,SAAS,KADV,CAEC,KAAK,CAAEA,KAFR,CAGC,MAAM,cACL,2BAAK,SAAS,CAAC,gBAAf,CAAgC,OAAO,CAAE,yBAAMM,CAAAA,OAAO,EAAb,EAAzC,eACC,oBAAC,aAAD,MADD,CAJF,EADD,CAXD,CADD,CAyBA,CApCD,CAsCA,GAAME,CAAAA,KAAK,CAAG,QAARA,CAAAA,KAAQ,OAA0E,IAAvER,CAAAA,KAAuE,OAAvEA,KAAuE,CAAhES,QAAgE,OAAhEA,QAAgE,CAAtDC,KAAsD,OAAtDA,KAAsD,CAA/CC,YAA+C,OAA/CA,YAA+C,CAAjCC,gBAAiC,OAAjCA,gBAAiC,CAAfC,QAAe,OAAfA,QAAe,iBACuC7B,UAAU,CAACE,iBAAD,CADjD,CAC/E4B,WAD+E,aAC/EA,WAD+E,CAClEC,eADkE,aAClEA,eADkE,CACjDC,mBADiD,aACjDA,mBADiD,CAC5BC,cAD4B,aAC5BA,cAD4B,CACZC,OADY,aACZA,OADY,CACHC,aADG,aACHA,aADG,CACYC,OADZ,aACYA,OADZ,CACqBC,aADrB,aACqBA,aADrB,eAE/CpC,QAAQ,CAAC,EAAD,CAFuC,wCAEhFqC,YAFgF,eAElEC,eAFkE,eAIvF,GAAMC,CAAAA,OAAO,CAAG,QAAVA,CAAAA,OAAU,CAAAC,MAAM,CAAI,CACzBX,WAAW,CAAC,IAAD,CAAX,CACAC,eAAe,CAAC1B,cAAc,CAAC,CAAD,CAAf,CAAf,CACA2B,mBAAmB,CAACS,MAAD,CAAnB,CACA,CAJD,CAMA,GAAMC,CAAAA,iBAAiB,CAAG,QAApBA,CAAAA,iBAAoB,CAACC,GAAD,CAAMF,MAAN,CAAiB,CAC1CX,WAAW,CAAC,IAAD,CAAX,CACAC,eAAe,CAAC1B,cAAc,CAAC,CAAD,CAAf,CAAf,CACA2B,mBAAmB,CAACS,MAAD,CAAnB,CACAR,cAAc,CAACU,GAAD,CAAd,CACA,CALD,CAOA,GAAMC,CAAAA,YAAY,CAAG,QAAfA,CAAAA,YAAe,CAAA5B,KAAK,CAAI,CAC7BuB,eAAe,CAACvB,KAAD,CAAf,CACA,CAFD,CAIA,GAAM6B,CAAAA,QAAQ,CAAG,QAAXA,CAAAA,QAAW,CAAAC,QAAQ,CAAI,CAC5B,GAAGA,QAAH,CAAa,CACZ,GAAMC,CAAAA,UAAU,CAAG,EAAnB,CACA,MAAOC,CAAAA,MAAM,CAACC,MAAP,CAAcF,UAAd,CAA0Bb,OAA1B,oBAAqCY,QAArC,CAAgDZ,OAAO,CAAClB,KAAD,CAAvD,GAAkEA,KAAlE,CAAP,CACA,GAAMkC,CAAAA,QAAQ,CAAGd,OAAO,CAACe,GAAR,CAAY,SAAAC,GAAG,CAAI,CACnC,GAAGA,GAAG,GAAKpC,KAAX,CAAkB,CACjB,MAAO8B,CAAAA,QAAP,CACA,CACD,MAAOM,CAAAA,GAAP,CACA,CALgB,CAAjB,CAMAjB,aAAa,CAACY,UAAD,CAAb,CACAV,aAAa,CAACa,QAAD,CAAb,CACA,CACDX,eAAe,CAAC,EAAD,CAAf,CACA,CAdD,CAgBA,GAAMc,CAAAA,aAAa,CAAG,QAAhBA,CAAAA,aAAgB,CAAArC,KAAK,CAAI,CAC9BN,KAAK,CAAC4C,OAAN,CAAc,CACbtC,KAAK,CAAE,mCADM,CAEbuC,IAAI,cAAE,oBAAC,yBAAD,MAFO,CAGbC,MAAM,CAAE,KAHK,CAIbC,UAAU,CAAE,QAJC,CAKbC,IALa,gBAKN,CACN,GAAMR,CAAAA,QAAQ,CAAGd,OAAO,CAACuB,MAAR,CAAe,SAAAP,GAAG,QAAIA,CAAAA,GAAG,GAAKpC,KAAZ,EAAlB,CAAjB,CACA,GAAM+B,CAAAA,UAAU,CAAG,EAAnB,CACAC,MAAM,CAACC,MAAP,CAAcF,UAAd,CAA0Bb,OAA1B,EACA,MAAOa,CAAAA,UAAU,CAAC/B,KAAD,CAAjB,CACAmB,aAAa,CAACY,UAAD,CAAb,CACAV,aAAa,CAACa,QAAD,CAAb,CACA,CAZY,CAAd,EAcA,CAfD,CAiBA,mBACC,oBAAC,SAAD,EAAW,WAAW,CAAElC,KAAxB,CAA+B,KAAK,CAAEU,KAAtC,EAEE,SAACkC,QAAD,CAAWC,QAAX,qBACC,yCAAK,SAAS,CAAC,cAAf,CAA8B,GAAG,CAAED,QAAQ,CAACE,QAA5C,EAA0DF,QAAQ,CAACG,cAAnE,eACC,yCAAK,SAAS,CAAC,aAAf,EAAiCH,QAAQ,CAACI,eAA1C,EAEE1B,YAAY,GAAKtB,KAAjB,cACC,oBAAC,UAAD,EAAY,KAAK,CAAEA,KAAnB,CAA0B,MAAM,CAAE6B,QAAlC,EADD,cAKC,qDACC,0BAAI,SAAS,CAAC,MAAd,EAAuB7B,KAAvB,CADD,cAEC,oBAAC,gBAAD,EAAkB,IAAI,cACrB,oBAAC,IAAD,mBACC,oBAAC,IAAD,CAAM,IAAN,EAAW,OAAO,CAAE,yBAAM4B,CAAAA,YAAY,CAAC5B,KAAD,CAAlB,EAApB,eACC,oBAAC,YAAD,MADD,cAEC,+CAFD,CADD,cAKC,oBAAC,IAAD,CAAM,IAAN,EAAW,OAAO,CAAE,yBAAMqC,CAAAA,aAAa,CAACrC,KAAD,CAAnB,EAApB,eACC,oBAAC,cAAD,MADD,cAEC,+CAFD,CALD,CADD,EAFD,CAPH,CADD,cA0BC,oBAAC,SAAD,EACC,MAAM,CAAEA,KADT,CAEC,QAAQ,CAAC,SAFV,CAGC,SAAS,CAAE6C,QAAQ,CAACI,UAAT,CAAsB,aAAtB,CAAsC,EAHlD,CAIC,QAAQ,CAAExC,QAJX,CAKC,cAAc,CAAEE,YALjB,CAMC,gBAAgB,CAAEC,gBANnB,CAOC,QAAQ,CAAEC,QAPX,CAQC,QAAQ,CAAEa,iBARX,EA1BD,cAoCC,2BAAK,SAAS,CAAC,WAAf,CAA2B,OAAO,CAAE,yBAAMF,CAAAA,OAAO,CAACxB,KAAD,CAAb,EAApC,eACC,0CADD,CApCD,CADD,EAFF,CADD,CAgDA,CAtGD,CAwGA,cAAeQ,CAAAA,KAAf","sourcesContent":["import React, { useContext, useState } from 'react'\nimport { ScrumboardContext } from './ScrumboardContext'\nimport { Draggable } from 'react-beautiful-dnd';\nimport BoardCard from './BoardCard';\nimport { modalModeTypes } from './utils';\nimport EllipsisDropdown from 'components/shared-components/EllipsisDropdown'\nimport { Menu, Form, Input, Modal } from 'antd'\nimport { CloseOutlined, EditOutlined, DeleteOutlined, ExclamationCircleOutlined } from '@ant-design/icons';\n\nconst RenameForm = ({ title, finish }) => {\n\tconst [form] = Form.useForm();\n\n\tconst onRenameSubmit = values => {\n\t\tfinish(values.title)\n\t};\n\n\tconst onClose = () => {\n    form.submit();\n  };\n \n\treturn (\n\t\t<Form \n\t\t\tform={form}\n\t\t\tname=\"renameField\" \n\t\t\tonFinish={onRenameSubmit} \n\t\t\tlayout=\"vertical\"\n\t\t\tautoComplete=\"off\"\n\t\t\tclassName=\"w-100\"\n\t\t\tinitialValues={{\n\t\t\t\ttitle: title,\n\t\t\t}}\n\t\t>\n\t\t\t<Form.Item name=\"title\" className=\"mb-0\">\n\t\t\t\t<Input \n\t\t\t\t\tautoFocus \n\t\t\t\t\tvalue={title} \n\t\t\t\t\tsuffix={\n\t\t\t\t\t\t<div className=\"cursor-pointer\" onClick={() => onClose()}>\n\t\t\t\t\t\t\t<CloseOutlined />\n\t\t\t\t\t\t</div>\n\t\t\t\t\t}\n\t\t\t\t/>\n\t\t\t</Form.Item>\n\t\t</Form>\n\t)\n}\n\nconst Board = ({ title, contents, index, isScrollable, isCombineEnabled, useClone }) => {\n\tconst { updateModal, updateModalMode, updateCurrentListId, updateCardData, columns, updateColumns, ordered, updateOrdered } = useContext(ScrumboardContext)\n\tconst [renameActive, setRenameActive] = useState('')\n\n\tconst newCard = listId => {\n\t\tupdateModal(true)\n\t\tupdateModalMode(modalModeTypes(0))\n\t\tupdateCurrentListId(listId)\n\t}\t\n\n\tconst onUpdateCardModal = (obj, listId) => {\n\t\tupdateModal(true)\n\t\tupdateModalMode(modalModeTypes(1))\n\t\tupdateCurrentListId(listId)\n\t\tupdateCardData(obj)\n\t}\n\t\n\tconst onTitleClick = title => {\n\t\tsetRenameActive(title)\n\t}\n\n\tconst onFinish = newTitle => {\n\t\tif(newTitle) {\n\t\t\tconst newColumns = {};\n\t\t\tdelete Object.assign(newColumns, columns, {[newTitle]: columns[title] })[title];\n\t\t\tconst newOrder = ordered.map(elm => {\n\t\t\t\tif(elm === title) {\n\t\t\t\t\treturn newTitle\n\t\t\t\t}\n\t\t\t\treturn elm\n\t\t\t})\n\t\t\tupdateColumns(newColumns)\n\t\t\tupdateOrdered(newOrder)\n\t\t}\n\t\tsetRenameActive('')\n\t};\n\n\tconst onBoardDelete = title => {\n\t\tModal.confirm({\n\t\t\ttitle: 'Do you want to delete this board?',\n\t\t\ticon: <ExclamationCircleOutlined />,\n\t\t\tokText: 'Yes',\n\t\t\tcancelText: 'Cancel',\n\t\t\tonOk() {\n\t\t\t\tconst newOrder = ordered.filter(elm => elm !== title)\n\t\t\t\tconst newColumns = {}\n\t\t\t\tObject.assign(newColumns, columns)\n\t\t\t\tdelete newColumns[title]\n\t\t\t\tupdateColumns(newColumns)\n\t\t\t\tupdateOrdered(newOrder)\n\t\t\t},\n\t\t});\n\t}\n\t\n\treturn (\n\t\t<Draggable draggableId={title} index={index}>\n\t\t\t{\n\t\t\t\t(provided, snapshot) => (\n\t\t\t\t\t<div className=\"board-column\" ref={provided.innerRef} {...provided.draggableProps}>\n\t\t\t\t\t\t<div className=\"board-title\" {...provided.dragHandleProps}>\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\trenameActive === title ? (\n\t\t\t\t\t\t\t\t\t<RenameForm title={title} finish={onFinish} />\n\t\t\t\t\t\t\t\t)\n\t\t\t\t\t\t\t\t:\n\t\t\t\t\t\t\t\t(\n\t\t\t\t\t\t\t\t\t<>\n\t\t\t\t\t\t\t\t\t\t<h4 className=\"mb-0\" >{title}</h4>\n\t\t\t\t\t\t\t\t\t\t<EllipsisDropdown menu={\n\t\t\t\t\t\t\t\t\t\t\t<Menu>\n\t\t\t\t\t\t\t\t\t\t\t\t<Menu.Item onClick={() => onTitleClick(title)}>\n\t\t\t\t\t\t\t\t\t\t\t\t\t<EditOutlined />\n\t\t\t\t\t\t\t\t\t\t\t\t\t<span>Rename Board</span>\n\t\t\t\t\t\t\t\t\t\t\t\t</Menu.Item>\n\t\t\t\t\t\t\t\t\t\t\t\t<Menu.Item onClick={() => onBoardDelete(title)}>\n\t\t\t\t\t\t\t\t\t\t\t\t\t<DeleteOutlined />\n\t\t\t\t\t\t\t\t\t\t\t\t\t<span>Delete Board</span>\n\t\t\t\t\t\t\t\t\t\t\t\t</Menu.Item>\n\t\t\t\t\t\t\t\t\t\t\t</Menu>\n\t\t\t\t\t\t\t\t\t\t}/>\n\t\t\t\t\t\t\t\t\t</>\n\t\t\t\t\t\t\t\t)\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t<BoardCard\n\t\t\t\t\t\t\tlistId={title}\n\t\t\t\t\t\t\tlistType=\"CONTENT\"\n\t\t\t\t\t\t\tclassName={snapshot.isDragging ? 'is-dragging' : ''}\n\t\t\t\t\t\t\tcontents={contents}\n\t\t\t\t\t\t\tinternalScroll={isScrollable}\n\t\t\t\t\t\t\tisCombineEnabled={isCombineEnabled}\n\t\t\t\t\t\t\tuseClone={useClone}\n\t\t\t\t\t\t\tcardData={onUpdateCardModal}\n\t\t\t\t\t\t/>\n\t\t\t\t\t\t<div className=\"board-add\" onClick={() => newCard(title)}>\n\t\t\t\t\t\t\t<div>Add task</div>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\t\t\t\t)\n\t\t\t}\n\t\t</Draggable>\n\t)\n}\n\nexport default Board"]},"metadata":{},"sourceType":"module"}