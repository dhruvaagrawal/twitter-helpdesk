{"ast":null,"code":"var _jsxFileName = \"/Users/dhruvaagrawal/Desktop/Work/Spocto/CMS/app/src/views/app-views/universal-search/index.js\";\nimport React, { useState } from 'react';\nimport { Input, Card, Typography, Form, Checkbox, Tag } from 'antd';\nimport { Link } from 'react-router-dom';\nimport axios from 'axios';\nimport utils from 'utils';\nimport { getLangColor, getCustomerColor, getProductColor, getTransactionColor, getUserColor, getCategoryColor, getTypeColor, getSegmentColor } from 'constants/TagColor';\nconst {\n  Search\n} = Input;\nconst {\n  Title,\n  Paragraph\n} = Typography;\nexport default function UniversalSearch() {\n  const [esData, setEsData] = useState([]);\n  const [isChecked, setIsChecked] = useState(false);\n\n  const onSearch = async value => {\n    let emptyArray = [];\n    await axios({\n      method: 'get',\n      url: `https://68ef17ae206a41b485fa164d62a92012.us-east-1.aws.found.io:9243/sc_transaction_demo_v2/_search?q=${value}&size=10000`,\n      auth: {\n        username: 'sp_es_write',\n        password: 'JxpZzs8hRV4X7'\n      }\n    }).then(res => {\n      res.data.hits.hits.map(row => emptyArray.push(row._source));\n      console.log(emptyArray);\n      setEsData(emptyArray);\n    });\n  };\n\n  const tableColumns = [{\n    title: 'Customer Name',\n    key: 'customer_name',\n    dataIndex: 'customer_name',\n    ...getColumnSearchProps('customer_name'),\n    render: (_, record) => /*#__PURE__*/React.createElement(\"div\", {\n      className: \"d-flex\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 5\n      }\n    }, /*#__PURE__*/React.createElement(Tag, {\n      color: getCustomerColor(record.customer_name),\n      style: {\n        letterSpacing: '1px'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 6\n      }\n    }, record.customer_name)),\n    sorter: (a, b) => utils.antdTableSorter(a, b, 'customer_name'),\n    colSpan: 1,\n    width: '5%'\n  }, {\n    title: 'Content Name',\n    key: 'content_name',\n    dataIndex: 'content_name',\n    ...getColumnSearchProps('content_name'),\n    render: (_, record) => /*#__PURE__*/React.createElement(\"div\", {\n      className: \"d-flex\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 5\n      }\n    }, /*#__PURE__*/React.createElement(\"span\", {\n      style: {\n        fontSize: '0.75rem'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 6\n      }\n    }, record.content_name)),\n    sorter: (a, b) => utils.antdTableSorter(a, b, 'content_name'),\n    colSpan: 1,\n    width: '8.5%'\n  }, {\n    title: 'Product',\n    key: 'product',\n    dataIndex: 'product',\n    ...getColumnSearchProps('product'),\n    render: (_, record) => /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Tag, {\n      color: getProductColor(record.product),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 7\n      }\n    }, record.product)),\n    sorter: (a, b) => utils.antdTableSorter(a, b, 'product'),\n    colSpan: 1\n  }, {\n    title: 'Segment',\n    key: 'segment',\n    dataIndex: 'segment',\n    ...getColumnSearchProps('segment'),\n    render: (_, record) => /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Tag, {\n      color: getSegmentColor(record.segment),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 7\n      }\n    }, record.segment)),\n    sorter: (a, b) => utils.antdTableSorter(a, b, 'segment'),\n    colSpan: 1\n  }, {\n    title: 'Type',\n    key: 'type',\n    dataIndex: 'type',\n    ...getColumnSearchProps('type'),\n    render: (_, record) => /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Tag, {\n      color: getTypeColor(record.type),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 7\n      }\n    }, record.type)),\n    sorter: (a, b) => utils.antdTableSorter(a, b, 'type'),\n    colSpan: 1\n  }, {\n    title: 'Level',\n    key: 'level',\n    dataIndex: 'level',\n    ...getColumnSearchProps('level'),\n    render: (_, record) => /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Tag, {\n      color: record.level === 1 ? 'gold' : record.level === 2 ? 'orange' : 'red',\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 7\n      }\n    }, record.level)),\n    sorter: (a, b) => Number(a.level) - Number(b.level),\n    colSpan: 1\n  }, {\n    title: 'Category',\n    key: 'category',\n    dataIndex: 'category',\n    ...getColumnSearchProps('category'),\n    render: (_, record) => /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Tag, {\n      color: getCategoryColor(record.category),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 7\n      }\n    }, record.category)),\n    sorter: (a, b) => utils.antdTableSorter(a, b, 'category'),\n    colSpan: 1\n  }, {\n    title: 'Language',\n    key: 'language',\n    dataIndex: 'language',\n    ...getColumnSearchProps('language'),\n    render: (_, record) => /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Tag, {\n      color: getLangColor(record.language),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 125,\n        columnNumber: 7\n      }\n    }, record.language)),\n    sorter: (a, b) => utils.antdTableSorter(a, b, 'language'),\n    colSpan: 1\n  }, {\n    title: 'Content',\n    key: 'content',\n    dataIndex: 'content',\n    ...getColumnSearchProps('content'),\n    render: (_, record) => /*#__PURE__*/React.createElement(\"div\", {\n      className: \"d-flex\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 136,\n        columnNumber: 5\n      }\n    }, /*#__PURE__*/React.createElement(\"span\", {\n      style: {\n        fontSize: '0.75rem'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 137,\n        columnNumber: 5\n      }\n    }, record.content)),\n    sorter: (a, b) => utils.antdTableSorter(a, b, 'content'),\n    colSpan: 1,\n    width: '15%'\n  }, {\n    title: 'Translated Content',\n    key: 'translated_content',\n    dataIndex: 'translated_content',\n    ...getColumnSearchProps('translated_content'),\n    render: (_, record) => /*#__PURE__*/React.createElement(\"div\", {\n      className: \"d-flex\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 150,\n        columnNumber: 5\n      }\n    }, /*#__PURE__*/React.createElement(\"span\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 151,\n        columnNumber: 5\n      }\n    }, record.translated_content)),\n    sorter: (a, b) => utils.antdTableSorter(a, b, 'translated_content'),\n    colSpan: 1\n  }, {\n    title: 'Version',\n    dataIndex: 'version',\n    key: 'version',\n    ...getColumnSearchProps('version'),\n    render: (_, record) => /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Tag, {\n      color: record.version === 1 ? 'geekblue' : 'success',\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 163,\n        columnNumber: 7\n      }\n    }, record.version)),\n    sorter: (a, b) => a.version - b.version,\n    colSpan: 1\n  }, {\n    title: 'Transaction Status',\n    key: 'status',\n    dataIndex: 'status',\n    ...getColumnSearchProps('transaction_status'),\n    render: (_, record) => /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Tag, {\n      color: getTransactionColor(record.status),\n      onClick: changeStatus,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 174,\n        columnNumber: 7\n      }\n    }, record.status)),\n    sorter: (a, b) => utils.antdTableSorter(a, b, 'status'),\n    colSpan: 1\n  }, {\n    title: 'Last Updated',\n    key: 'last_updated_on',\n    dataIndex: 'last_updated_on',\n    ...getColumnSearchProps('last_updated_on'),\n    render: (_, record) => /*#__PURE__*/React.createElement(\"span\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 185,\n        columnNumber: 5\n      }\n    }, record.last_updated_on.split(' GMT')[0]),\n    sorter: (a, b) => utils.antdTableSorter(a, b, 'last_updated_on'),\n    colSpan: 1\n  }, {\n    title: 'Last Updated By',\n    key: 'last_updated_by',\n    dataIndex: 'last_updated_by',\n    ...getColumnSearchProps('last_updated_by'),\n    render: (_, record) => /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Tag, {\n      color: getUserColor(record.last_updated_by),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 196,\n        columnNumber: 7\n      }\n    }, record.last_updated_by)),\n    sorter: (a, b) => utils.antdTableSorter(a, b, 'last_updated_by'),\n    colSpan: 1\n  }, {\n    title: 'Recording Link',\n    key: 'recording_link',\n    dataIndex: 'recording_link',\n    ...getColumnSearchProps('recording_link'),\n    render: (_, record) => /*#__PURE__*/React.createElement(\"div\", {\n      className: \"d-flex\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 207,\n        columnNumber: 5\n      }\n    }, /*#__PURE__*/React.createElement(\"span\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 208,\n        columnNumber: 5\n      }\n    }, record.recording_link)),\n    sorter: (a, b) => utils.antdTableSorter(a, b, 'recording_link'),\n    colSpan: 1\n  }, {\n    title: '',\n    key: 'actions',\n    dataIndex: 'actions',\n    render: (_, elm) => /*#__PURE__*/React.createElement(\"div\", {\n      className: \"text-right\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 219,\n        columnNumber: 5\n      }\n    }, /*#__PURE__*/React.createElement(EllipsisDropdown, {\n      menu: dropdownMenu(elm),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 220,\n        columnNumber: 6\n      }\n    })),\n    colSpan: 1\n  }];\n\n  const onChange = e => setIsChecked(e.target.value);\n\n  return /*#__PURE__*/React.createElement(Card, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 230,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Form, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 231,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Form.Item, {\n    justify: \"center\",\n    style: {\n      textAlign: 'center',\n      marginTop: '1.5%'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 232,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Title, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 233,\n      columnNumber: 21\n    }\n  }, \"Spocto Content Search\")), /*#__PURE__*/React.createElement(Form.Item, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 235,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Search, {\n    placeholder: \"Input Search Text\",\n    onSearch: onSearch,\n    style: {\n      width: '100%'\n    },\n    allowClear: true,\n    enterButton: true,\n    size: \"large\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 236,\n      columnNumber: 21\n    }\n  }), /*#__PURE__*/React.createElement(Paragraph, {\n    className: \"mt-2 ml-2\",\n    style: {\n      fontSize: '0.7rem'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 244,\n      columnNumber: 21\n    }\n  }, \"Type Client Name, Language, Product, Category etc... e.g. ICICI Bank, Axis Bank or English, Hindi or Loan, Credit Card or Basic, Detailed\"), /*#__PURE__*/React.createElement(Paragraph, {\n    className: \"mt-2 ml-2\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 245,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(Checkbox, {\n    onChange: onChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 245,\n      columnNumber: 54\n    }\n  }), \"Please check this box to indicate that you are authorized to use Spocto Content Search tool and agree to the \", /*#__PURE__*/React.createElement(Link, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 245,\n      columnNumber: 197\n    }\n  }, \"terms and condition\"), \".\"))), isChecked && /*#__PURE__*/React.createElement(Card, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 249,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"table-responsive\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 250,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(Table, {\n    bordered: true,\n    columns: tableColumns,\n    dataSource: esData,\n    rowKey: \"content_name\",\n    scroll: {\n      x: 2500\n    },\n    pagination: {\n      pageSize: 10\n    },\n    showQuickJumper: true,\n    responsive: true,\n    size: \"small\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 251,\n      columnNumber: 25\n    }\n  }))));\n}","map":{"version":3,"sources":["/Users/dhruvaagrawal/Desktop/Work/Spocto/CMS/app/src/views/app-views/universal-search/index.js"],"names":["React","useState","Input","Card","Typography","Form","Checkbox","Tag","Link","axios","utils","getLangColor","getCustomerColor","getProductColor","getTransactionColor","getUserColor","getCategoryColor","getTypeColor","getSegmentColor","Search","Title","Paragraph","UniversalSearch","esData","setEsData","isChecked","setIsChecked","onSearch","value","emptyArray","method","url","auth","username","password","then","res","data","hits","map","row","push","_source","console","log","tableColumns","title","key","dataIndex","getColumnSearchProps","render","_","record","customer_name","letterSpacing","sorter","a","b","antdTableSorter","colSpan","width","fontSize","content_name","product","segment","type","level","Number","category","language","content","translated_content","version","status","changeStatus","last_updated_on","split","last_updated_by","recording_link","elm","dropdownMenu","onChange","e","target","textAlign","marginTop","x","pageSize"],"mappings":"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","sourcesContent":["import React, { useState } from 'react'\nimport { Input, Card, Typography, Form, Checkbox, Tag } from 'antd'\nimport { Link } from 'react-router-dom'\nimport axios from 'axios'\nimport utils from 'utils'\nimport { getLangColor, getCustomerColor, getProductColor, getTransactionColor, getUserColor, getCategoryColor, getTypeColor, getSegmentColor } from 'constants/TagColor'\n\nconst { Search } = Input\nconst { Title, Paragraph } = Typography\n\nexport default function UniversalSearch() {\n\n    const [ esData, setEsData ] = useState([])\n    const [ isChecked, setIsChecked ] = useState(false)\n\n    const onSearch = async value => {\n\n        let emptyArray = []\n\n        await axios({\n            method: 'get',\n            url: `https://68ef17ae206a41b485fa164d62a92012.us-east-1.aws.found.io:9243/sc_transaction_demo_v2/_search?q=${value}&size=10000`,\n            auth: {\n                username: 'sp_es_write',\n                password: 'JxpZzs8hRV4X7'\n            }\n        })\n        .then( res => { \n            res.data.hits.hits.map( row => emptyArray.push(row._source) )\n            console.log(emptyArray)\n            setEsData(emptyArray)\n        })\n    }\n\n    const tableColumns = [\n\t\t{\n\t\t\ttitle: 'Customer Name',\n\t\t\tkey: 'customer_name',\n\t\t\tdataIndex: 'customer_name',\n\t\t\t...getColumnSearchProps('customer_name'),\n\t\t\trender: (_, record) => (\n\t\t\t\t<div className=\"d-flex\">\n\t\t\t\t\t<Tag color={ getCustomerColor(record.customer_name) } style={{ letterSpacing: '1px' }}>{ record.customer_name }</Tag>\n\t\t\t\t</div>\n\t\t\t),\n\t\t\tsorter: (a, b) => utils.antdTableSorter(a, b, 'customer_name'),\n\t\t\tcolSpan: 1,\n\t\t\twidth: '5%'\n        },\n\t\t{\n\t\t\ttitle: 'Content Name',\n\t\t\tkey: 'content_name',\n\t\t\tdataIndex: 'content_name',\n\t\t\t...getColumnSearchProps('content_name'),\n\t\t\trender: (_, record) => (\n\t\t\t\t<div className=\"d-flex\">\n\t\t\t\t\t<span style={{ fontSize: '0.75rem'}}>{ record.content_name }</span>\n\t\t\t\t</div>\n\t\t\t),\n\t\t\tsorter: (a, b) => utils.antdTableSorter(a, b, 'content_name'),\n\t\t\tcolSpan: 1,\n\t\t\twidth: '8.5%'\n        },\n        {\n\t\t\ttitle: 'Product',\n\t\t\tkey: 'product',\n\t\t\tdataIndex: 'product',\n\t\t\t...getColumnSearchProps('product'),\n\t\t\trender: (_, record) => (\n\t\t\t\t<><Tag color={ getProductColor(record.product) }>{ record.product }</Tag></>\n\t\t\t),\n\t\t\tsorter: (a, b) => utils.antdTableSorter(a, b, 'product'),\n\t\t\tcolSpan: 1\n        },\n        {\n\t\t\ttitle: 'Segment',\n\t\t\tkey: 'segment',\n\t\t\tdataIndex: 'segment',\n\t\t\t...getColumnSearchProps('segment'),\n\t\t\trender: (_, record) => (\n\t\t\t\t<><Tag color={ getSegmentColor(record.segment) }>{ record.segment }</Tag></>\t\n\t\t\t),\n\t\t\tsorter: (a, b) => utils.antdTableSorter(a, b, 'segment'),\n\t\t\tcolSpan: 1\n        },\n        {\n\t\t\ttitle: 'Type',\n\t\t\tkey: 'type',\n\t\t\tdataIndex: 'type',\n\t\t\t...getColumnSearchProps('type'),\n\t\t\trender: (_, record) => (\n\t\t\t\t<><Tag color={ getTypeColor(record.type) }>{ record.type }</Tag></>\t\n\t\t\t),\n\t\t\tsorter: (a, b) => utils.antdTableSorter(a, b, 'type'),\n\t\t\tcolSpan: 1\n        },\n        {\n\t\t\ttitle: 'Level',\n\t\t\tkey: 'level',\n\t\t\tdataIndex: 'level',\n\t\t\t...getColumnSearchProps('level'),\n\t\t\trender: (_, record) => (\n\t\t\t\t<><Tag color={ record.level === 1 ? 'gold' : record.level === 2 ? 'orange' : 'red' }>{ record.level }</Tag></>\t\n\t\t\t),\n\t\t\tsorter: (a, b) => Number(a.level) - Number(b.level),\n\t\t\tcolSpan: 1\n        },\n        {\n\t\t\ttitle: 'Category',\n\t\t\tkey: 'category',\n\t\t\tdataIndex: 'category',\n\t\t\t...getColumnSearchProps('category'),\n\t\t\trender: (_, record) => (\n\t\t\t\t<><Tag color={ getCategoryColor(record.category) }>{ record.category }</Tag></>\t\n\t\t\t),\n\t\t\tsorter: (a, b) => utils.antdTableSorter(a, b, 'category'),\n\t\t\tcolSpan: 1\n\t\t},\n\t\t{\n\t\t\ttitle: 'Language',\n\t\t\tkey: 'language',\n\t\t\tdataIndex: 'language',\n\t\t\t...getColumnSearchProps('language'),\n\t\t\trender: (_, record) => (\n\t\t\t\t<><Tag color={ getLangColor(record.language) }>{ record.language }</Tag></>\n\t\t\t),\n\t\t\tsorter: (a, b) => utils.antdTableSorter(a, b, 'language'),\n\t\t\tcolSpan: 1\n\t\t},\n\t\t{\n\t\t\ttitle: 'Content',\n\t\t\tkey: 'content',\n\t\t\tdataIndex: 'content',\n\t\t\t...getColumnSearchProps('content'),\n\t\t\trender: (_, record) => (\n\t\t\t\t<div className=\"d-flex\">\n\t\t\t\t<span style={{ fontSize: '0.75rem'}}>{ record.content }</span>\n\t\t\t</div>\n\t\t\t),\n\t\t\tsorter: (a, b) => utils.antdTableSorter(a, b, 'content'),\n\t\t\tcolSpan: 1,\n\t\t\twidth: '15%'\n\t\t},\n\t\t{\n\t\t\ttitle: 'Translated Content',\n\t\t\tkey: 'translated_content',\n\t\t\tdataIndex: 'translated_content',\n\t\t\t...getColumnSearchProps('translated_content'),\n\t\t\trender: (_, record) => (\n\t\t\t\t<div className=\"d-flex\">\n\t\t\t\t<span>{ record.translated_content }</span>\n\t\t\t</div>\n\t\t\t),\n\t\t\tsorter: (a, b) => utils.antdTableSorter(a, b, 'translated_content'),\n\t\t\tcolSpan: 1,\n\t\t},\n\t\t{\n\t\t\ttitle: 'Version',\n\t\t\tdataIndex: 'version',\n\t\t\tkey: 'version',\n\t\t\t...getColumnSearchProps('version'),\n\t\t\trender: (_, record) => (\n\t\t\t\t<><Tag color={ record.version === 1 ? 'geekblue' : 'success' }>{ record.version }</Tag></>\n\t\t\t),\n\t\t\tsorter: (a, b) => a.version - b.version,\n\t\t\tcolSpan: 1\n\t\t},\n        {\n\t\t\ttitle: 'Transaction Status',\n\t\t\tkey: 'status',\n\t\t\tdataIndex: 'status',\n\t\t\t...getColumnSearchProps('transaction_status'),\n\t\t\trender: (_, record) => (\n\t\t\t\t<><Tag color={ getTransactionColor(record.status) } onClick={ changeStatus }>{ record.status }</Tag></>\n\t\t\t),\n\t\t\tsorter: (a, b) => utils.antdTableSorter(a, b, 'status'),\n\t\t\tcolSpan: 1\n\t\t},\n        {\n\t\t\ttitle: 'Last Updated',\n\t\t\tkey: 'last_updated_on',\n\t\t\tdataIndex: 'last_updated_on',\n\t\t\t...getColumnSearchProps('last_updated_on'),\n\t\t\trender: (_, record) => (\n\t\t\t\t<span>{ record.last_updated_on.split(' GMT')[0] }</span>\n\t\t\t),\n\t\t\tsorter: (a, b) => utils.antdTableSorter(a, b, 'last_updated_on'),\n\t\t\tcolSpan: 1\n\t\t},\n\t\t{\n\t\t\ttitle: 'Last Updated By',\n\t\t\tkey: 'last_updated_by',\n\t\t\tdataIndex: 'last_updated_by',\n\t\t\t...getColumnSearchProps('last_updated_by'),\n\t\t\trender: (_, record) => (\n\t\t\t\t<><Tag color={ getUserColor(record.last_updated_by) }>{ record.last_updated_by }</Tag></>\n\t\t\t),\n\t\t\tsorter: (a, b) => utils.antdTableSorter(a, b, 'last_updated_by'),\n\t\t\tcolSpan: 1\n\t\t},\n\t\t{\n\t\t\ttitle: 'Recording Link',\n\t\t\tkey: 'recording_link',\n\t\t\tdataIndex: 'recording_link',\n\t\t\t...getColumnSearchProps('recording_link'),\n\t\t\trender: (_, record) => (\n\t\t\t\t<div className=\"d-flex\">\n\t\t\t\t<span>{ record.recording_link }</span>\n\t\t\t</div>\n\t\t\t),\n\t\t\tsorter: (a, b) => utils.antdTableSorter(a, b, 'recording_link'),\n\t\t\tcolSpan: 1\n\t\t},\n\t\t{\n\t\t\ttitle: '',\n\t\t\tkey: 'actions',\n\t\t\tdataIndex: 'actions',\n\t\t\trender: (_, elm) => (\n\t\t\t\t<div className=\"text-right\">\n\t\t\t\t\t<EllipsisDropdown menu={ dropdownMenu(elm) }/>\n\t\t\t\t</div>\n\t\t\t),\n\t\t\tcolSpan: 1\n\t\t}\n\t]\n\n    const onChange = e => setIsChecked(e.target.value) \n\n    return (\n        <Card>\n            <Form>\n                <Form.Item justify=\"center\" style={{ textAlign: 'center', marginTop: '1.5%' }}>\n                    <Title>Spocto Content Search</Title>\n                </Form.Item>\n                <Form.Item>\n                    <Search \n                        placeholder=\"Input Search Text\" \n                        onSearch={ onSearch } \n                        style={{ width: '100%' }}                     \n                        allowClear\n                        enterButton\n                        size=\"large\" \n                    />\n                    <Paragraph className=\"mt-2 ml-2\" style={{ fontSize: '0.7rem'}}>Type Client Name, Language, Product, Category etc... e.g. ICICI Bank, Axis Bank or English, Hindi or Loan, Credit Card or Basic, Detailed</Paragraph>\n                    <Paragraph className=\"mt-2 ml-2\"><Checkbox onChange={ onChange } />Please check this box to indicate that you are authorized to use Spocto Content Search tool and agree to the <Link>terms and condition</Link>.</Paragraph>\n                </Form.Item>\n            </Form>\n            {  isChecked && \n                <Card>\n                    <div className=\"table-responsive\">\n                        <Table\n                            bordered\n                            columns={ tableColumns } \n                            dataSource={ esData } \n                            rowKey='content_name' \n                            scroll={{ x: 2500 }}\n                            pagination={{ pageSize: 10 }}\n                            showQuickJumper\n                            responsive={ true }\n                            size=\"small\"\n                        />\n                    </div>\n                </Card>\n            }\n        </Card>\n    )\n}"]},"metadata":{},"sourceType":"module"}