{"ast":null,"code":"var _jsxFileName = \"/Users/dhruvaagrawal/Desktop/Work/Spocto/CMS/app/src/views/app-views/journeys/journey-ivr/transaction/index.js\";\n\n/* eslint-disable no-unused-vars */\nimport React, { useState } from 'react';\nimport { Card, Table, Select, Input, Button, Badge, Menu, Tag, Pagination } from 'antd'; // import OrderListData from 'assets/data/order-list.data.json'\n\nimport { EyeOutlined, CloudDownloadOutlined, SearchOutlined, PlusCircleOutlined } from '@ant-design/icons';\nimport EllipsisDropdown from 'components/shared-components/EllipsisDropdown';\nimport Flex from 'components/shared-components/Flex';\nimport NumberFormat from 'react-number-format';\nimport moment from 'moment';\nimport { DATE_FORMAT_DD_MM_YYYY } from 'constants/DateConstant';\nimport utils from 'utils';\nconst {\n  Option\n} = Select;\n\nconst getTransactionStatus = status => {\n  if (status === 'Client Approved') return 'volcano';\n  if (status === 'IVR') return 'ivr';\n  if (status === 'Testing') return 'testing';\n  if (status === 'Approved') return 'approved';\n  return '';\n};\n\nconst getUserStatus = status => {\n  if (status === 'Administrator') return 'red';\n  if (status === 'Campaign Team') return 'blue';\n  if (status === 'DevOps Team') return 'cyan';\n};\n\nconst itemRender = (current, type, originalElement) => {\n  if (type === 'prev') {\n    return /*#__PURE__*/React.createElement(\"a\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 14\n      }\n    }, \"Previous\");\n  }\n\n  if (type === 'next') {\n    return /*#__PURE__*/React.createElement(\"a\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 14\n      }\n    }, \"Next\");\n  }\n\n  return originalElement;\n};\n\nconst transactionStatusList = ['Client Approved', 'IVR', 'Testing', 'Approved'];\nexport default function Dashboard({\n  esData\n}) {\n  const [list, setList] = useState(esData);\n  const [selectedRows, setSelectedRows] = useState([]);\n  const [selectedRowKeys, setSelectedRowKeys] = useState([]);\n\n  const handleShowStatus = value => {\n    if (value !== 'All') {\n      const key = 'transactionStatus';\n      const data = utils.filterArray(esData, key, value);\n      setList(data);\n    } else {\n      setList(esData);\n    }\n  };\n\n  const dropdownMenu = row => /*#__PURE__*/React.createElement(Menu, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 3\n    }\n  }, /*#__PURE__*/React.createElement(Menu.Item, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 4\n    }\n  }, /*#__PURE__*/React.createElement(Flex, {\n    alignItems: \"center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(EyeOutlined, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 6\n    }\n  }), /*#__PURE__*/React.createElement(\"span\", {\n    className: \"ml-2\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 6\n    }\n  }, \"View Details\"))), /*#__PURE__*/React.createElement(Menu.Item, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 4\n    }\n  }, /*#__PURE__*/React.createElement(Flex, {\n    alignItems: \"center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(PlusCircleOutlined, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 6\n    }\n  }), /*#__PURE__*/React.createElement(\"span\", {\n    className: \"ml-2\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 6\n    }\n  }, \"Add to remark\"))));\n\n  const tableColumns = [{\n    title: 'ID',\n    dataIndex: 'id'\n  }, {\n    title: 'Version',\n    key: 'version'\n  }, {\n    title: 'Content Name',\n    dataIndex: 'contentName',\n    render: (_, record) => /*#__PURE__*/React.createElement(\"div\", {\n      className: \"d-flex\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 5\n      }\n    }, /*#__PURE__*/React.createElement(\"span\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 6\n      }\n    }, record.contentName)),\n    sorter: (a, b) => utils.antdTableSorter(a, b, 'contentName')\n  }, {\n    title: 'Client Name',\n    dataIndex: 'clientName',\n    render: (_, record) => /*#__PURE__*/React.createElement(\"div\", {\n      className: \"d-flex\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 5\n      }\n    }, /*#__PURE__*/React.createElement(\"span\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 6\n      }\n    }, record.clientName)),\n    sorter: (a, b) => utils.antdTableSorter(a, b, 'clientName')\n  }, {\n    title: 'Channel',\n    dataIndex: 'channel',\n    render: (_, record) => /*#__PURE__*/React.createElement(\"div\", {\n      className: \"d-flex\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 5\n      }\n    }, /*#__PURE__*/React.createElement(\"span\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 6\n      }\n    }, record.channel)),\n    sorter: (a, b) => utils.antdTableSorter(a, b, 'channel')\n  }, {\n    title: 'Product',\n    dataIndex: 'prooduct',\n    render: (_, record) => /*#__PURE__*/React.createElement(\"div\", {\n      className: \"d-flex\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 118,\n        columnNumber: 5\n      }\n    }, /*#__PURE__*/React.createElement(\"span\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 119,\n        columnNumber: 6\n      }\n    }, record.product)),\n    sorter: (a, b) => utils.antdTableSorter(a, b, 'product')\n  }, {\n    title: 'Segment',\n    dataIndex: 'segment',\n    render: (_, record) => /*#__PURE__*/React.createElement(\"div\", {\n      className: \"d-flex\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 128,\n        columnNumber: 5\n      }\n    }, /*#__PURE__*/React.createElement(\"span\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 129,\n        columnNumber: 6\n      }\n    }, record.segment)),\n    sorter: (a, b) => utils.antdTableSorter(a, b, 'segment')\n  }, {\n    title: 'Stage',\n    dataIndex: 'stage',\n    render: (_, record) => /*#__PURE__*/React.createElement(\"div\", {\n      className: \"d-flex\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 138,\n        columnNumber: 5\n      }\n    }, /*#__PURE__*/React.createElement(\"span\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 139,\n        columnNumber: 6\n      }\n    }, record.stage)),\n    sorter: (a, b) => utils.antdTableSorter(a, b, 'stage')\n  }, {\n    title: 'Type',\n    dataIndex: 'type',\n    render: (_, record) => /*#__PURE__*/React.createElement(\"div\", {\n      className: \"d-flex\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 148,\n        columnNumber: 5\n      }\n    }, /*#__PURE__*/React.createElement(\"span\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 149,\n        columnNumber: 6\n      }\n    }, record.type)),\n    sorter: (a, b) => utils.antdTableSorter(a, b, 'type')\n  }, {\n    title: 'Level',\n    dataIndex: 'level',\n    render: (_, record) => /*#__PURE__*/React.createElement(\"div\", {\n      className: \"d-flex\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 158,\n        columnNumber: 5\n      }\n    }, /*#__PURE__*/React.createElement(\"span\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 159,\n        columnNumber: 6\n      }\n    }, record.level)),\n    sorter: (a, b) => utils.antdTableSorter(a, b, 'level')\n  }, {\n    title: 'Transaction Status',\n    dataIndex: 'transactionStatus',\n    render: (_, record) => /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Tag, {\n      color: getTransactionStatus(record.transactionStatus),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 168,\n        columnNumber: 7\n      }\n    }, record.transactionStatus)),\n    sorter: (a, b) => utils.antdTableSorter(a, b, 'transactionStatus')\n  }, {\n    title: 'Due Date',\n    dataIndex: 'dueDate',\n    render: (_, record) => /*#__PURE__*/React.createElement(\"span\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 176,\n        columnNumber: 5\n      }\n    }, moment.unix(record.dueDate).format(DATE_FORMAT_DD_MM_YYYY)),\n    sorter: (a, b) => utils.antdTableSorter(a, b, 'dueDate')\n  }, {\n    title: 'Last Updated',\n    dataIndex: 'lastUpdated',\n    render: (_, record) => /*#__PURE__*/React.createElement(\"span\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 184,\n        columnNumber: 5\n      }\n    }, moment.unix(record.lastUpdated).format(DATE_FORMAT_DD_MM_YYYY)),\n    sorter: (a, b) => utils.antdTableSorter(a, b, 'lastUpdated')\n  }, {\n    title: 'Last Updated By',\n    dataIndex: 'lastUpdatedBy',\n    render: (_, record) => /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Tag, {\n      color: getUserStatus(record.lastUpdatedBy),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 192,\n        columnNumber: 7\n      }\n    }, record.lastUpdatedBy)),\n    sorter: (a, b) => utils.antdTableSorter(a, b, 'lastUpdatedBy')\n  }, {\n    title: '',\n    dataIndex: 'actions',\n    render: (_, elm) => /*#__PURE__*/React.createElement(\"div\", {\n      className: \"text-right\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 200,\n        columnNumber: 5\n      }\n    }, /*#__PURE__*/React.createElement(EllipsisDropdown, {\n      menu: dropdownMenu(elm),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 201,\n        columnNumber: 6\n      }\n    }))\n  }];\n  const rowSelection = {\n    onChange: (key, rows) => {\n      setSelectedRows(rows);\n      setSelectedRowKeys(key);\n    }\n  };\n\n  const onSearch = e => {\n    const value = e.currentTarget.value;\n    const searchArray = e.currentTarget.value ? list : esData;\n    const data = utils.wildCardSearch(searchArray, value);\n    setList(data);\n    setSelectedRowKeys([]);\n  };\n\n  return /*#__PURE__*/React.createElement(Card, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 223,\n      columnNumber: 3\n    }\n  }, /*#__PURE__*/React.createElement(Flex, {\n    alignItems: \"center\",\n    justifyContent: \"between\",\n    mobileFlex: false,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 224,\n      columnNumber: 4\n    }\n  }, /*#__PURE__*/React.createElement(Flex, {\n    className: \"mb-1\",\n    mobileFlex: false,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 225,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"mr-md-3 mb-3\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 226,\n      columnNumber: 6\n    }\n  }, /*#__PURE__*/React.createElement(Input, {\n    placeholder: \"Search\",\n    prefix: /*#__PURE__*/React.createElement(SearchOutlined, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 227,\n        columnNumber: 43\n      }\n    }),\n    onChange: e => onSearch(e),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 227,\n      columnNumber: 7\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"mb-3\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 229,\n      columnNumber: 6\n    }\n  }, /*#__PURE__*/React.createElement(Select, {\n    defaultValue: \"All\",\n    className: \"w-100\",\n    style: {\n      minWidth: 180\n    },\n    onChange: handleShowStatus,\n    placeholder: \"Status\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 230,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Option, {\n    value: \"All\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 237,\n      columnNumber: 8\n    }\n  }, \"Transactions \"), transactionStatusList.map(elm => /*#__PURE__*/React.createElement(Option, {\n    key: elm,\n    value: elm,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 238,\n      columnNumber: 42\n    }\n  }, elm)))))), /*#__PURE__*/React.createElement(Flex, {\n    alignItems: \"center\",\n    mobileFlex: false,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 243,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"mb-3 mr-3\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 244,\n      columnNumber: 6\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    type: \"primary\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 245,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    style: {\n      marginRight: '0.5rem'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 245,\n      columnNumber: 48\n    }\n  }, /*#__PURE__*/React.createElement(PlusCircleOutlined, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 245,\n      columnNumber: 88\n    }\n  })), \"Add Filter\")), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"mb-3 mr-3\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 247,\n      columnNumber: 6\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    type: \"primary\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 248,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    style: {\n      marginRight: '0.5rem'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 248,\n      columnNumber: 48\n    }\n  }, /*#__PURE__*/React.createElement(PlusCircleOutlined, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 248,\n      columnNumber: 88\n    }\n  })), \"Add Sort\")), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"mb-3\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 250,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    type: \"primary\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 251,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    style: {\n      marginRight: '0.5rem'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 251,\n      columnNumber: 48\n    }\n  }, /*#__PURE__*/React.createElement(CloudDownloadOutlined, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 251,\n      columnNumber: 88\n    }\n  })), \"Download Selected\"))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"table-responsive\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 254,\n      columnNumber: 4\n    }\n  }, /*#__PURE__*/React.createElement(Table, {\n    bordered: true,\n    columns: tableColumns,\n    dataSource: list,\n    rowKey: \"id\",\n    rowSelection: {\n      selectedRowKeys: selectedRowKeys,\n      type: 'checkbox',\n      preserveSelectedRowKeys: false,\n      ...rowSelection\n    },\n    scroll: {\n      x: 2000\n    },\n    pagination: {\n      pageSize: 10,\n      pageSizeOptions: [5, 10, 15, 20]\n    },\n    showSizeChanger: true,\n    showQuickJumper: true,\n    responsive: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 255,\n      columnNumber: 17\n    }\n  })));\n}","map":{"version":3,"sources":["/Users/dhruvaagrawal/Desktop/Work/Spocto/CMS/app/src/views/app-views/journeys/journey-ivr/transaction/index.js"],"names":["React","useState","Card","Table","Select","Input","Button","Badge","Menu","Tag","Pagination","EyeOutlined","CloudDownloadOutlined","SearchOutlined","PlusCircleOutlined","EllipsisDropdown","Flex","NumberFormat","moment","DATE_FORMAT_DD_MM_YYYY","utils","Option","getTransactionStatus","status","getUserStatus","itemRender","current","type","originalElement","transactionStatusList","Dashboard","esData","list","setList","selectedRows","setSelectedRows","selectedRowKeys","setSelectedRowKeys","handleShowStatus","value","key","data","filterArray","dropdownMenu","row","tableColumns","title","dataIndex","render","_","record","contentName","sorter","a","b","antdTableSorter","clientName","channel","product","segment","stage","level","transactionStatus","unix","dueDate","format","lastUpdated","lastUpdatedBy","elm","rowSelection","onChange","rows","onSearch","e","currentTarget","searchArray","wildCardSearch","minWidth","map","marginRight","preserveSelectedRowKeys","x","pageSize","pageSizeOptions"],"mappings":"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","sourcesContent":["/* eslint-disable no-unused-vars */\nimport React, {useState} from 'react'\nimport { Card, Table, Select, Input, Button, Badge, Menu, Tag, Pagination } from 'antd';\n// import OrderListData from 'assets/data/order-list.data.json'\nimport { EyeOutlined, CloudDownloadOutlined, SearchOutlined, PlusCircleOutlined } from '@ant-design/icons';\nimport EllipsisDropdown from 'components/shared-components/EllipsisDropdown';\nimport Flex from 'components/shared-components/Flex'\nimport NumberFormat from 'react-number-format';\nimport moment from 'moment'; \nimport { DATE_FORMAT_DD_MM_YYYY } from 'constants/DateConstant'\nimport utils from 'utils'\n\nconst { Option } = Select\n\nconst getTransactionStatus = status => {\n\tif (status === 'Client Approved') return 'volcano'\n\tif (status === 'IVR') return 'ivr'\n\tif (status === 'Testing') return 'testing'\n\tif (status === 'Approved') return 'approved'\n\treturn ''\n}\n\nconst getUserStatus = status => {\n    if (status === 'Administrator') return 'red'\n    if (status === 'Campaign Team') return 'blue'\n    if (status === 'DevOps Team') return 'cyan'\n}\n\nconst itemRender = (current, type, originalElement) => {\n    if (type === 'prev') {\n      return <a>Previous</a>;\n    }\n    if (type === 'next') {\n      return <a>Next</a>;\n    }\n    return originalElement;\n}\n\nconst transactionStatusList = ['Client Approved', 'IVR', 'Testing', 'Approved']\n\nexport default function Dashboard({esData}) {\n\n\n\tconst [list, setList] = useState(esData)\n\tconst [selectedRows, setSelectedRows] = useState([])\n\tconst [selectedRowKeys, setSelectedRowKeys] = useState([])\n\n\tconst handleShowStatus = value => {\n\t\tif (value !== 'All') {\n\t\t\tconst key = 'transactionStatus'\n\t\t\tconst data = utils.filterArray(esData, key, value)\n\t\t\tsetList(data)\n\t\t} else {\n\t\t\tsetList(esData)\n\t\t}\n\t}\n\n\tconst dropdownMenu = row => (\n\t\t<Menu>\n\t\t\t<Menu.Item>\n\t\t\t\t<Flex alignItems=\"center\">\n\t\t\t\t\t<EyeOutlined />\n\t\t\t\t\t<span className=\"ml-2\">View Details</span>\n\t\t\t\t</Flex>\n\t\t\t</Menu.Item>\n\t\t\t<Menu.Item>\n\t\t\t\t<Flex alignItems=\"center\">\n\t\t\t\t\t<PlusCircleOutlined />\n\t\t\t\t\t<span className=\"ml-2\">Add to remark</span>\n\t\t\t\t</Flex>\n\t\t\t</Menu.Item>\n\t\t</Menu>\n\t);\n\n\tconst tableColumns = [\n\t\t{\n\t\t\ttitle: 'ID',\n\t\t\tdataIndex: 'id'\n\t\t},\n\t\t{\n\t\t\ttitle: 'Version',\n\t\t\tkey: 'version'\n\t\t},\n\t\t{\n\t\t\ttitle: 'Content Name',\n\t\t\tdataIndex: 'contentName',\n\t\t\trender: (_, record) => (\n\t\t\t\t<div className=\"d-flex\">\n\t\t\t\t\t<span>{record.contentName}</span>\n\t\t\t\t</div>\n\t\t\t),\n\t\t\tsorter: (a, b) => utils.antdTableSorter(a, b, 'contentName')\n        },\n        {\n\t\t\ttitle: 'Client Name',\n\t\t\tdataIndex: 'clientName',\n\t\t\trender: (_, record) => (\n\t\t\t\t<div className=\"d-flex\">\n\t\t\t\t\t<span>{record.clientName}</span>\n\t\t\t\t</div>\n\t\t\t),\n\t\t\tsorter: (a, b) => utils.antdTableSorter(a, b, 'clientName')\n        },\n        {\n\t\t\ttitle: 'Channel',\n\t\t\tdataIndex: 'channel',\n\t\t\trender: (_, record) => (\n\t\t\t\t<div className=\"d-flex\">\n\t\t\t\t\t<span>{record.channel}</span>\n\t\t\t\t</div>\n\t\t\t),\n\t\t\tsorter: (a, b) => utils.antdTableSorter(a, b, 'channel')\n        },\n        {\n\t\t\ttitle: 'Product',\n\t\t\tdataIndex: 'prooduct',\n\t\t\trender: (_, record) => (\n\t\t\t\t<div className=\"d-flex\">\n\t\t\t\t\t<span>{record.product}</span>\n\t\t\t\t</div>\n\t\t\t),\n\t\t\tsorter: (a, b) => utils.antdTableSorter(a, b, 'product')\n        },\n        {\n\t\t\ttitle: 'Segment',\n\t\t\tdataIndex: 'segment',\n\t\t\trender: (_, record) => (\n\t\t\t\t<div className=\"d-flex\">\n\t\t\t\t\t<span>{record.segment}</span>\n\t\t\t\t</div>\n\t\t\t),\n\t\t\tsorter: (a, b) => utils.antdTableSorter(a, b, 'segment')\n        },\n        {\n\t\t\ttitle: 'Stage',\n\t\t\tdataIndex: 'stage',\n\t\t\trender: (_, record) => (\n\t\t\t\t<div className=\"d-flex\">\n\t\t\t\t\t<span>{record.stage}</span>\n\t\t\t\t</div>\n\t\t\t),\n\t\t\tsorter: (a, b) => utils.antdTableSorter(a, b, 'stage')\n        },\n        {\n\t\t\ttitle: 'Type',\n\t\t\tdataIndex: 'type',\n\t\t\trender: (_, record) => (\n\t\t\t\t<div className=\"d-flex\">\n\t\t\t\t\t<span>{record.type}</span>\n\t\t\t\t</div>\n\t\t\t),\n\t\t\tsorter: (a, b) => utils.antdTableSorter(a, b, 'type')\n        },\n        {\n\t\t\ttitle: 'Level',\n\t\t\tdataIndex: 'level',\n\t\t\trender: (_, record) => (\n\t\t\t\t<div className=\"d-flex\">\n\t\t\t\t\t<span>{record.level}</span>\n\t\t\t\t</div>\n\t\t\t),\n\t\t\tsorter: (a, b) => utils.antdTableSorter(a, b, 'level')\n        },\n        {\n\t\t\ttitle: 'Transaction Status',\n\t\t\tdataIndex: 'transactionStatus',\n\t\t\trender: (_, record) => (\n\t\t\t\t<><Tag color={getTransactionStatus(record.transactionStatus)}>{record.transactionStatus}</Tag></>\n\t\t\t),\n\t\t\tsorter: (a, b) => utils.antdTableSorter(a, b, 'transactionStatus')\n\t\t},\n\t\t{\n\t\t\ttitle: 'Due Date',\n\t\t\tdataIndex: 'dueDate',\n\t\t\trender: (_, record) => (\n\t\t\t\t<span>{moment.unix(record.dueDate).format(DATE_FORMAT_DD_MM_YYYY)}</span>\n\t\t\t),\n\t\t\tsorter: (a, b) => utils.antdTableSorter(a, b, 'dueDate')\n        },\n        {\n\t\t\ttitle: 'Last Updated',\n\t\t\tdataIndex: 'lastUpdated',\n\t\t\trender: (_, record) => (\n\t\t\t\t<span>{moment.unix(record.lastUpdated).format(DATE_FORMAT_DD_MM_YYYY)}</span>\n\t\t\t),\n\t\t\tsorter: (a, b) => utils.antdTableSorter(a, b, 'lastUpdated')\n\t\t},\n\t\t{\n\t\t\ttitle: 'Last Updated By',\n\t\t\tdataIndex: 'lastUpdatedBy',\n\t\t\trender: (_, record) => (\n\t\t\t\t<><Tag color={getUserStatus(record.lastUpdatedBy)}>{record.lastUpdatedBy}</Tag></>\n\t\t\t),\n\t\t\tsorter: (a, b) => utils.antdTableSorter(a, b, 'lastUpdatedBy')\n\t\t},\n\t\t{\n\t\t\ttitle: '',\n\t\t\tdataIndex: 'actions',\n\t\t\trender: (_, elm) => (\n\t\t\t\t<div className=\"text-right\">\n\t\t\t\t\t<EllipsisDropdown menu={dropdownMenu(elm)}/>\n\t\t\t\t</div>\n\t\t\t)\n\t\t}\n\t];\n\t\n\tconst rowSelection = {\n\t\tonChange: (key, rows) => {\n\t\t\tsetSelectedRows(rows)\n\t\t\tsetSelectedRowKeys(key)\n\t\t}\n\t};\n\n\tconst onSearch = e => {\n\t\tconst value = e.currentTarget.value\n\t\tconst searchArray = e.currentTarget.value? list : esData\n\t\tconst data = utils.wildCardSearch(searchArray, value)\n\t\tsetList(data)\n\t\tsetSelectedRowKeys([])\n\t}\n\n\treturn (\n\t\t<Card>\n\t\t\t<Flex alignItems=\"center\" justifyContent=\"between\" mobileFlex={false}>\n\t\t\t\t<Flex className=\"mb-1\" mobileFlex={false}>\n\t\t\t\t\t<div className=\"mr-md-3 mb-3\">\n\t\t\t\t\t\t<Input placeholder=\"Search\" prefix={<SearchOutlined />} onChange={e => onSearch(e)}/>\n\t\t\t\t\t</div>\n\t\t\t\t\t<div className=\"mb-3\">\n\t\t\t\t\t\t<Select \n\t\t\t\t\t\t\tdefaultValue=\"All\" \n\t\t\t\t\t\t\tclassName=\"w-100\" \n\t\t\t\t\t\t\tstyle={{ minWidth: 180 }} \n\t\t\t\t\t\t\tonChange={ handleShowStatus } \n\t\t\t\t\t\t\tplaceholder=\"Status\"\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\t<Option value=\"All\">Transactions </Option>\n\t\t\t\t\t\t\t{transactionStatusList.map(elm => <Option key={elm} value={elm}>{elm}</Option>)}\n\t\t\t\t\t\t</Select>\n\t\t\t\t\t</div>\n\t\t\t\t</Flex>\n\t\t\t</Flex>\n                <Flex alignItems=\"center\" mobileFlex={false}>\n\t\t\t\t\t<div className=\"mb-3 mr-3\">\n                        <Button type=\"primary\"><span style={{ marginRight: '0.5rem' }}><PlusCircleOutlined /></span>Add Filter</Button>\n                    </div>\n\t\t\t\t\t<div className=\"mb-3 mr-3\">\n                        <Button type=\"primary\"><span style={{ marginRight: '0.5rem' }}><PlusCircleOutlined /></span>Add Sort</Button>\n                    </div>\n                    <div className=\"mb-3\">\n                        <Button type=\"primary\"><span style={{ marginRight: '0.5rem' }}><CloudDownloadOutlined /></span>Download Selected</Button>\n                    </div>\n                </Flex>\n\t\t\t<div className=\"table-responsive\">\n                <Table \n                    bordered\n\t\t\t\t\tcolumns={tableColumns} \n\t\t\t\t\tdataSource={list} \n\t\t\t\t\trowKey='id' \n\t\t\t\t\trowSelection={{\n\t\t\t\t\t\tselectedRowKeys: selectedRowKeys,\n\t\t\t\t\t\ttype: 'checkbox',\n\t\t\t\t\t\tpreserveSelectedRowKeys: false,\n\t\t\t\t\t\t...rowSelection,\n                    }}\n                    scroll={{ x: 2000 }}\n                    pagination={{ pageSize: 10, pageSizeOptions: [5, 10, 15, 20] }}\n                    showSizeChanger\n                    showQuickJumper\n                    responsive={true}\n\t\t\t\t/>\n\t\t\t</div>\n\t\t</Card>\n\t)\n}"]},"metadata":{},"sourceType":"module"}