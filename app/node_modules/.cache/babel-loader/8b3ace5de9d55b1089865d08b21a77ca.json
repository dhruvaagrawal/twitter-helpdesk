{"ast":null,"code":"import React from'react';import{Layout,Grid}from'antd';import{connect}from'react-redux';import SideNav from'components/layout-components/SideNav';import TopNav from'components/layout-components/TopNav';import MobileNav from'components/layout-components/MobileNav';import HeaderNav from'components/layout-components/HeaderNav';import PageHeader from'components/layout-components/PageHeader';import Footer from'components/layout-components/Footer';import AppViews from'views/app-views';import navigationConfig from\"configs/NavigationConfig\";import{SIDE_NAV_WIDTH,SIDE_NAV_COLLAPSED_WIDTH,NAV_TYPE_SIDE,NAV_TYPE_TOP}from'constants/ThemeConstant';import utils from'utils';var Content=Layout.Content;var useBreakpoint=Grid.useBreakpoint;export var AppLayout=function AppLayout(_ref){var navCollapsed=_ref.navCollapsed,navType=_ref.navType,location=_ref.location;var currentRouteInfo=utils.getRouteInfo(navigationConfig,location.pathname);var screens=utils.getBreakPoint(useBreakpoint());var isMobile=!screens.includes('lg');var isNavSide=navType===NAV_TYPE_SIDE;var isNavTop=navType===NAV_TYPE_TOP;var getLayoutGutter=function getLayoutGutter(){if(isNavTop||isMobile){return 0;}return navCollapsed?SIDE_NAV_COLLAPSED_WIDTH:SIDE_NAV_WIDTH;};return/*#__PURE__*/React.createElement(Layout,null,/*#__PURE__*/React.createElement(HeaderNav,{isMobile:isMobile}),isNavTop&&!isMobile?/*#__PURE__*/React.createElement(TopNav,{routeInfo:currentRouteInfo}):null,/*#__PURE__*/React.createElement(Layout,{className:\"app-container\"},isNavSide&&!isMobile?/*#__PURE__*/React.createElement(SideNav,{routeInfo:currentRouteInfo}):null,/*#__PURE__*/React.createElement(Layout,{className:\"app-layout\",style:{paddingLeft:getLayoutGutter()}},/*#__PURE__*/React.createElement(\"div\",{className:\"app-content \".concat(isNavTop?'layout-top-nav':'')},/*#__PURE__*/React.createElement(PageHeader,{display:currentRouteInfo===null||currentRouteInfo===void 0?void 0:currentRouteInfo.breadcrumb,title:currentRouteInfo===null||currentRouteInfo===void 0?void 0:currentRouteInfo.title}),/*#__PURE__*/React.createElement(Content,null,/*#__PURE__*/React.createElement(AppViews,null))),/*#__PURE__*/React.createElement(Footer,null))),isMobile&&/*#__PURE__*/React.createElement(MobileNav,null));};var mapStateToProps=function mapStateToProps(_ref2){var theme=_ref2.theme;var navCollapsed=theme.navCollapsed,navType=theme.navType,locale=theme.locale;return{navCollapsed:navCollapsed,navType:navType,locale:locale};};export default connect(mapStateToProps)(React.memo(AppLayout));","map":{"version":3,"sources":["/Users/dhruvaagrawal/Desktop/Work/Spocto/CMS/app/src/layouts/app-layout/index.js"],"names":["React","Layout","Grid","connect","SideNav","TopNav","MobileNav","HeaderNav","PageHeader","Footer","AppViews","navigationConfig","SIDE_NAV_WIDTH","SIDE_NAV_COLLAPSED_WIDTH","NAV_TYPE_SIDE","NAV_TYPE_TOP","utils","Content","useBreakpoint","AppLayout","navCollapsed","navType","location","currentRouteInfo","getRouteInfo","pathname","screens","getBreakPoint","isMobile","includes","isNavSide","isNavTop","getLayoutGutter","paddingLeft","breadcrumb","title","mapStateToProps","theme","locale","memo"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport { Layout, Grid } from 'antd';\r\nimport { connect } from 'react-redux';\r\nimport SideNav from 'components/layout-components/SideNav';\r\nimport TopNav from 'components/layout-components/TopNav';\r\nimport MobileNav from 'components/layout-components/MobileNav'\r\nimport HeaderNav from 'components/layout-components/HeaderNav';\r\nimport PageHeader from 'components/layout-components/PageHeader';\r\nimport Footer from 'components/layout-components/Footer';\r\nimport AppViews from 'views/app-views';\r\nimport navigationConfig from \"configs/NavigationConfig\";\r\nimport { \r\n  SIDE_NAV_WIDTH, \r\n  SIDE_NAV_COLLAPSED_WIDTH,\r\n  NAV_TYPE_SIDE,\r\n  NAV_TYPE_TOP\r\n} from 'constants/ThemeConstant';\r\nimport utils from 'utils';\r\n\r\nconst { Content } = Layout;\r\nconst { useBreakpoint } = Grid;\r\n\r\nexport const AppLayout = ({ navCollapsed, navType, location }) => {\r\n  const currentRouteInfo = utils.getRouteInfo(navigationConfig, location.pathname)\r\n  const screens = utils.getBreakPoint(useBreakpoint());\r\n  const isMobile = !screens.includes('lg')\r\n  const isNavSide = navType === NAV_TYPE_SIDE\r\n  const isNavTop = navType === NAV_TYPE_TOP\r\n  const getLayoutGutter = () => {\r\n    if(isNavTop || isMobile) {\r\n      return 0\r\n    }\r\n    return navCollapsed ? SIDE_NAV_COLLAPSED_WIDTH : SIDE_NAV_WIDTH\r\n  }\r\n  return (\r\n    <Layout>\r\n      <HeaderNav isMobile={isMobile}/>\r\n      {(isNavTop && !isMobile) ? <TopNav routeInfo={currentRouteInfo}/> : null}\r\n      <Layout className=\"app-container\">\r\n        {(isNavSide && !isMobile) ? <SideNav routeInfo={currentRouteInfo}/> : null }\r\n        <Layout className=\"app-layout\" style={{paddingLeft: getLayoutGutter()}}>\r\n          <div className={`app-content ${isNavTop ? 'layout-top-nav' : ''}`}>\r\n            <PageHeader display={currentRouteInfo?.breadcrumb} title={currentRouteInfo?.title} />\r\n            <Content>\r\n              <AppViews />\r\n            </Content>\r\n          </div>\r\n          <Footer />\r\n        </Layout>\r\n      </Layout>\r\n      {isMobile && <MobileNav />}\r\n    </Layout>\r\n  )\r\n}\r\n\r\nconst mapStateToProps = ({ theme }) => {\r\n  const { navCollapsed, navType, locale } =  theme;\r\n  return { navCollapsed, navType, locale }\r\n};\r\n\r\nexport default connect(mapStateToProps)(React.memo(AppLayout));"]},"metadata":{},"sourceType":"module"}