{"ast":null,"code":"var _jsxFileName = \"/Users/dhruvaagrawal/Desktop/Work/Spocto/CMS/app/src/views/app-views/ops-admin/FileUploadForm.js\";\nimport React, { useState } from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { message, Typography, Form, Button, Checkbox, Row, Col, Select } from 'antd';\nimport { CloudUploadOutlined } from '@ant-design/icons';\nimport axios from 'axios';\nimport { FILE_UPLOAD_URL } from 'constants/ApiConstant';\nimport XLSX from 'xlsx';\nimport readXlsxFile from 'read-excel-file';\nimport styled from 'styled-components';\nconst {\n  Title\n} = Typography;\nconst {\n  Option\n} = Select;\nconst useStyles = makeStyles({\n  table: {\n    minWidth: 650\n  }\n});\nconst StyledButton = styled.button`\n    background: #fff;\n    color: #b71540;\n    font-size: 1.5rem;\n    outline: 0 none;\n    border: 2px solid #b71540;\n    border-radius: 10px;\n    cursor: pointer;\n    width: 300px;\n    height: 50px;\n    max-width: 300px;\n    max-height: 50px; \n    &:hover {\n        color: white;\n        background: linear-gradient(35deg, #EA2027, #b71540);\n        border: transparent;\n    }\n`;\n\nconst FileUploadForm = props => {\n  let fileReader;\n  let newArr = [];\n  const [file, setFile] = useState(null);\n  const [visible, setVisible] = useState(false);\n  const [buttonVisible, setButtonVisible] = useState(true);\n  const [checked, setChecked] = useState(false);\n  const [createTable, setCreateTable] = useState([]);\n  const checkedLanguages = [];\n  const classes = useStyles(); // Create a reference to the hidden file input element\n\n  const hiddenFileInput = React.useRef(null);\n  const formItemLayout = {\n    labelCol: {\n      span: 6\n    },\n    wrapperCol: {\n      span: 14\n    }\n  };\n\n  const handleClick = event => {\n    hiddenFileInput.current.click();\n  };\n\n  const onChange = async e => {\n    let tableArray = [];\n    setFile(e.target.files[0]);\n    await readXlsxFile(e.target.files[0]).then(function (res) {\n      for (let i = 0; i < 3; i++) {\n        tableArray.push(res[i]);\n      }\n\n      console.log(tableArray);\n      setCreateTable(tableArray);\n      setVisible(true);\n      setButtonVisible(false);\n    });\n  };\n\n  const uploadFile = async file => {\n    const formData = new FormData();\n    formData.append('file', file);\n    let res = await axios.post(FILE_UPLOAD_URL, formData, {\n      headers: {\n        'content-type': 'multipart/form-data'\n      }\n    }); // res.then( () => message.success(`Your ${file.name} was uploaded successfully.`) )\n    // .catch( err => message.error(`A ${err.status} error occured. Please try again.`) )\n    // console.log(res)\n\n    return res;\n  };\n\n  const onSubmit = async e => {\n    let res = await uploadFile(file);\n    console.log(res.data);\n  };\n\n  const onCheck = event => {\n    checkedLanguages.push(event.target.value);\n    let x = checkedLanguages.toString();\n    console.log(x);\n  };\n\n  const renderLanguages = () => {\n    const languages = ['English', 'Hindi', 'Tamil', 'Telugu', 'Kannada', 'Marathi', 'Gujarati', 'Bengali', 'Punjabi', 'Malayalam'];\n    return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Form.Item, {\n      name: \"language\",\n      label: \"Language\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 119,\n        columnNumber: 17\n      }\n    }, languages.map(language => /*#__PURE__*/React.createElement(Checkbox.Group, {\n      className: \"pl-3\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 121,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(Col, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 122,\n        columnNumber: 33\n      }\n    }, /*#__PURE__*/React.createElement(Checkbox, {\n      value: language,\n      style: {\n        lineHeight: '32px'\n      },\n      onChange: onCheck,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 123,\n        columnNumber: 37\n      }\n    }, language))))));\n  };\n\n  const showTableHeaders = array => {\n    newArr = array[0];\n    console.log(newArr);\n    return /*#__PURE__*/React.createElement(React.Fragment, null, newArr.map((num, index) => /*#__PURE__*/React.createElement(Form.Item, {\n      name: num,\n      label: num,\n      hasFeedback: true,\n      rules: [{\n        required: true,\n        message: \"Please select the matching header\"\n      }],\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 141,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(Row, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 147,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(Select, {\n      key: index,\n      labelInValue: true,\n      placeholder: \"Please select the matching header\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 148,\n        columnNumber: 25\n      }\n    }, newArr.map((num, index) => /*#__PURE__*/React.createElement(Option, {\n      key: index,\n      value: num,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 150,\n        columnNumber: 33\n      }\n    }, num)))))));\n  };\n\n  return /*#__PURE__*/React.createElement(Form, Object.assign({\n    name: \"validate_other\"\n  }, formItemLayout, {\n    onFinish: onSubmit,\n    textAlign: \"center\",\n    initialValues: {\n      rate: 3.5\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 163,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(Form.Item, {\n    justify: \"center\",\n    style: {\n      textAlign: 'center',\n      marginTop: '1%'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 170,\n      columnNumber: 4\n    }\n  }, /*#__PURE__*/React.createElement(Title, {\n    level: 1,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 171,\n      columnNumber: 17\n    }\n  }, \"Upload Transactions\")), /*#__PURE__*/React.createElement(Form.Item, {\n    style: {\n      display: 'flex',\n      justifyContent: 'center',\n      alignItems: 'center',\n      textAlign: 'center'\n    },\n    className: \"mt-5\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 173,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    type: \"file\",\n    onChange: onChange,\n    ref: hiddenFileInput,\n    style: {\n      display: 'none'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 174,\n      columnNumber: 8\n    }\n  }), buttonVisible ? /*#__PURE__*/React.createElement(StyledButton, {\n    onClick: handleClick,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 175,\n      columnNumber: 35\n    }\n  }, /*#__PURE__*/React.createElement(CloudUploadOutlined, {\n    style: {\n      marginRight: '2%'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 175,\n      columnNumber: 73\n    }\n  }), \" Upload File\") : /*#__PURE__*/React.createElement(Title, {\n    level: 3,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 175,\n      columnNumber: 156\n    }\n  }, \"Please map the headings\")), /*#__PURE__*/React.createElement(Form.Item, {\n    style: {\n      display: 'flex',\n      justifyContent: 'center',\n      alignItems: 'center'\n    },\n    className: \"mt-5\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 177,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Row, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 178,\n      columnNumber: 21\n    }\n  }, visible && renderLanguages()), /*#__PURE__*/React.createElement(Row, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 181,\n      columnNumber: 21\n    }\n  }, visible && showTableHeaders(createTable))), /*#__PURE__*/React.createElement(Form.Item, {\n    style: {\n      display: 'flex',\n      justifyContent: 'center',\n      alignItems: 'center'\n    },\n    className: \"mt-5\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 185,\n      columnNumber: 4\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    htmlType: \"submit\",\n    variant: \"contained\",\n    type: \"primary\",\n    style: {\n      width: '100%',\n      height: '3rem',\n      fontSize: '1.25rem'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 186,\n      columnNumber: 17\n    }\n  }, \"Create Transactions\")));\n};\n\nexport default FileUploadForm;","map":{"version":3,"sources":["/Users/dhruvaagrawal/Desktop/Work/Spocto/CMS/app/src/views/app-views/ops-admin/FileUploadForm.js"],"names":["React","useState","makeStyles","message","Typography","Form","Button","Checkbox","Row","Col","Select","CloudUploadOutlined","axios","FILE_UPLOAD_URL","XLSX","readXlsxFile","styled","Title","Option","useStyles","table","minWidth","StyledButton","button","FileUploadForm","props","fileReader","newArr","file","setFile","visible","setVisible","buttonVisible","setButtonVisible","checked","setChecked","createTable","setCreateTable","checkedLanguages","classes","hiddenFileInput","useRef","formItemLayout","labelCol","span","wrapperCol","handleClick","event","current","click","onChange","e","tableArray","target","files","then","res","i","push","console","log","uploadFile","formData","FormData","append","post","headers","onSubmit","data","onCheck","value","x","toString","renderLanguages","languages","map","language","lineHeight","showTableHeaders","array","num","index","required","rate","textAlign","marginTop","display","justifyContent","alignItems","marginRight","width","height","fontSize"],"mappings":"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","sourcesContent":["import React, { useState } from 'react'\nimport { makeStyles } from '@material-ui/core/styles';\nimport { message, Typography, Form, Button, Checkbox, Row, Col, Select } from 'antd'\nimport { CloudUploadOutlined } from '@ant-design/icons'\nimport axios from 'axios'\nimport { FILE_UPLOAD_URL } from 'constants/ApiConstant'\nimport XLSX from 'xlsx'\nimport readXlsxFile from 'read-excel-file'\nimport styled from 'styled-components'\n\nconst { Title } = Typography\nconst { Option } = Select\n\nconst useStyles = makeStyles({\n    table: {\n        minWidth: 650,\n    },\n});\n\nconst StyledButton = styled.button`\n    background: #fff;\n    color: #b71540;\n    font-size: 1.5rem;\n    outline: 0 none;\n    border: 2px solid #b71540;\n    border-radius: 10px;\n    cursor: pointer;\n    width: 300px;\n    height: 50px;\n    max-width: 300px;\n    max-height: 50px; \n    &:hover {\n        color: white;\n        background: linear-gradient(35deg, #EA2027, #b71540);\n        border: transparent;\n    }\n`\n\nconst FileUploadForm = props => {\n\n    let fileReader;\n\n    let newArr = []\n\n    const [ file, setFile ] = useState(null)\n    const [ visible, setVisible ] = useState(false)\n    const [ buttonVisible, setButtonVisible ] = useState(true)\n    const [ checked, setChecked ] = useState(false)\n    const [ createTable, setCreateTable ] = useState([])\n    const checkedLanguages = []\n\n    const classes = useStyles()\n\n    // Create a reference to the hidden file input element\n    const hiddenFileInput = React.useRef(null);\n\n    const formItemLayout = {\n        labelCol: {\n            span: 6,\n        },\n        wrapperCol: {\n            span: 14,\n        },\n    }; \n\n    const handleClick = event => {\n        hiddenFileInput.current.click()\n    }\n\t\n    const onChange = async (e) => {\n        let tableArray = []\n        setFile(e.target.files[0])\n        await readXlsxFile(e.target.files[0])\n        .then( function(res) {\n            for (let i = 0; i < 3; i++) {\n                tableArray.push(res[i])\n            } \n            console.log(tableArray)\n            setCreateTable(tableArray)\n            setVisible(true)\n            setButtonVisible(false)\n        })\n    }\n\n    const uploadFile = async (file) => {\n\n        const formData = new FormData();\n        \n        formData.append('file', file)\n        \n        let res =  await axios.post(FILE_UPLOAD_URL, formData, {\n            headers: {\n                'content-type': 'multipart/form-data'\n            }\n\t\t})\n\t\t// res.then( () => message.success(`Your ${file.name} was uploaded successfully.`) )\n\t\t// .catch( err => message.error(`A ${err.status} error occured. Please try again.`) )\n\n\t\t// console.log(res)\n\t\treturn res\n    }\n    \n    const onSubmit = async (e) => {\n        let res = await uploadFile(file);\n        console.log(res.data);\n\t}\n      \n    const onCheck = event => {\n        checkedLanguages.push(event.target.value)\n        let x = checkedLanguages.toString()\n        console.log(x)\n    }\n    \n    const renderLanguages = () => {\n        const languages = ['English', 'Hindi', 'Tamil', 'Telugu', 'Kannada', 'Marathi', 'Gujarati', 'Bengali', 'Punjabi', 'Malayalam']\n\n        return (\n            <>\n                <Form.Item name=\"language\" label=\"Language\">\n                        { languages.map( language => (\n                            <Checkbox.Group className=\"pl-3\">\n                                <Col>\n                                    <Checkbox value={ language } style={{ lineHeight: '32px' }} onChange={ onCheck }>{ language }</Checkbox>\n                                </Col>\n                            </Checkbox.Group>\n                        )) }\n                </Form.Item>\n            </>\n        )\n    }\n    \n    const showTableHeaders = array => {\n\n        newArr = array[0]\n\n        console.log(newArr)\n        \n        return (\n            <>\n            { newArr.map( (num, index) => (\n                <Form.Item\n                    name={ num }\n                    label={ num }\n                    hasFeedback\n                    rules={[{ required: true, message: \"Please select the matching header\" }]}\n                >\n                    <Row>\n                        <Select key={ index } labelInValue placeholder=\"Please select the matching header\">\n                            { newArr.map( (num, index) => (\n                                <Option key={ index } value={ num }>{ num }</Option>\n                            )) }\n                        </Select>\n                    </Row>\n                </Form.Item>\n            ))}\n            </>\n        )\n\n    }\n\n\n\treturn (\n        <Form\n            name=\"validate_other\"\n            { ...formItemLayout }\n            onFinish={ onSubmit }\n            textAlign=\"center\"\n            initialValues={{ rate: 3.5 }}\n        >\n\t\t\t<Form.Item justify=\"center\" style={{ textAlign: 'center', marginTop: '1%' }}>\n                <Title level={1}>Upload Transactions</Title>\n            </Form.Item>\n            <Form.Item style={{ display: 'flex', justifyContent: 'center', alignItems: 'center', textAlign: 'center' }} className=\"mt-5\">\n\t\t\t    <input type=\"file\" onChange={ onChange } ref={ hiddenFileInput }  style={{ display: 'none' }} />\n                { buttonVisible ? <StyledButton onClick={ handleClick }><CloudUploadOutlined style={{ marginRight: '2%' }} /> Upload File</StyledButton> : <Title level={3}>Please map the headings</Title>}\n            </Form.Item>\n            <Form.Item style={{ display: 'flex', justifyContent: 'center', alignItems: 'center' }} className=\"mt-5\">\n                    <Row>\n                        { visible && renderLanguages() }\n                    </Row>\n                    <Row>\n                        { visible && showTableHeaders(createTable) }\n                    </Row>\n            </Form.Item>\n\t\t\t<Form.Item style={{ display: 'flex', justifyContent: 'center', alignItems: 'center' }} className=\"mt-5\">\n                <Button htmlType=\"submit\" variant=\"contained\" type=\"primary\" style={{ width: '100%', height: '3rem', fontSize: '1.25rem' }}>Create Transactions</Button>\n            </Form.Item>\n\t\t</Form>\n\t)\n        \n}\nexport default FileUploadForm"]},"metadata":{},"sourceType":"module"}