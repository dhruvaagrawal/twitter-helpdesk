{"ast":null,"code":"import _slicedToArray from\"/Users/dhruvaagrawal/Desktop/Work/Spocto/CMS/app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import _objectSpread from\"/Users/dhruvaagrawal/Desktop/Work/Spocto/CMS/app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";import React,{createContext,useReducer}from\"react\";import{scrumboardData}from'./ScrumboardData';var UPDATE_ORDERED='UPDATE_ORDERED';var UPDATE_COLUMN='UPDATE_COLUMN';var UPDATE_MODAL='UPDATE_MODAL';var UPDATE_MODAL_MODE='UPDATE_MODAL_MODE';var UPDATE_CURRENT_LIST_ID='UPDATE_CURRENT_LIST_ID';var UPDATE_CARD_DATA='UPDATE_CARD_DATA';export var scrumboardReducer=function scrumboardReducer(state,action){switch(action.type){case UPDATE_ORDERED:return _objectSpread(_objectSpread({},state),{},{ordered:action.payload});case UPDATE_COLUMN:return _objectSpread(_objectSpread({},state),{},{columns:action.payload});case UPDATE_MODAL:return _objectSpread(_objectSpread({},state),{},{modal:action.payload});case UPDATE_MODAL_MODE:return _objectSpread(_objectSpread({},state),{},{modalMode:action.payload});case UPDATE_CURRENT_LIST_ID:return _objectSpread(_objectSpread({},state),{},{currentListId:action.payload});case UPDATE_CARD_DATA:return _objectSpread(_objectSpread({},state),{},{cardData:action.payload});default:return state;}};var initialState={columns:scrumboardData,ordered:Object.keys(scrumboardData),modal:false,modalMode:'',currentListId:'',cardData:null};export var ScrumboardContext=createContext(initialState);export var ScrumboardProvider=function ScrumboardProvider(_ref){var children=_ref.children;var _useReducer=useReducer(scrumboardReducer,initialState),_useReducer2=_slicedToArray(_useReducer,2),state=_useReducer2[0],dispatch=_useReducer2[1];var dispatcher={updateOrdered:function updateOrdered(ordered){dispatch({type:UPDATE_ORDERED,payload:ordered});},updateColumns:function updateColumns(columns){dispatch({type:UPDATE_COLUMN,payload:columns});},updateModal:function updateModal(modal){dispatch({type:UPDATE_MODAL,payload:modal});},updateModalMode:function updateModalMode(modalMode){dispatch({type:UPDATE_MODAL_MODE,payload:modalMode});},updateCurrentListId:function updateCurrentListId(currentListId){dispatch({type:UPDATE_CURRENT_LIST_ID,payload:currentListId});},updateCardData:function updateCardData(cardData){dispatch({type:UPDATE_CARD_DATA,payload:cardData});}};return/*#__PURE__*/React.createElement(ScrumboardContext.Provider,{value:_objectSpread(_objectSpread({},state),dispatcher)},children);};","map":{"version":3,"sources":["/Users/dhruvaagrawal/Desktop/Work/Spocto/CMS/app/src/views/app-views/journeys/journey-ivr/taskTracker/ScrumboardContext.js"],"names":["React","createContext","useReducer","scrumboardData","UPDATE_ORDERED","UPDATE_COLUMN","UPDATE_MODAL","UPDATE_MODAL_MODE","UPDATE_CURRENT_LIST_ID","UPDATE_CARD_DATA","scrumboardReducer","state","action","type","ordered","payload","columns","modal","modalMode","currentListId","cardData","initialState","Object","keys","ScrumboardContext","ScrumboardProvider","children","dispatch","dispatcher","updateOrdered","updateColumns","updateModal","updateModalMode","updateCurrentListId","updateCardData"],"mappings":"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","sourcesContent":["import React, { createContext, useReducer } from \"react\";\nimport { scrumboardData } from './ScrumboardData';\n\nconst UPDATE_ORDERED = 'UPDATE_ORDERED'\nconst UPDATE_COLUMN = 'UPDATE_COLUMN'\nconst UPDATE_MODAL = 'UPDATE_MODAL'\nconst UPDATE_MODAL_MODE = 'UPDATE_MODAL_MODE'\nconst UPDATE_CURRENT_LIST_ID = 'UPDATE_CURRENT_LIST_ID'\nconst UPDATE_CARD_DATA = 'UPDATE_CARD_DATA'\n\nexport const scrumboardReducer = (state, action) => {\n  switch (action.type) {\n\t\tcase UPDATE_ORDERED:\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\tordered: action.payload\n      }\n    case UPDATE_COLUMN: \n      return {\n        ...state,\n        columns: action.payload\n      }\n    case UPDATE_MODAL: \n      return {\n        ...state,\n        modal: action.payload\n      }\n    case UPDATE_MODAL_MODE: \n      return {\n        ...state,\n        modalMode: action.payload\n      }\n    case UPDATE_CURRENT_LIST_ID: \n      return {\n        ...state,\n        currentListId: action.payload\n      }\n    case UPDATE_CARD_DATA: \n      return {\n        ...state,\n        cardData: action.payload\n      }\n    default:\n      return state;\n  }\n};\n\nconst initialState = {\n\tcolumns: scrumboardData,\n\tordered: Object.keys(scrumboardData),\n\tmodal: false,\n\tmodalMode: '',\n\tcurrentListId: '',\n\tcardData: null\n};\n\nexport const ScrumboardContext = createContext(initialState);\n\nexport const ScrumboardProvider = ({ children }) => {\n  const [state, dispatch] = useReducer(scrumboardReducer, initialState);\n\n\tconst dispatcher = {\n\t\tupdateOrdered: function (ordered) {\n      dispatch({\n\t\t\t\ttype: UPDATE_ORDERED,\n\t\t\t\tpayload: ordered\n\t\t\t});\n    },\n    updateColumns: function (columns) {\n      dispatch({\n\t\t\t\ttype: UPDATE_COLUMN,\n\t\t\t\tpayload: columns\n\t\t\t});\n    },\n    updateModal: function (modal) {\n      dispatch({\n\t\t\t\ttype: UPDATE_MODAL,\n\t\t\t\tpayload: modal\n\t\t\t});\n    },\n    updateModalMode: function (modalMode) {\n      dispatch({\n\t\t\t\ttype: UPDATE_MODAL_MODE,\n\t\t\t\tpayload: modalMode\n\t\t\t});\n    },\n    updateCurrentListId: function (currentListId) {\n      dispatch({\n\t\t\t\ttype: UPDATE_CURRENT_LIST_ID,\n\t\t\t\tpayload: currentListId\n\t\t\t});\n    },\n    updateCardData: function (cardData) {\n      dispatch({\n\t\t\t\ttype: UPDATE_CARD_DATA,\n\t\t\t\tpayload: cardData\n\t\t\t});\n    }\n\t}\n\n  return (\n    <ScrumboardContext.Provider\n      value={{\n        ...state,\n        ...dispatcher\n      }}\n    >\n      {children}\n    </ScrumboardContext.Provider>\n  );\n};"]},"metadata":{},"sourceType":"module"}