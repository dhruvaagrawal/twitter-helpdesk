{"ast":null,"code":"var _jsxFileName = \"/Users/dhruvaagrawal/Desktop/Work/Spocto/CMS/app/src/views/app-views/ops-admin/UploadTransactions.js\";\nimport React, { useState } from 'react';\nimport { useHistory } from 'react-router';\nimport { InboxOutlined } from '@ant-design/icons';\nimport { Form, Button, Upload, Typography, message } from 'antd';\nimport axios from 'axios';\nimport FileMapping from 'assets/functions/FileMapping';\nimport XLSX from 'xlsx';\nconst {\n  Title\n} = Typography;\nconst {\n  Dragger\n} = Upload;\nconst formItemLayout = {\n  labelCol: {\n    span: 6\n  },\n  wrapperCol: {\n    span: 14\n  }\n};\n\nconst normFile = e => {\n  console.log('Upload event:', e);\n\n  if (Array.isArray(e)) {\n    return e;\n  }\n\n  return e && e.fileList;\n};\n\nconst UploadTransactions = props => {\n  const {\n    push\n  } = useHistory();\n  const [data, setData] = useState([]);\n  const [cols, setCols] = useState([]);\n  const [selectedFile, setSelectedFile] = useState(null);\n\n  const onFinish = values => {\n    console.log('Received values of form: ', values);\n  }; // --- Reading and parsing Excel File --- //\n  // const handleFile = file => {\n  //     const reader = new FileReader()\n  //     const rABS = !!reader.readAsBinaryString;\n  //     reader.onload = e => {\n  //         const bstr = e.target.result\n  //         const wb = XLSX.read(bstr, { type: rABS ? 'binary' : 'array' })\n  // \t    /* Get first worksheet */\n  // \t    const wsname = wb.SheetNames[0];\n  // \t    const ws = wb.Sheets[wsname];\n  //         // let first_worksheet = workbook.Sheets[workbook.SheetNames[0]];\n  //         const data = XLSX.utils.sheet_to_json(ws, { header:1 });\n  //         setData(data)\n  //         setCols(make_cols(ws['!ref']))\n  //     }\n  //     if (rABS) reader.readAsBinaryString(file)\n  //     else reader.readAsArrayBuffer(file)\n  // }\n\n\n  return /*#__PURE__*/React.createElement(Form, Object.assign({\n    name: \"validate_other\"\n  }, formItemLayout, {\n    onFinish: onFinish,\n    initialValues: {\n      rate: 3.5\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(Form.Item, {\n    justify: \"center\",\n    style: {\n      textAlign: 'center',\n      marginTop: '1%'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Title, {\n    level: 1,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 17\n    }\n  }, \"Upload Transactions\")), /*#__PURE__*/React.createElement(Form.Item, {\n    justify: \"center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Form.Item, {\n    name: \"excelFileUpload\",\n    valuePropName: \"fileList\",\n    getValueFromEvent: normFile,\n    noStyle: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Dragger, {\n    name: \"files\",\n    action: \"/upload.do\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"p\", {\n    className: \"ant-upload-drag-icon\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(InboxOutlined, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 29\n    }\n  })), /*#__PURE__*/React.createElement(\"p\", {\n    className: \"ant-upload-text\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 25\n    }\n  }, \"Click or drag file to this area to upload\"), /*#__PURE__*/React.createElement(\"p\", {\n    className: \"ant-upload-hint\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 25\n    }\n  }, \"Support for single and bulk upload.\")))), /*#__PURE__*/React.createElement(Form.Item, {\n    style: {\n      display: 'flex',\n      justifyContent: 'center',\n      alignItems: 'center'\n    },\n    className: \"mt-5\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    onClick: () => push(\"app/journeys/dashboard\"),\n    variant: \"contained\",\n    type: \"primary\",\n    style: {\n      width: '100%',\n      height: '3rem',\n      fontSize: '1.25rem'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 17\n    }\n  }, \"Create Transactions\")));\n};\n\nexport default UploadTransactions;","map":{"version":3,"sources":["/Users/dhruvaagrawal/Desktop/Work/Spocto/CMS/app/src/views/app-views/ops-admin/UploadTransactions.js"],"names":["React","useState","useHistory","InboxOutlined","Form","Button","Upload","Typography","message","axios","FileMapping","XLSX","Title","Dragger","formItemLayout","labelCol","span","wrapperCol","normFile","e","console","log","Array","isArray","fileList","UploadTransactions","props","push","data","setData","cols","setCols","selectedFile","setSelectedFile","onFinish","values","rate","textAlign","marginTop","display","justifyContent","alignItems","width","height","fontSize"],"mappings":"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","sourcesContent":["import React, { useState } from 'react'\nimport { useHistory } from 'react-router'\nimport { InboxOutlined } from '@ant-design/icons';\nimport { Form, Button, Upload, Typography, message } from 'antd';\nimport axios from 'axios'\nimport FileMapping from 'assets/functions/FileMapping'\nimport XLSX from 'xlsx'\n\nconst { Title } = Typography\nconst { Dragger } = Upload\n\nconst formItemLayout = {\n    labelCol: {\n        span: 6,\n    },\n    wrapperCol: {\n        span: 14,\n    },\n};\n\nconst normFile = (e) => {\n    console.log('Upload event:', e);\n    if (Array.isArray(e)) {\n      return e;\n    }\n    return e && e.fileList;\n};\n\nconst UploadTransactions = props => {\n\n    const { push } = useHistory()\n\n    const [ data, setData ] = useState([])\n    const [ cols, setCols ] = useState([])\n    const [ selectedFile, setSelectedFile ] = useState(null)\n\n    const onFinish = (values) => {\n        console.log('Received values of form: ', values);\n    }\n\n    // --- Reading and parsing Excel File --- //\n\n    // const handleFile = file => {\n\n    //     const reader = new FileReader()\n    //     const rABS = !!reader.readAsBinaryString;\n\n    //     reader.onload = e => {\n    //         const bstr = e.target.result\n    //         const wb = XLSX.read(bstr, { type: rABS ? 'binary' : 'array' })\n\n\t// \t    /* Get first worksheet */\n\t// \t    const wsname = wb.SheetNames[0];\n\t// \t    const ws = wb.Sheets[wsname];\n    //         // let first_worksheet = workbook.Sheets[workbook.SheetNames[0]];\n    //         const data = XLSX.utils.sheet_to_json(ws, { header:1 });\n    //         setData(data)\n    //         setCols(make_cols(ws['!ref']))\n    //     }\n\n    //     if (rABS) reader.readAsBinaryString(file)\n    //     else reader.readAsArrayBuffer(file)\n    // }\n\n    return (\n        <Form\n            name=\"validate_other\"\n            {...formItemLayout}\n            onFinish={onFinish}\n            initialValues={{ rate: 3.5 }}\n        >\n            <Form.Item justify=\"center\" style={{ textAlign: 'center', marginTop: '1%' }}>\n                <Title level={1}>Upload Transactions</Title>\n            </Form.Item>\n            <Form.Item justify=\"center\">\n                {/* <input type=\"file\" accept=\".csv, .xlsx\" onChange={ e => handleFileChosen(e.target.files[0]) } /> */}\n                <Form.Item name=\"excelFileUpload\" valuePropName=\"fileList\" getValueFromEvent={normFile} noStyle>\n                    <Dragger name=\"files\" action=\"/upload.do\">\n                        <p className=\"ant-upload-drag-icon\">\n                            <InboxOutlined />\n                        </p>\n                        <p className=\"ant-upload-text\">Click or drag file to this area to upload</p>\n                        <p className=\"ant-upload-hint\">Support for single and bulk upload.</p>\n                    </Dragger>\n                </Form.Item>\n            </Form.Item>\n            <Form.Item style={{display: 'flex', justifyContent: 'center', alignItems: 'center'}} className=\"mt-5\">\n                <Button onClick={ () => push(\"app/journeys/dashboard\")} variant=\"contained\" type=\"primary\" style={{ width: '100%', height: '3rem', fontSize: '1.25rem' }}>Create Transactions</Button>\n            </Form.Item>\n      </Form>\n    );\n};  \n\nexport default UploadTransactions"]},"metadata":{},"sourceType":"module"}