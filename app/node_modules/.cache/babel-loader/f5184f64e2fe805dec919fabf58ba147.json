{"ast":null,"code":"var _jsxFileName = \"/Users/dhruvaagrawal/Desktop/Work/Spocto/CMS/app/src/views/app-views/journeys/journey-ivr/userRoles/index.js\";\nimport React, { Component } from 'react';\nimport { Card, Table, Tag, Tooltip, message, Popconfirm, Button } from 'antd';\nimport { EyeOutlined, DeleteOutlined } from '@ant-design/icons';\nimport moment from 'moment';\nimport UserView from './UserView';\nimport AvatarStatus from 'components/shared-components/AvatarStatus';\nimport userData from \"assets/data/user-list.data.json\";\n\nconst EditableCell = ({\n  editing,\n  dataIndex,\n  title,\n  inputType,\n  record,\n  index,\n  children,\n  ...restProps\n}) => {\n  const inputNode = inputType === 'number' ? /*#__PURE__*/React.createElement(InputNumber, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 10,\n      columnNumber: 45\n    }\n  }) : /*#__PURE__*/React.createElement(Input, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 10,\n      columnNumber: 63\n    }\n  });\n  return /*#__PURE__*/React.createElement(\"td\", Object.assign({}, restProps, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 5\n    }\n  }), editing ? /*#__PURE__*/React.createElement(Form.Item, {\n    name: dataIndex,\n    style: {\n      margin: 0\n    },\n    rules: [{\n      required: true,\n      message: `Please Input ${title}!`\n    }],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 7\n    }\n  }, inputNode) : children);\n}; //   const EditableTable = () => {\n// \tconst [form] = Form.useForm();\n// \tconst [data, setData] = useState(originData);\n// \tconst [editingKey, setEditingKey] = useState('');\n// \tconst isEditing = (record) => record.key === editingKey;\n// \tconst edit = (record) => {\n// \t  form.setFieldsValue({\n// \t\tname: '',\n// \t\tage: '',\n// \t\taddress: '',\n// \t\t...record,\n// \t  });\n// \t  setEditingKey(record.key);\n// \t};\n// \tconst cancel = () => {\n// \t  setEditingKey('');\n// \t};\n// \tconst save = async (key) => {\n// \t  try {\n// \t\tconst row = await form.validateFields();\n// \t\tconst newData = [...data];\n// \t\tconst index = newData.findIndex((item) => key === item.key);\n// \t\tif (index > -1) {\n// \t\t  const item = newData[index];\n// \t\t  newData.splice(index, 1, { ...item, ...row });\n// \t\t  setData(newData);\n// \t\t  setEditingKey('');\n// \t\t} else {\n// \t\t  newData.push(row);\n// \t\t  setData(newData);\n// \t\t  setEditingKey('');\n// \t\t}\n// \t  } catch (errInfo) {\n// \t\tconsole.log('Validate Failed:', errInfo);\n// \t  }\n// \t};\n\n\nexport default class UserRoles extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      users: userData,\n      userProfileVisible: false,\n      selectedUser: null\n    };\n\n    this.deleteUser = userId => {\n      this.setState({\n        users: this.state.users.filter(item => item.id !== userId)\n      });\n      message.success({\n        content: `Deleted user ${userId}`,\n        duration: 2\n      });\n    };\n\n    this.showUserProfile = userInfo => {\n      this.setState({\n        userProfileVisible: true,\n        selectedUser: userInfo\n      });\n    };\n\n    this.closeUserProfile = () => {\n      this.setState({\n        userProfileVisible: false,\n        selectedUser: null\n      });\n    };\n  }\n\n  render() {\n    const {\n      users,\n      userProfileVisible,\n      selectedUser\n    } = this.state;\n    const tableColumns = [{\n      title: 'User',\n      dataIndex: 'name',\n      render: (_, record) => /*#__PURE__*/React.createElement(\"div\", {\n        className: \"d-flex\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 113,\n          columnNumber: 6\n        }\n      }, /*#__PURE__*/React.createElement(AvatarStatus, {\n        src: record.img,\n        name: record.name,\n        subTitle: record.email,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 114,\n          columnNumber: 7\n        }\n      })),\n      sorter: {\n        compare: (a, b) => {\n          a = a.name.toLowerCase();\n          b = b.name.toLowerCase();\n          return a > b ? -1 : b > a ? 1 : 0;\n        }\n      },\n      editable: true\n    }, /// Use this code for multiple roles management later on\n    // {\n    // \ttitle: 'Role',\n    // \tdataIndex: 'role',\n    // \trender: role => (\n    // \t\t<Tag className =\"text-capitalize\" color={ role === 'Super Admin' ? 'red' : role === 'Developer Admin' ? 'blue' : role === 'Admin Ops' ? 'purple' : role === 'Admin Manager' ? 'orange' : 'cyan' }>{ role }</Tag>\n    // \t),\n    // \tsorter: {\n    // \t\tcompare: (a, b) => a.role.length - b.role.length,\n    // \t},\n    // },\n    {\n      title: 'Role',\n      dataIndex: 'role',\n      render: role => /*#__PURE__*/React.createElement(Tag, {\n        className: \"text-capitalize\",\n        color: role === 'Admin' ? 'red' : role === 'Manager' ? 'blue' : 'cyan',\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 141,\n          columnNumber: 6\n        }\n      }, role),\n      sorter: {\n        compare: (a, b) => a.role.length - b.role.length\n      },\n      editable: true\n    }, {\n      title: 'Last online',\n      dataIndex: 'lastOnline',\n      render: date => /*#__PURE__*/React.createElement(\"span\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 152,\n          columnNumber: 6\n        }\n      }, moment.unix(date).format(\"MM/DD/YYYY\"), \" \"),\n      sorter: (a, b) => moment(a.lastOnline).unix() - moment(b.lastOnline).unix()\n    }, {\n      title: 'operation',\n      dataIndex: 'operation',\n      render: (_, record) => {\n        const editable = isEditing(record);\n        return editable ? /*#__PURE__*/React.createElement(\"span\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 162,\n            columnNumber: 6\n          }\n        }, /*#__PURE__*/React.createElement(\"a\", {\n          href: \"javascript:;\",\n          onClick: () => save(record.key),\n          style: {\n            marginRight: 8\n          },\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 163,\n            columnNumber: 8\n          }\n        }, \"Save\"), /*#__PURE__*/React.createElement(Popconfirm, {\n          title: \"Sure to cancel?\",\n          onConfirm: cancel,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 172,\n            columnNumber: 8\n          }\n        }, /*#__PURE__*/React.createElement(\"a\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 173,\n            columnNumber: 7\n          }\n        }, \"Cancel\"))) : /*#__PURE__*/React.createElement(\"a\", {\n          disabled: editingKey !== '',\n          onClick: () => edit(record),\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 177,\n            columnNumber: 6\n          }\n        }, \"Edit\");\n      }\n    }, {\n      title: '',\n      dataIndex: 'actions',\n      render: (_, elm) => /*#__PURE__*/React.createElement(\"div\", {\n        className: \"text-right\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 187,\n          columnNumber: 6\n        }\n      }, /*#__PURE__*/React.createElement(Tooltip, {\n        title: \"View\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 188,\n          columnNumber: 7\n        }\n      }, /*#__PURE__*/React.createElement(Button, {\n        type: \"primary\",\n        className: \"mr-2\",\n        icon: /*#__PURE__*/React.createElement(EyeOutlined, {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 189,\n            columnNumber: 54\n          }\n        }),\n        onClick: () => {\n          this.showUserProfile(elm);\n        },\n        size: \"small\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 189,\n          columnNumber: 8\n        }\n      })), /*#__PURE__*/React.createElement(Tooltip, {\n        title: \"Delete\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 191,\n          columnNumber: 7\n        }\n      }, /*#__PURE__*/React.createElement(Button, {\n        danger: true,\n        icon: /*#__PURE__*/React.createElement(DeleteOutlined, {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 192,\n            columnNumber: 29\n          }\n        }),\n        onClick: () => {\n          this.deleteUser(elm.id);\n        },\n        size: \"small\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 192,\n          columnNumber: 8\n        }\n      })))\n    }];\n    return /*#__PURE__*/React.createElement(Card, {\n      bodyStyle: {\n        'padding': '0px'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 199,\n        columnNumber: 4\n      }\n    }, /*#__PURE__*/React.createElement(Table, {\n      columns: tableColumns,\n      dataSource: users,\n      rowKey: \"id\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 200,\n        columnNumber: 5\n      }\n    }), /*#__PURE__*/React.createElement(UserView, {\n      data: selectedUser,\n      visible: userProfileVisible,\n      close: () => {\n        this.closeUserProfile();\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 201,\n        columnNumber: 5\n      }\n    }));\n  }\n\n}","map":{"version":3,"sources":["/Users/dhruvaagrawal/Desktop/Work/Spocto/CMS/app/src/views/app-views/journeys/journey-ivr/userRoles/index.js"],"names":["React","Component","Card","Table","Tag","Tooltip","message","Popconfirm","Button","EyeOutlined","DeleteOutlined","moment","UserView","AvatarStatus","userData","EditableCell","editing","dataIndex","title","inputType","record","index","children","restProps","inputNode","margin","required","UserRoles","state","users","userProfileVisible","selectedUser","deleteUser","userId","setState","filter","item","id","success","content","duration","showUserProfile","userInfo","closeUserProfile","render","tableColumns","_","img","name","email","sorter","compare","a","b","toLowerCase","editable","role","length","date","unix","format","lastOnline","isEditing","save","key","marginRight","cancel","editingKey","edit","elm"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\nimport { Card, Table, Tag, Tooltip, message, Popconfirm, Button } from 'antd';\nimport { EyeOutlined, DeleteOutlined } from '@ant-design/icons';\nimport moment from 'moment';\nimport UserView from './UserView';\nimport AvatarStatus from 'components/shared-components/AvatarStatus';\nimport userData from \"assets/data/user-list.data.json\";\n\nconst EditableCell = ({ editing, dataIndex, title, inputType, record, index, children, ...restProps }) => {\n\tconst inputNode = inputType === 'number' ? <InputNumber /> : <Input />;\n\treturn (\n\t  \t<td {...restProps}>\n\t\t\t{editing ? (\n\t\t  \t\t<Form.Item\n\t\t\t\t\tname={dataIndex}\n\t\t\t\t\tstyle={{\n\t\t\t\t\tmargin: 0,\n\t\t\t\t\t}}\n\t\t\t\t\trules={[\n\t\t\t\t\t{\n\t\t\t\t\t\trequired: true,\n\t\t\t\t\t\tmessage: `Please Input ${title}!`,\n\t\t\t\t\t},\n\t\t\t\t\t]}\n\t\t\t\t>\n\t\t\t\t\t{inputNode}\n\t\t  \t\t</Form.Item>\n\t\t\t) : ( children )\n\t\t\t}\n\t  \t</td>\n\t);\n  };\n  \n//   const EditableTable = () => {\n// \tconst [form] = Form.useForm();\n// \tconst [data, setData] = useState(originData);\n// \tconst [editingKey, setEditingKey] = useState('');\n  \n// \tconst isEditing = (record) => record.key === editingKey;\n  \n// \tconst edit = (record) => {\n// \t  form.setFieldsValue({\n// \t\tname: '',\n// \t\tage: '',\n// \t\taddress: '',\n// \t\t...record,\n// \t  });\n// \t  setEditingKey(record.key);\n// \t};\n  \n// \tconst cancel = () => {\n// \t  setEditingKey('');\n// \t};\n  \n// \tconst save = async (key) => {\n// \t  try {\n// \t\tconst row = await form.validateFields();\n// \t\tconst newData = [...data];\n// \t\tconst index = newData.findIndex((item) => key === item.key);\n  \n// \t\tif (index > -1) {\n// \t\t  const item = newData[index];\n// \t\t  newData.splice(index, 1, { ...item, ...row });\n// \t\t  setData(newData);\n// \t\t  setEditingKey('');\n// \t\t} else {\n// \t\t  newData.push(row);\n// \t\t  setData(newData);\n// \t\t  setEditingKey('');\n// \t\t}\n// \t  } catch (errInfo) {\n// \t\tconsole.log('Validate Failed:', errInfo);\n// \t  }\n// \t};\n\nexport default class UserRoles extends Component {\n\n\tstate = {\n\t\tusers: userData,\n\t\tuserProfileVisible: false,\n\t\tselectedUser: null\n\t}\n\n\tdeleteUser = userId => {\n\t\tthis.setState({\n\t\t\tusers: this.state.users.filter(item => item.id !== userId),\n\t\t})\n\t\tmessage.success({ content: `Deleted user ${userId}`, duration: 2 });\n\t}\n\n\tshowUserProfile = userInfo => {\n\t\tthis.setState({\n\t\t\tuserProfileVisible: true,\n\t\t\tselectedUser: userInfo\n\t\t});\n\t};\n\t\n\tcloseUserProfile = () => {\n\t\tthis.setState({\n\t\t\tuserProfileVisible: false,\n\t\t\tselectedUser: null\n    });\n\t}\n\n\trender() {\n\t\tconst { users, userProfileVisible, selectedUser } = this.state;\n\n\t\tconst tableColumns = [\n\t\t\t{\n\t\t\t\ttitle: 'User',\n\t\t\t\tdataIndex: 'name',\n\t\t\t\trender: (_, record) => (\n\t\t\t\t\t<div className=\"d-flex\">\n\t\t\t\t\t\t<AvatarStatus src={record.img} name={record.name} subTitle={record.email}/>\n\t\t\t\t\t</div>\n\t\t\t\t),\n\t\t\t\tsorter: {\n\t\t\t\t\tcompare: (a, b) => {\n\t\t\t\t\t\ta = a.name.toLowerCase();\n  \t\t\t\t\t\tb = b.name.toLowerCase();\n\t\t\t\t\t\treturn a > b ? -1 : b > a ? 1 : 0;\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t\teditable: true\n\t\t\t},\n\t\t\t/// Use this code for multiple roles management later on\n\t\t\t// {\n\t\t\t// \ttitle: 'Role',\n\t\t\t// \tdataIndex: 'role',\n\t\t\t// \trender: role => (\n\t\t\t// \t\t<Tag className =\"text-capitalize\" color={ role === 'Super Admin' ? 'red' : role === 'Developer Admin' ? 'blue' : role === 'Admin Ops' ? 'purple' : role === 'Admin Manager' ? 'orange' : 'cyan' }>{ role }</Tag>\n\t\t\t// \t),\n\t\t\t// \tsorter: {\n\t\t\t// \t\tcompare: (a, b) => a.role.length - b.role.length,\n\t\t\t// \t},\n\t\t\t// },\n\t\t\t{\n\t\t\t\ttitle: 'Role',\n\t\t\t\tdataIndex: 'role',\n\t\t\t\trender: role => (\n\t\t\t\t\t<Tag className =\"text-capitalize\" color={role === 'Admin' ? 'red' : role === 'Manager' ? 'blue' : 'cyan' }>{role}</Tag>\n\t\t\t\t),\n\t\t\t\tsorter: {\n\t\t\t\t\tcompare: (a, b) => a.role.length - b.role.length,\n\t\t\t\t},\n\t\t\t\teditable: true\n\t\t\t},\n\t\t\t{\n\t\t\t\ttitle: 'Last online',\n\t\t\t\tdataIndex: 'lastOnline',\n\t\t\t\trender: date => (\n\t\t\t\t\t<span>{moment.unix(date).format(\"MM/DD/YYYY\")} </span>\n\t\t\t\t),\n\t\t\t\tsorter: (a, b) => moment(a.lastOnline).unix() - moment(b.lastOnline).unix()\n\t\t\t},\n\t\t\t{\n\t\t\t\ttitle: 'operation',\n\t\t\t\tdataIndex: 'operation',\n\t\t\t\trender: (_, record) => {\n\t\t\t\t  const editable = isEditing(record);\n\t\t\t\t  return editable ? (\n\t\t\t\t\t<span>\n\t\t\t\t\t  <a\n\t\t\t\t\t\thref=\"javascript:;\"\n\t\t\t\t\t\tonClick={() => save(record.key)}\n\t\t\t\t\t\tstyle={{\n\t\t\t\t\t\t  marginRight: 8,\n\t\t\t\t\t\t}}\n\t\t\t\t\t  >\n\t\t\t\t\t\tSave\n\t\t\t\t\t  </a>\n\t\t\t\t\t  <Popconfirm title=\"Sure to cancel?\" onConfirm={cancel}>\n\t\t\t\t\t\t<a>Cancel</a>\n\t\t\t\t\t  </Popconfirm>\n\t\t\t\t\t</span>\n\t\t\t\t  ) : (\n\t\t\t\t\t<a disabled={editingKey !== ''} onClick={() => edit(record)}>\n\t\t\t\t\t  Edit\n\t\t\t\t\t</a>\n\t\t\t\t  );\n\t\t\t\t},\n\t\t\t},\n\t\t\t{\n\t\t\t\ttitle: '',\n\t\t\t\tdataIndex: 'actions',\n\t\t\t\trender: (_, elm) => (\n\t\t\t\t\t<div className=\"text-right\">\n\t\t\t\t\t\t<Tooltip title=\"View\">\n\t\t\t\t\t\t\t<Button type=\"primary\" className=\"mr-2\" icon={<EyeOutlined />} onClick={() => {this.showUserProfile(elm)}} size=\"small\"/>\n\t\t\t\t\t\t</Tooltip>\n\t\t\t\t\t\t<Tooltip title=\"Delete\">\n\t\t\t\t\t\t\t<Button danger icon={<DeleteOutlined />} onClick={()=> {this.deleteUser(elm.id)}} size=\"small\"/>\n\t\t\t\t\t\t</Tooltip>\n\t\t\t\t\t</div>\n\t\t\t\t)\n\t\t\t}\n\t\t];\n\t\treturn (\n\t\t\t<Card bodyStyle={{'padding': '0px'}}>\n\t\t\t\t<Table columns={tableColumns} dataSource={users} rowKey='id' />\n\t\t\t\t<UserView data={selectedUser} visible={userProfileVisible} close={()=> {this.closeUserProfile()}}/>\n\t\t\t</Card>\n\t\t)\n\t}\n}"]},"metadata":{},"sourceType":"module"}