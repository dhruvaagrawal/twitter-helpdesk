{"ast":null,"code":"var _jsxFileName = \"/Users/dhruvaagrawal/Desktop/Work/Spocto/CMS/app/src/views/index.js\";\nimport React from \"react\";\nimport { Route, Switch, Redirect, withRouter } from \"react-router-dom\";\nimport { connect } from \"react-redux\";\nimport AppLayout from \"layouts/app-layout\";\nimport AuthLayout from 'layouts/auth-layout';\nimport AppLocale from \"lang\";\nimport { IntlProvider } from \"react-intl\";\nimport { ConfigProvider } from 'antd';\nimport { APP_PREFIX_PATH, AUTH_PREFIX_PATH } from 'configs/AppConfig';\n\nfunction RouteInterceptor({\n  children,\n  isAuthenticated,\n  ...rest\n}) {\n  return /*#__PURE__*/React.createElement(Route, Object.assign({}, rest, {\n    render: ({\n      location\n    }) => isAuthenticated ? children : /*#__PURE__*/React.createElement(Redirect, {\n      to: {\n        pathname: AUTH_PREFIX_PATH,\n        state: {\n          from: location\n        }\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 19,\n        columnNumber: 11\n      }\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 5\n    }\n  }));\n}\n\nexport const Views = props => {\n  const {\n    locale,\n    location\n  } = props;\n  const currentAppLocale = AppLocale[locale];\n  return /*#__PURE__*/React.createElement(IntlProvider, {\n    locale: currentAppLocale.locale,\n    messages: currentAppLocale.messages,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(ConfigProvider, {\n    locale: currentAppLocale.antd,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Switch, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Route, {\n    exact: true,\n    path: \"/\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Redirect, {\n    to: APP_PREFIX_PATH,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 13\n    }\n  })), /*#__PURE__*/React.createElement(Route, {\n    path: AUTH_PREFIX_PATH,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(AuthLayout, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 13\n    }\n  })), /*#__PURE__*/React.createElement(Route, {\n    path: APP_PREFIX_PATH,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(AppLayout, {\n    location: location,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 13\n    }\n  })))));\n};\n\nconst mapStateToProps = ({\n  theme,\n  auth\n}) => {\n  const {\n    locale\n  } = theme;\n  const {\n    token\n  } = auth;\n  return {\n    locale,\n    token\n  };\n};\n\nexport default withRouter(connect(mapStateToProps)(Views));","map":{"version":3,"sources":["/Users/dhruvaagrawal/Desktop/Work/Spocto/CMS/app/src/views/index.js"],"names":["React","Route","Switch","Redirect","withRouter","connect","AppLayout","AuthLayout","AppLocale","IntlProvider","ConfigProvider","APP_PREFIX_PATH","AUTH_PREFIX_PATH","RouteInterceptor","children","isAuthenticated","rest","location","pathname","state","from","Views","props","locale","currentAppLocale","messages","antd","mapStateToProps","theme","auth","token"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,KAAT,EAAgBC,MAAhB,EAAwBC,QAAxB,EAAkCC,UAAlC,QAAoD,kBAApD;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,OAAOC,SAAP,MAAsB,oBAAtB;AACA,OAAOC,UAAP,MAAuB,qBAAvB;AACA,OAAOC,SAAP,MAAsB,MAAtB;AACA,SAASC,YAAT,QAA6B,YAA7B;AACA,SAASC,cAAT,QAA+B,MAA/B;AACA,SAASC,eAAT,EAA0BC,gBAA1B,QAAkD,mBAAlD;;AAEA,SAASC,gBAAT,CAA0B;AAAEC,EAAAA,QAAF;AAAYC,EAAAA,eAAZ;AAA6B,KAAGC;AAAhC,CAA1B,EAAkE;AAChE,sBACE,oBAAC,KAAD,oBACMA,IADN;AAEE,IAAA,MAAM,EAAE,CAAC;AAAEC,MAAAA;AAAF,KAAD,KACNF,eAAe,GACbD,QADa,gBAGb,oBAAC,QAAD;AACE,MAAA,EAAE,EAAE;AACFI,QAAAA,QAAQ,EAAEN,gBADR;AAEFO,QAAAA,KAAK,EAAE;AAAEC,UAAAA,IAAI,EAAEH;AAAR;AAFL,OADN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MANN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KADF;AAiBD;;AAED,OAAO,MAAMI,KAAK,GAAIC,KAAD,IAAW;AAC9B,QAAM;AAAEC,IAAAA,MAAF;AAAUN,IAAAA;AAAV,MAAuBK,KAA7B;AACA,QAAME,gBAAgB,GAAGhB,SAAS,CAACe,MAAD,CAAlC;AACA,sBACE,oBAAC,YAAD;AACE,IAAA,MAAM,EAAGC,gBAAgB,CAACD,MAD5B;AAEE,IAAA,QAAQ,EAAGC,gBAAgB,CAACC,QAF9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAGE,oBAAC,cAAD;AAAgB,IAAA,MAAM,EAAGD,gBAAgB,CAACE,IAA1C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,KAAD;AAAO,IAAA,KAAK,MAAZ;AAAa,IAAA,IAAI,EAAC,GAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,QAAD;AAAU,IAAA,EAAE,EAAGf,eAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CADF,eAIE,oBAAC,KAAD;AAAO,IAAA,IAAI,EAAGC,gBAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,UAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CAJF,eAOE,oBAAC,KAAD;AAAO,IAAA,IAAI,EAAGD,eAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,SAAD;AAAW,IAAA,QAAQ,EAAGM,QAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CAPF,CADF,CAHF,CADF;AAmBD,CAtBM;;AAwBP,MAAMU,eAAe,GAAG,CAAC;AAAEC,EAAAA,KAAF;AAASC,EAAAA;AAAT,CAAD,KAAqB;AAC3C,QAAM;AAAEN,IAAAA;AAAF,MAAcK,KAApB;AACA,QAAM;AAAEE,IAAAA;AAAF,MAAYD,IAAlB;AACA,SAAO;AAAEN,IAAAA,MAAF;AAAUO,IAAAA;AAAV,GAAP;AACD,CAJD;;AAMA,eAAe1B,UAAU,CAACC,OAAO,CAACsB,eAAD,CAAP,CAAyBN,KAAzB,CAAD,CAAzB","sourcesContent":["import React from \"react\";\r\nimport { Route, Switch, Redirect, withRouter } from \"react-router-dom\";\r\nimport { connect } from \"react-redux\";\r\nimport AppLayout from \"layouts/app-layout\";\r\nimport AuthLayout from 'layouts/auth-layout';\r\nimport AppLocale from \"lang\";\r\nimport { IntlProvider } from \"react-intl\";\r\nimport { ConfigProvider } from 'antd';\r\nimport { APP_PREFIX_PATH, AUTH_PREFIX_PATH } from 'configs/AppConfig'\r\n\r\nfunction RouteInterceptor({ children, isAuthenticated, ...rest }) {\r\n  return (\r\n    <Route\r\n      {...rest}\r\n      render={({ location }) =>\r\n        isAuthenticated ? (\r\n          children\r\n        ) : (\r\n          <Redirect\r\n            to={{\r\n              pathname: AUTH_PREFIX_PATH,\r\n              state: { from: location }\r\n            }}\r\n          />\r\n        )\r\n      }\r\n    />\r\n  );\r\n}\r\n\r\nexport const Views = (props) => {\r\n  const { locale, location } = props;\r\n  const currentAppLocale = AppLocale[locale];\r\n  return (\r\n    <IntlProvider\r\n      locale={ currentAppLocale.locale }\r\n      messages={ currentAppLocale.messages }>\r\n      <ConfigProvider locale={ currentAppLocale.antd }>\r\n        <Switch>\r\n          <Route exact path=\"/\">\r\n            <Redirect to={ APP_PREFIX_PATH } />\r\n          </Route>\r\n          <Route path={ AUTH_PREFIX_PATH }>\r\n            <AuthLayout />\r\n          </Route>\r\n          <Route path={ APP_PREFIX_PATH }>\r\n            <AppLayout location={ location }/>\r\n          </Route> \r\n        </Switch>\r\n      </ConfigProvider>\r\n    </IntlProvider>\r\n  )\r\n}\r\n\r\nconst mapStateToProps = ({ theme, auth }) => {\r\n  const { locale } =  theme;\r\n  const { token } = auth;\r\n  return { locale, token }\r\n};\r\n\r\nexport default withRouter(connect(mapStateToProps)(Views));"]},"metadata":{},"sourceType":"module"}