{"ast":null,"code":"var _jsxFileName = \"/Users/dhruvaagrawal/Desktop/Work/Spocto/CMS/app/src/views/app-views/ops-admin/SheetJS.js\";\nimport React, { useState } from 'react';\nimport { Button, Col, Form, Row, Typography, Upload } from 'antd';\nimport { InboxOutlined } from '@ant-design/icons';\nimport XLSX from 'xlsx';\nconst {\n  Title\n} = Typography;\nconst {\n  Dragger\n} = Upload;\nconst formItemLayout = {\n  labelCol: {\n    span: 6\n  },\n  wrapperCol: {\n    span: 14\n  }\n};\n\nconst FileMapper = () => {\n  const [data, setData] = useState([]);\n  const [cols, setCols] = useState([]);\n\n  const handleFile = (file, props) => {\n    /* Boilerplate to set up FileReader */\n    const reader = new FileReader();\n    const rABS = !!reader.readAsBinaryString;\n\n    reader.onload = e => {\n      /* Parse data */\n      const bstr = e.target.result;\n      const wb = XLSX.read(bstr, {\n        type: rABS ? 'binary' : 'array'\n      });\n      /* Get first worksheet */\n\n      const wsname = wb.SheetNames[0];\n      const ws = wb.Sheets[wsname];\n      /* Convert array of arrays */\n\n      const data = XLSX.utils.sheet_to_json(ws, {\n        header: 1\n      });\n      /* Update state */\n\n      setData(data);\n      setCols(make_cols(ws['!ref']));\n    };\n\n    if (rABS) reader.readAsBinaryString(file);else reader.readAsArrayBuffer(file);\n  };\n\n  return /*#__PURE__*/React.createElement(DragDropFile, {\n    handleFile: handleFile,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 3\n    }\n  }, /*#__PURE__*/React.createElement(Row, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 4\n    }\n  }, /*#__PURE__*/React.createElement(Col, {\n    span: 24,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(DataInput, {\n    handleFile: handleFile,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 6\n    }\n  }))), /*#__PURE__*/React.createElement(Row, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 4\n    }\n  }, /*#__PURE__*/React.createElement(Col, {\n    span: 24,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    disabled: !data.length,\n    className: \"btn btn-success\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 6\n    }\n  }, \"Create Transactions\"))), console.log(data));\n};\n/* -------------------------------------------------------------------------- */\n\n/*\n  Simple HTML5 file drag-and-drop wrapper\n  usage: <DragDropFile handleFile={handleFile}>...</DragDropFile>\n    handleFile(file:File):void;\n*/\n\n\nconst DragDropFile = props => {\n  const suppress = evt => {\n    evt.stopPropagation();\n    evt.preventDefault();\n  };\n\n  const onDrop = evt => {\n    evt.stopPropagation();\n    evt.preventDefault();\n    const files = evt.dataTransfer.files;\n    if (files && files[0]) props.handleFile(files[0]);\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    onDrop: onDrop,\n    onDragEnter: suppress,\n    onDragOver: suppress,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 3\n    }\n  }, props.children);\n};\n/*\n  Simple HTML5 file input wrapper\n  usage: <DataInput handleFile={callback} />\n    handleFile(file:File):void;\n*/\n\n\nconst DataInput = props => {\n  const handleDragEnter = e => {\n    e.preventDefault();\n    e.stopPropagation();\n  };\n\n  const handleDragLeave = e => {\n    e.preventDefault();\n    e.stopPropagation();\n  };\n\n  const handleDragOver = event => {\n    event.stopPropagation();\n    event.preventDefault(); // Style the drag-and-drop as a \"copy file\" operation.\n\n    event.dataTransfer.dropEffect = 'copy';\n  };\n\n  const handleDrop = event => {\n    event.stopPropagation();\n    event.preventDefault();\n    const fileList = event.dataTransfer.files;\n    console.log(fileList);\n  };\n\n  const handleChange = e => {\n    const files = e.target.files;\n    if (files && files[0]) props.handleFile(files[0]);\n  };\n\n  const onFinish = values => {\n    console.log('Received values of form: ', values);\n  };\n\n  return /*#__PURE__*/React.createElement(Form, Object.assign({\n    name: \"validate_other\"\n  }, formItemLayout, {\n    onFinish: onFinish,\n    initialValues: {\n      rate: 3.5\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 127,\n      columnNumber: 3\n    }\n  }), /*#__PURE__*/React.createElement(Form.Item, {\n    justify: \"center\",\n    style: {\n      textAlign: 'center',\n      marginTop: '1%'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 133,\n      columnNumber: 4\n    }\n  }, /*#__PURE__*/React.createElement(Title, {\n    level: 1,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 134,\n      columnNumber: 5\n    }\n  }, \"Upload Transactions\")), /*#__PURE__*/React.createElement(Form.Item, {\n    style: {\n      border: '2px black dashed',\n      height: '400px',\n      margin: '0 auto'\n    },\n    onDrop: e => handleDrop(e),\n    onDragOver: e => handleDragOver(e),\n    onDragEnter: e => handleDragEnter(e),\n    onDragLeave: e => handleDragLeave(e),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 136,\n      columnNumber: 4\n    }\n  }, /*#__PURE__*/React.createElement(\"p\", {\n    className: \"ant-upload-drag-icon\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 143,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    type: \"file\",\n    className: \"form-control\",\n    id: \"file\",\n    accept: SheetJSFT,\n    onChange: handleChange,\n    size: \"100\",\n    style: {\n      height: '400px',\n      outline: '0 none',\n      marginTop: '50vh'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 144,\n      columnNumber: 6\n    }\n  }))));\n};\n/* list of supported file types */\n\n\nconst SheetJSFT = [\"xlsx\", \"xlsb\", \"xlsm\", \"xls\", \"xml\", \"csv\", \"txt\"].map(function (x) {\n  return \".\" + x;\n}).join(\",\");\n/* generate an array of column objects */\n\nconst make_cols = refstr => {\n  let o = [],\n      C = XLSX.utils.decode_range(refstr).e.c + 1;\n\n  for (var i = 0; i < C; ++i) o[i] = {\n    name: XLSX.utils.encode_col(i),\n    key: i\n  };\n\n  return o;\n};\n\nexport default FileMapper;","map":{"version":3,"sources":["/Users/dhruvaagrawal/Desktop/Work/Spocto/CMS/app/src/views/app-views/ops-admin/SheetJS.js"],"names":["React","useState","Button","Col","Form","Row","Typography","Upload","InboxOutlined","XLSX","Title","Dragger","formItemLayout","labelCol","span","wrapperCol","FileMapper","data","setData","cols","setCols","handleFile","file","props","reader","FileReader","rABS","readAsBinaryString","onload","e","bstr","target","result","wb","read","type","wsname","SheetNames","ws","Sheets","utils","sheet_to_json","header","make_cols","readAsArrayBuffer","length","console","log","DragDropFile","suppress","evt","stopPropagation","preventDefault","onDrop","files","dataTransfer","children","DataInput","handleDragEnter","handleDragLeave","handleDragOver","event","dropEffect","handleDrop","fileList","handleChange","onFinish","values","rate","textAlign","marginTop","border","height","margin","SheetJSFT","outline","map","x","join","refstr","o","C","decode_range","c","i","name","encode_col","key"],"mappings":"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","sourcesContent":["import React, { useState } from 'react'\nimport { Button, Col, Form, Row, Typography, Upload } from 'antd'\nimport { InboxOutlined } from '@ant-design/icons'\nimport XLSX from 'xlsx'\n\nconst { Title } = Typography\nconst { Dragger } = Upload\n\nconst formItemLayout = {\n    labelCol: {\n        span: 6,\n    },\n    wrapperCol: {\n        span: 14,\n    },\n};\n\nconst FileMapper = () => {\n\n\tconst [ data, setData ] = useState([])\n\tconst [ cols, setCols ] = useState([])\n\n\tconst handleFile = (file, props) => {\n\t\t/* Boilerplate to set up FileReader */\n\t\tconst reader = new FileReader();\n\t\tconst rABS = !!reader.readAsBinaryString;\n\t\treader.onload = e => {\n\t\t\t/* Parse data */\n\t\t\tconst bstr = e.target.result;\n\t\t\tconst wb = XLSX.read(bstr, {type:rABS ? 'binary' : 'array'});\n\t\t\t/* Get first worksheet */\n\t\t\tconst wsname = wb.SheetNames[0];\n\t\t\tconst ws = wb.Sheets[wsname];\n\t\t\t/* Convert array of arrays */\n\t\t\tconst data = XLSX.utils.sheet_to_json(ws, {header:1});\n\t\t\t/* Update state */\n\t\t\tsetData(data)\n\t\t\tsetCols(make_cols(ws['!ref']))\n\t\t}\n\t\tif(rABS) reader.readAsBinaryString(file); else reader.readAsArrayBuffer(file);\n\t};\n\n\treturn (\n\t\t<DragDropFile handleFile={ handleFile }>\n\t\t\t<Row>\n\t\t\t\t<Col span={24}>\n\t\t\t\t\t<DataInput handleFile={ handleFile } />\n\t\t\t\t</Col>\n\t\t\t</Row>\n\t\t\t<Row>\n\t\t\t\t<Col span={24}>\n\t\t\t\t\t<button disabled={ !data.length } className=\"btn btn-success\">Create Transactions</button>\n\t\t\t\t</Col>\n\t\t\t</Row>\n\t\t\t{ console.log(data) }\n\t\t</DragDropFile>\n\t);\n}\n/* -------------------------------------------------------------------------- */\n\n/*\n  Simple HTML5 file drag-and-drop wrapper\n  usage: <DragDropFile handleFile={handleFile}>...</DragDropFile>\n    handleFile(file:File):void;\n*/\nconst DragDropFile = props => {\n\tconst suppress = evt => { \n\t\tevt.stopPropagation()\n\t\tevt.preventDefault() \n\t}\n\n\tconst onDrop = evt => { \n\t\tevt.stopPropagation()\n\t\tevt.preventDefault()\n\t\tconst files = evt.dataTransfer.files\n\t\tif (files && files[0]) props.handleFile(files[0]);\n\t};\n\n\treturn (\n\t\t<div onDrop={ onDrop } onDragEnter={ suppress } onDragOver={ suppress }>\n\t\t\t{ props.children }\n\t\t</div>\n\t); \n};\n\n/*\n  Simple HTML5 file input wrapper\n  usage: <DataInput handleFile={callback} />\n    handleFile(file:File):void;\n*/\nconst DataInput = props => {\n\n\tconst handleDragEnter = e => {\n\t\te.preventDefault();\n\t\te.stopPropagation();\n\t};\n\n\tconst handleDragLeave = e => {\n\t\te.preventDefault();\n\t\te.stopPropagation();\n\t};\n\n\tconst handleDragOver =  event => {\n  \t\tevent.stopPropagation();\n\t\tevent.preventDefault();\n\t\t// Style the drag-and-drop as a \"copy file\" operation.\n\t\tevent.dataTransfer.dropEffect = 'copy';\n\t};\n\n\tconst handleDrop = event => {\n\t\tevent.stopPropagation();\n\t\tevent.preventDefault();\n\t\tconst fileList = event.dataTransfer.files;\n\t\tconsole.log(fileList);\n\t};\n\n\tconst handleChange = e => {\n\t\tconst files = e.target.files;\n\t\tif(files && files[0]) props.handleFile(files[0]);\n\t};\n\n\tconst onFinish = (values) => {\n        console.log('Received values of form: ', values);\n    }\n\n\treturn (\n\t\t<Form\n\t\t\tname=\"validate_other\"\n\t\t\t{...formItemLayout}\n\t\t\tonFinish={onFinish}\n\t\t\tinitialValues={{ rate: 3.5 }}\n\t\t>\n\t\t\t<Form.Item justify=\"center\" style={{ textAlign: 'center', marginTop: '1%' }}>\n\t\t\t\t<Title level={1}>Upload Transactions</Title>\n\t\t\t</Form.Item>\n\t\t\t<Form.Item \n\t\t\t\tstyle={{ border: '2px black dashed', height: '400px', margin: '0 auto' }}       \n\t\t\t\tonDrop={e => handleDrop(e)}\n\t\t\t\tonDragOver={e => handleDragOver(e)}\n\t\t\t\tonDragEnter={e => handleDragEnter(e)}\n\t\t\t\tonDragLeave={e => handleDragLeave(e)}\n\t\t\t>\n\t\t\t\t<p className=\"ant-upload-drag-icon\">\n\t\t\t\t\t<input \n\t\t\t\t\t\ttype=\"file\" \n\t\t\t\t\t\tclassName=\"form-control\" \n\t\t\t\t\t\tid=\"file\" \n\t\t\t\t\t\taccept={ SheetJSFT } \n\t\t\t\t\t\tonChange={ handleChange }  \n\t\t\t\t\t\tsize=\"100\"\n\t\t\t\t\t\tstyle={{ height: '400px', outline: '0 none', marginTop: '50vh' }}\n\t\t\t\t\t/>\n\t\t\t\t</p>\n\t\t\t</Form.Item>\n\t\t</Form>\n\t)\n}\n\n/* list of supported file types */\nconst SheetJSFT = [ \"xlsx\", \"xlsb\", \"xlsm\", \"xls\", \"xml\", \"csv\", \"txt\" ].map(function(x) { return \".\" + x; }).join(\",\");\n\n/* generate an array of column objects */\nconst make_cols = refstr => {\n\tlet o = [], C = XLSX.utils.decode_range(refstr).e.c + 1;\n\tfor(var i = 0; i < C; ++i) o[i] = {name:XLSX.utils.encode_col(i), key:i}\n\treturn o;\n};\n\nexport default FileMapper"]},"metadata":{},"sourceType":"module"}