{"ast":null,"code":"var _jsxFileName = \"/Users/dhruvaagrawal/Desktop/Work/Spocto/CMS/app/src/views/app-views/journeys/dashboard/index.js\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { makeStyles, withStyles } from '@material-ui/core/styles';\nimport clsx from 'clsx';\nimport Stepper from '@material-ui/core/Stepper';\nimport Step from '@material-ui/core/Step';\nimport StepLabel from '@material-ui/core/StepLabel';\nimport SettingsIcon from '@material-ui/icons/Settings';\nimport GroupAddIcon from '@material-ui/icons/GroupAdd';\nimport VideoLabelIcon from '@material-ui/icons/VideoLabel';\nimport StepConnector from '@material-ui/core/StepConnector';\nconst ColorlibConnector = withStyles({\n  alternativeLabel: {\n    top: 22\n  },\n  active: {\n    '& $line': {\n      backgroundImage: 'linear-gradient( 95deg,rgb(242,113,33) 0%,rgb(233,64,87) 50%,rgb(138,35,135) 100%)'\n    }\n  },\n  completed: {\n    '& $line': {\n      backgroundImage: 'linear-gradient( 95deg,rgb(242,113,33) 0%,rgb(233,64,87) 50%,rgb(138,35,135) 100%)'\n    }\n  },\n  line: {\n    height: 3,\n    border: 0,\n    backgroundColor: '#eaeaf0',\n    borderRadius: 1\n  }\n})(StepConnector);\nconst useColorlibStepIconStyles = makeStyles({\n  root: {\n    backgroundColor: '#ccc',\n    zIndex: 1,\n    color: '#fff',\n    width: 50,\n    height: 50,\n    display: 'flex',\n    borderRadius: '50%',\n    justifyContent: 'center',\n    alignItems: 'center'\n  },\n  active: {\n    backgroundImage: 'linear-gradient( 136deg, rgb(242,113,33) 0%, rgb(233,64,87) 50%, rgb(138,35,135) 100%)',\n    boxShadow: '0 4px 10px 0 rgba(0,0,0,.25)'\n  },\n  completed: {\n    backgroundImage: 'linear-gradient( 136deg, rgb(242,113,33) 0%, rgb(233,64,87) 50%, rgb(138,35,135) 100%)'\n  }\n});\n\nfunction ColorlibStepIcon(props) {\n  const classes = useColorlibStepIconStyles();\n  const {\n    active,\n    completed\n  } = props;\n  const icons = {\n    1: /*#__PURE__*/React.createElement(SettingsIcon, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 8\n      }\n    }),\n    2: /*#__PURE__*/React.createElement(GroupAddIcon, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 8\n      }\n    }),\n    3: /*#__PURE__*/React.createElement(VideoLabelIcon, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 8\n      }\n    })\n  };\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: clsx(classes.root, {\n      [classes.active]: active,\n      [classes.completed]: completed\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 5\n    }\n  }, icons[String(props.icon)]);\n}\n\nColorlibStepIcon.propTypes = {\n  /**\n   * Whether this step is active.\n   */\n  active: PropTypes.bool,\n\n  /**\n   * Mark the step as completed. Is passed to child components.\n   */\n  completed: PropTypes.bool,\n\n  /**\n   * The label displayed in the step icon.\n   */\n  icon: PropTypes.node\n};\nconst useStyles = makeStyles(theme => ({\n  root: {\n    width: '100%'\n  },\n  button: {\n    marginRight: theme.spacing(1)\n  },\n  instructions: {\n    marginTop: theme.spacing(1),\n    marginBottom: theme.spacing(1)\n  }\n}));\n\nfunction getSteps() {\n  return ['Select campaign settings', 'Create an ad group', 'Create an ad'];\n}\n\nexport default function CustomizedSteppers() {\n  const classes = useStyles();\n  const [activeStep, setActiveStep] = React.useState(1);\n  const steps = getSteps();\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.root,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 120,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Stepper, {\n    alternativeLabel: true,\n    activeStep: 3,\n    connector: /*#__PURE__*/React.createElement(ColorlibConnector, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 121,\n        columnNumber: 61\n      }\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 121,\n      columnNumber: 7\n    }\n  }, steps.map(label => /*#__PURE__*/React.createElement(Step, {\n    key: label,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 123,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(StepLabel, {\n    StepIconComponent: ColorlibStepIcon,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 124,\n      columnNumber: 13\n    }\n  }, label)))));\n} // <Steps current={1} percent={60} size=\"small\">\n//   <Step title=\"Pending\" status=\"process\" description=\"This is a description.\" />\n//   <Step title=\"Sent to vendor\" subTitle=\"Left 00:00:08\" description=\"This is a description.\" />\n//   <Step title=\"Recording received\" subTitle=\"Left 00:00:08\" description=\"This is a description.\" />\n//   <Step title=\"Creating IVRs\" description=\"This is a description.\" />\n//   <Step title=\"Testing Phase 1\" description=\"This is a description.\" />\n//   <Step title=\"Testing Phase 2\" description=\"This is a description.\" />\n//   <Step title=\"Testing Phase 3\" description=\"This is a description.\" />\n//   <Step title=\"Campaign Ready\" description=\"This is a description.\" />\n// </Steps>","map":{"version":3,"sources":["/Users/dhruvaagrawal/Desktop/Work/Spocto/CMS/app/src/views/app-views/journeys/dashboard/index.js"],"names":["React","PropTypes","makeStyles","withStyles","clsx","Stepper","Step","StepLabel","SettingsIcon","GroupAddIcon","VideoLabelIcon","StepConnector","ColorlibConnector","alternativeLabel","top","active","backgroundImage","completed","line","height","border","backgroundColor","borderRadius","useColorlibStepIconStyles","root","zIndex","color","width","display","justifyContent","alignItems","boxShadow","ColorlibStepIcon","props","classes","icons","String","icon","propTypes","bool","node","useStyles","theme","button","marginRight","spacing","instructions","marginTop","marginBottom","getSteps","CustomizedSteppers","activeStep","setActiveStep","useState","steps","map","label"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,SAASC,UAAT,EAAqBC,UAArB,QAAuC,0BAAvC;AACA,OAAOC,IAAP,MAAiB,MAAjB;AACA,OAAOC,OAAP,MAAoB,2BAApB;AACA,OAAOC,IAAP,MAAiB,wBAAjB;AACA,OAAOC,SAAP,MAAsB,6BAAtB;AACA,OAAOC,YAAP,MAAyB,6BAAzB;AACA,OAAOC,YAAP,MAAyB,6BAAzB;AACA,OAAOC,cAAP,MAA2B,+BAA3B;AACA,OAAOC,aAAP,MAA0B,iCAA1B;AAEA,MAAMC,iBAAiB,GAAGT,UAAU,CAAC;AACnCU,EAAAA,gBAAgB,EAAE;AAChBC,IAAAA,GAAG,EAAE;AADW,GADiB;AAInCC,EAAAA,MAAM,EAAE;AACN,eAAW;AACTC,MAAAA,eAAe,EACb;AAFO;AADL,GAJ2B;AAUnCC,EAAAA,SAAS,EAAE;AACT,eAAW;AACTD,MAAAA,eAAe,EACb;AAFO;AADF,GAVwB;AAgBnCE,EAAAA,IAAI,EAAE;AACJC,IAAAA,MAAM,EAAE,CADJ;AAEJC,IAAAA,MAAM,EAAE,CAFJ;AAGJC,IAAAA,eAAe,EAAE,SAHb;AAIJC,IAAAA,YAAY,EAAE;AAJV;AAhB6B,CAAD,CAAV,CAsBvBX,aAtBuB,CAA1B;AAwBA,MAAMY,yBAAyB,GAAGrB,UAAU,CAAC;AAC3CsB,EAAAA,IAAI,EAAE;AACJH,IAAAA,eAAe,EAAE,MADb;AAEJI,IAAAA,MAAM,EAAE,CAFJ;AAGJC,IAAAA,KAAK,EAAE,MAHH;AAIJC,IAAAA,KAAK,EAAE,EAJH;AAKJR,IAAAA,MAAM,EAAE,EALJ;AAMJS,IAAAA,OAAO,EAAE,MANL;AAOJN,IAAAA,YAAY,EAAE,KAPV;AAQJO,IAAAA,cAAc,EAAE,QARZ;AASJC,IAAAA,UAAU,EAAE;AATR,GADqC;AAY3Cf,EAAAA,MAAM,EAAE;AACNC,IAAAA,eAAe,EACb,wFAFI;AAGNe,IAAAA,SAAS,EAAE;AAHL,GAZmC;AAiB3Cd,EAAAA,SAAS,EAAE;AACTD,IAAAA,eAAe,EACb;AAFO;AAjBgC,CAAD,CAA5C;;AAuBA,SAASgB,gBAAT,CAA0BC,KAA1B,EAAiC;AAC/B,QAAMC,OAAO,GAAGX,yBAAyB,EAAzC;AACA,QAAM;AAAER,IAAAA,MAAF;AAAUE,IAAAA;AAAV,MAAwBgB,KAA9B;AAEA,QAAME,KAAK,GAAG;AACZ,oBAAG,oBAAC,YAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADS;AAEZ,oBAAG,oBAAC,YAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFS;AAGZ,oBAAG,oBAAC,cAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAHS,GAAd;AAMA,sBACE;AACE,IAAA,SAAS,EAAE/B,IAAI,CAAC8B,OAAO,CAACV,IAAT,EAAe;AAC5B,OAACU,OAAO,CAACnB,MAAT,GAAkBA,MADU;AAE5B,OAACmB,OAAO,CAACjB,SAAT,GAAqBA;AAFO,KAAf,CADjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAMGkB,KAAK,CAACC,MAAM,CAACH,KAAK,CAACI,IAAP,CAAP,CANR,CADF;AAUD;;AAEDL,gBAAgB,CAACM,SAAjB,GAA6B;AAC3B;;;AAGAvB,EAAAA,MAAM,EAAEd,SAAS,CAACsC,IAJS;;AAK3B;;;AAGAtB,EAAAA,SAAS,EAAEhB,SAAS,CAACsC,IARM;;AAS3B;;;AAGAF,EAAAA,IAAI,EAAEpC,SAAS,CAACuC;AAZW,CAA7B;AAeA,MAAMC,SAAS,GAAGvC,UAAU,CAAEwC,KAAD,KAAY;AACvClB,EAAAA,IAAI,EAAE;AACJG,IAAAA,KAAK,EAAE;AADH,GADiC;AAIvCgB,EAAAA,MAAM,EAAE;AACNC,IAAAA,WAAW,EAAEF,KAAK,CAACG,OAAN,CAAc,CAAd;AADP,GAJ+B;AAOvCC,EAAAA,YAAY,EAAE;AACZC,IAAAA,SAAS,EAAEL,KAAK,CAACG,OAAN,CAAc,CAAd,CADC;AAEZG,IAAAA,YAAY,EAAEN,KAAK,CAACG,OAAN,CAAc,CAAd;AAFF;AAPyB,CAAZ,CAAD,CAA5B;;AAaA,SAASI,QAAT,GAAoB;AAClB,SAAO,CAAC,0BAAD,EAA6B,oBAA7B,EAAmD,cAAnD,CAAP;AACD;;AAED,eAAe,SAASC,kBAAT,GAA8B;AAC3C,QAAMhB,OAAO,GAAGO,SAAS,EAAzB;AACA,QAAM,CAACU,UAAD,EAAaC,aAAb,IAA8BpD,KAAK,CAACqD,QAAN,CAAe,CAAf,CAApC;AACA,QAAMC,KAAK,GAAGL,QAAQ,EAAtB;AAEA,sBACE;AAAK,IAAA,SAAS,EAAEf,OAAO,CAACV,IAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,OAAD;AAAS,IAAA,gBAAgB,MAAzB;AAA0B,IAAA,UAAU,EAAG,CAAvC;AAA2C,IAAA,SAAS,eAAE,oBAAC,iBAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAtD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACG8B,KAAK,CAACC,GAAN,CAAWC,KAAD,iBACT,oBAAC,IAAD;AAAM,IAAA,GAAG,EAAEA,KAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,SAAD;AAAW,IAAA,iBAAiB,EAAGxB,gBAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAmDwB,KAAnD,CADF,CADD,CADH,CADF,CADF;AAWD,C,CAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport { makeStyles, withStyles } from '@material-ui/core/styles';\nimport clsx from 'clsx';\nimport Stepper from '@material-ui/core/Stepper';\nimport Step from '@material-ui/core/Step';\nimport StepLabel from '@material-ui/core/StepLabel';\nimport SettingsIcon from '@material-ui/icons/Settings';\nimport GroupAddIcon from '@material-ui/icons/GroupAdd';\nimport VideoLabelIcon from '@material-ui/icons/VideoLabel';\nimport StepConnector from '@material-ui/core/StepConnector';\n\nconst ColorlibConnector = withStyles({\n  alternativeLabel: {\n    top: 22,\n  },\n  active: {\n    '& $line': {\n      backgroundImage:\n        'linear-gradient( 95deg,rgb(242,113,33) 0%,rgb(233,64,87) 50%,rgb(138,35,135) 100%)',\n    },\n  },\n  completed: {\n    '& $line': {\n      backgroundImage:\n        'linear-gradient( 95deg,rgb(242,113,33) 0%,rgb(233,64,87) 50%,rgb(138,35,135) 100%)',\n    },\n  },\n  line: {\n    height: 3,\n    border: 0,\n    backgroundColor: '#eaeaf0',\n    borderRadius: 1,\n  },\n})(StepConnector);\n\nconst useColorlibStepIconStyles = makeStyles({\n  root: {\n    backgroundColor: '#ccc',\n    zIndex: 1,\n    color: '#fff',\n    width: 50,\n    height: 50,\n    display: 'flex',\n    borderRadius: '50%',\n    justifyContent: 'center',\n    alignItems: 'center',\n  },\n  active: {\n    backgroundImage:\n      'linear-gradient( 136deg, rgb(242,113,33) 0%, rgb(233,64,87) 50%, rgb(138,35,135) 100%)',\n    boxShadow: '0 4px 10px 0 rgba(0,0,0,.25)',\n  },\n  completed: {\n    backgroundImage:\n      'linear-gradient( 136deg, rgb(242,113,33) 0%, rgb(233,64,87) 50%, rgb(138,35,135) 100%)',\n  },\n});\n\nfunction ColorlibStepIcon(props) {\n  const classes = useColorlibStepIconStyles();\n  const { active, completed } = props;\n\n  const icons = {\n    1: <SettingsIcon />,\n    2: <GroupAddIcon />,\n    3: <VideoLabelIcon />,\n  };\n\n  return (\n    <div\n      className={clsx(classes.root, {\n        [classes.active]: active,\n        [classes.completed]: completed,\n      })}\n    >\n      {icons[String(props.icon)]}\n    </div>\n  );\n}\n\nColorlibStepIcon.propTypes = {\n  /**\n   * Whether this step is active.\n   */\n  active: PropTypes.bool,\n  /**\n   * Mark the step as completed. Is passed to child components.\n   */\n  completed: PropTypes.bool,\n  /**\n   * The label displayed in the step icon.\n   */\n  icon: PropTypes.node,\n};\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    width: '100%',\n  },\n  button: {\n    marginRight: theme.spacing(1),\n  },\n  instructions: {\n    marginTop: theme.spacing(1),\n    marginBottom: theme.spacing(1),\n  },\n}));\n\nfunction getSteps() {\n  return ['Select campaign settings', 'Create an ad group', 'Create an ad'];\n}\n\nexport default function CustomizedSteppers() {\n  const classes = useStyles();\n  const [activeStep, setActiveStep] = React.useState(1);\n  const steps = getSteps();\n\n  return (\n    <div className={classes.root}>\n      <Stepper alternativeLabel activeStep={ 3 } connector={<ColorlibConnector />}>\n        {steps.map((label) => (\n          <Step key={label}>\n            <StepLabel StepIconComponent={ ColorlibStepIcon }>{label}</StepLabel>\n          </Step>\n        ))}\n      </Stepper>\n    </div>\n  );\n}\n\n// <Steps current={1} percent={60} size=\"small\">\n//   <Step title=\"Pending\" status=\"process\" description=\"This is a description.\" />\n//   <Step title=\"Sent to vendor\" subTitle=\"Left 00:00:08\" description=\"This is a description.\" />\n//   <Step title=\"Recording received\" subTitle=\"Left 00:00:08\" description=\"This is a description.\" />\n//   <Step title=\"Creating IVRs\" description=\"This is a description.\" />\n//   <Step title=\"Testing Phase 1\" description=\"This is a description.\" />\n//   <Step title=\"Testing Phase 2\" description=\"This is a description.\" />\n//   <Step title=\"Testing Phase 3\" description=\"This is a description.\" />\n//   <Step title=\"Campaign Ready\" description=\"This is a description.\" />\n// </Steps>\n"]},"metadata":{},"sourceType":"module"}