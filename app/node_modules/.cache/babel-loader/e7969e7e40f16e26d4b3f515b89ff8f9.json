{"ast":null,"code":"var _jsxFileName = \"/Users/dhruvaagrawal/Desktop/Work/Projects/Webdev.nosync/Twitter/app/src/views/app-views/journeys/journey-ivr/taskTracker/ModalForm.js\";\nimport React, { useState, useEffect, useContext, useRef } from 'react';\nimport { Modal, Form, Input, Button, Select, DatePicker, Tag, Badge, Divider, Card, Row, Col, Menu, Dropdown, Avatar } from 'antd';\nimport { FileTextOutlined, PaperClipOutlined, EllipsisOutlined, StarOutlined, DeleteOutlined, StarFilled, CommentOutlined } from '@ant-design/icons';\nimport { modalModeTypes, AssigneeAvatar, getLabelsColor, getCover, createCommentObject } from './utils';\nimport { DATE_FORMAT_DD_MM_YYYY } from 'constants/DateConstant';\nimport { scrumboardData, memberIds, labels } from './ScrumboardData';\nimport moment from 'moment';\nimport { ScrumboardContext } from './ScrumboardContext';\nconst {\n  Option\n} = Select;\n\nconst memberTagRender = props => /*#__PURE__*/React.createElement(AssigneeAvatar, {\n  id: props.value,\n  size: 25,\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 36,\n    columnNumber: 36\n  }\n});\n\nfunction labelTagRender(props) {\n  const {\n    value\n  } = props;\n  return /*#__PURE__*/React.createElement(Tag, {\n    className: \"my-1\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 3\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"d-flex align-items-center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 4\n    }\n  }, /*#__PURE__*/React.createElement(Badge, {\n    color: getLabelsColor(value),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 5\n    }\n  }), /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 5\n    }\n  }, value)));\n}\n\nconst getModalTitle = type => {\n  switch (type) {\n    case modalModeTypes(0):\n      return 'New card';\n\n    case modalModeTypes(2):\n      return 'New board';\n\n    default:\n      return;\n  }\n};\n\nconst AddCardForm = ({\n  onSubmit\n}) => {\n  return /*#__PURE__*/React.createElement(Form, {\n    layout: \"inline\",\n    name: \"add-card-ref\",\n    onFinish: onSubmit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 3\n    }\n  }, /*#__PURE__*/React.createElement(Form.Item, {\n    name: \"cardTitle\",\n    label: \"Card Title\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 4\n    }\n  }, /*#__PURE__*/React.createElement(Input, {\n    autoComplete: \"off\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 5\n    }\n  })), /*#__PURE__*/React.createElement(Form.Item, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 4\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    type: \"primary\",\n    htmlType: \"submit\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 5\n    }\n  }, \"Add\")));\n};\n\nconst UpdateCardForm = ({\n  onSubmit,\n  cardData,\n  listId\n}) => {\n  const context = useContext(ScrumboardContext);\n  const [attachmentsList, setAttachmentsList] = useState(cardData.attachments);\n  const [commentsList, setCommentsList] = useState(cardData.comments);\n  const [cover, setCover] = useState(cardData.cover);\n  const commentInput = useRef();\n  useEffect(() => {\n    setAttachmentsList(cardData.attachments);\n    setCommentsList(cardData.comments);\n    setCover(cardData.cover);\n  }, [cardData.attachments, cardData.comments, cardData.cover]);\n  const initialValues = {\n    name: cardData === null || cardData === void 0 ? void 0 : cardData.name,\n    members: cardData === null || cardData === void 0 ? void 0 : cardData.members,\n    dueDate: (cardData === null || cardData === void 0 ? void 0 : cardData.dueDate) ? moment(cardData.dueDate) : '',\n    labels: cardData === null || cardData === void 0 ? void 0 : cardData.labels,\n    description: cardData === null || cardData === void 0 ? void 0 : cardData.description\n  };\n\n  const onCoverChange = id => {\n    const updatedCover = getCover(id, attachmentsList);\n    updateAttachment(updatedCover);\n  };\n\n  const submitUpdate = values => {\n    let updatedValue = values;\n    updatedValue.attachments = attachmentsList;\n    updatedValue.comments = commentsList;\n    updatedValue.cover = cover;\n    updatedValue.id = cardData.id;\n    onSubmit(updatedValue);\n  };\n\n  const updateAttachment = updatedCover => {\n    const data = context.columns;\n    const updatadedCards = data[listId].map(elm => {\n      if (elm.id === cardData.id) {\n        elm.attachments = attachmentsList;\n        elm.cover = updatedCover;\n      }\n\n      return elm;\n    });\n    data[listId] = updatadedCards;\n    context.updateColumns(data);\n    context.updateOrdered(Object.keys(data));\n  };\n\n  const removeCover = () => {\n    updateAttachment('');\n  };\n\n  const submitComment = () => {\n    const message = commentInput.current.state.value;\n    const {\n      currentListId,\n      columns,\n      updateColumns,\n      updateOrdered\n    } = context;\n    const data = columns;\n    let newComment = createCommentObject();\n    newComment.message = message;\n    const updatedComment = data[currentListId].map(elm => {\n      if (elm.id === cardData.id) {\n        elm.comments = [...elm.comments, ...[newComment]];\n      }\n\n      return elm;\n    });\n    commentInput.current.state.value = '';\n    data[currentListId] = updatedComment;\n    updateColumns(data);\n    updateOrdered(Object.keys(data));\n  };\n\n  return /*#__PURE__*/React.createElement(Form, {\n    name: \"edit-card-ref\",\n    layout: \"vertical\",\n    onFinish: submitUpdate,\n    initialValues: initialValues,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 148,\n      columnNumber: 3\n    }\n  }, /*#__PURE__*/React.createElement(Form.Item, {\n    name: \"name\",\n    className: \"mb-0\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 149,\n      columnNumber: 4\n    }\n  }, /*#__PURE__*/React.createElement(Input, {\n    className: \"board-card-modal input\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 150,\n      columnNumber: 5\n    }\n  })), /*#__PURE__*/React.createElement(Form.Item, {\n    className: \"mb-3\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 152,\n      columnNumber: 4\n    }\n  }, /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 153,\n      columnNumber: 5\n    }\n  }, \"Board: \", /*#__PURE__*/React.createElement(\"span\", {\n    className: \"font-weight-semibold\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 153,\n      columnNumber: 15\n    }\n  }, listId))), /*#__PURE__*/React.createElement(Form.Item, {\n    label: \"Assigned to\",\n    name: \"members\",\n    className: \"blockform-col col-3\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 155,\n      columnNumber: 4\n    }\n  }, /*#__PURE__*/React.createElement(Select, {\n    filterOption: false,\n    tagRender: memberTagRender,\n    mode: \"tags\",\n    removeIcon: null,\n    placeholder: \"None\",\n    className: \"board-card-modal select\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 156,\n      columnNumber: 5\n    }\n  }, memberIds.map(elm => /*#__PURE__*/React.createElement(Option, {\n    key: elm,\n    value: elm,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 166,\n      columnNumber: 8\n    }\n  }, /*#__PURE__*/React.createElement(AssigneeAvatar, {\n    id: elm,\n    name: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 167,\n      columnNumber: 9\n    }\n  }))))), /*#__PURE__*/React.createElement(Form.Item, {\n    label: \"Due Date\",\n    name: \"dueDate\",\n    className: \"blockform-col col-3\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 173,\n      columnNumber: 4\n    }\n  }, /*#__PURE__*/React.createElement(DatePicker, {\n    placeholder: \"Due date unset\",\n    className: \"board-card-modal date-picker w-100\",\n    format: DATE_FORMAT_DD_MM_YYYY,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 174,\n      columnNumber: 5\n    }\n  })), /*#__PURE__*/React.createElement(Form.Item, {\n    label: \"Labels\",\n    name: \"labels\",\n    className: \"blockform-col col-3\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 176,\n      columnNumber: 4\n    }\n  }, /*#__PURE__*/React.createElement(Select, {\n    filterOption: false,\n    tagRender: labelTagRender,\n    mode: \"tags\",\n    removeIcon: null,\n    placeholder: \"None\",\n    className: \"board-card-modal select\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 177,\n      columnNumber: 5\n    }\n  }, labels.map(elm => /*#__PURE__*/React.createElement(Option, {\n    key: elm.label,\n    value: elm.label,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 187,\n      columnNumber: 8\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"d-flex align-items-center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 188,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Badge, {\n    color: getLabelsColor(elm.label),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 189,\n      columnNumber: 10\n    }\n  }), /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 190,\n      columnNumber: 10\n    }\n  }, elm.label)))))), /*#__PURE__*/React.createElement(Divider, {\n    className: \"mt-0\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 197,\n      columnNumber: 4\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"d-flex\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 198,\n      columnNumber: 4\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"mr-3 font-size-md\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 199,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(FileTextOutlined, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 200,\n      columnNumber: 6\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"w-100\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 202,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"h4\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 203,\n      columnNumber: 6\n    }\n  }, \"Description\"), /*#__PURE__*/React.createElement(Form.Item, {\n    name: \"description\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 204,\n      columnNumber: 6\n    }\n  }, /*#__PURE__*/React.createElement(Input.TextArea, {\n    className: \"board-card-modal text-area\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 205,\n      columnNumber: 7\n    }\n  })))), (attachmentsList === null || attachmentsList === void 0 ? void 0 : attachmentsList.length) > 0 ? /*#__PURE__*/React.createElement(\"div\", {\n    className: \"d-flex\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 211,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"mr-3 font-size-md\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 212,\n      columnNumber: 6\n    }\n  }, /*#__PURE__*/React.createElement(PaperClipOutlined, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 213,\n      columnNumber: 7\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"w-100\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 215,\n      columnNumber: 6\n    }\n  }, /*#__PURE__*/React.createElement(\"h4\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 216,\n      columnNumber: 7\n    }\n  }, \"Attachments\"), /*#__PURE__*/React.createElement(Row, {\n    gutter: 16,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 217,\n      columnNumber: 7\n    }\n  }, attachmentsList === null || attachmentsList === void 0 ? void 0 : attachmentsList.map(elm => /*#__PURE__*/React.createElement(Col, {\n    sm: 24,\n    md: 8,\n    key: elm.id,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 220,\n      columnNumber: 10\n    }\n  }, /*#__PURE__*/React.createElement(Card, {\n    bodyStyle: {\n      padding: 0\n    },\n    cover: /*#__PURE__*/React.createElement(\"div\", {\n      className: \"p-2\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 224,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"img\", {\n      className: \"img-fluid\",\n      alt: \"example\",\n      src: elm.src,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 225,\n        columnNumber: 14\n      }\n    })),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 221,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"px-2 pb-2 d-flex align-items-center justify-content-between\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 229,\n      columnNumber: 12\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 230,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"h5\", {\n    className: \"mb-0\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 231,\n      columnNumber: 14\n    }\n  }, elm.name), /*#__PURE__*/React.createElement(\"span\", {\n    className: \"text-muted font-size-sm\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 232,\n      columnNumber: 14\n    }\n  }, elm.size)), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"d-flex\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 234,\n      columnNumber: 13\n    }\n  }, cover === elm.src ? /*#__PURE__*/React.createElement(\"div\", {\n    className: \"mr-2 text-warning font-size-md\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 236,\n      columnNumber: 35\n    }\n  }, /*#__PURE__*/React.createElement(StarFilled, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 236,\n      columnNumber: 83\n    }\n  })) : null, /*#__PURE__*/React.createElement(Dropdown, {\n    placement: \"bottomRight\",\n    overlay: /*#__PURE__*/React.createElement(Menu, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 241,\n        columnNumber: 16\n      }\n    }, /*#__PURE__*/React.createElement(Menu.Item, {\n      key: \"0\",\n      onClick: () => onCoverChange(elm.id),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 242,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"span\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 243,\n        columnNumber: 18\n      }\n    }, /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(StarOutlined, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 245,\n        columnNumber: 20\n      }\n    }), /*#__PURE__*/React.createElement(\"span\", {\n      className: \"ml-2\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 246,\n        columnNumber: 20\n      }\n    }, \"Set Cover\")))), /*#__PURE__*/React.createElement(Menu.Item, {\n      key: \"1\",\n      onClick: () => removeCover(),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 250,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"span\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 251,\n        columnNumber: 18\n      }\n    }, /*#__PURE__*/React.createElement(DeleteOutlined, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 252,\n        columnNumber: 19\n      }\n    }), /*#__PURE__*/React.createElement(\"span\", {\n      className: \"ml-2\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 253,\n        columnNumber: 19\n      }\n    }, \"Remove\")))),\n    trigger: ['click'],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 238,\n      columnNumber: 14\n    }\n  }, /*#__PURE__*/React.createElement(\"a\", {\n    className: \"font-size-md text-gray\",\n    href: \"/#\",\n    onClick: e => e.preventDefault(),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 259,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(EllipsisOutlined, {\n    style: {\n      transform: 'rotate(90deg)'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 260,\n      columnNumber: 16\n    }\n  }))))))))))) : null, (cardData === null || cardData === void 0 ? void 0 : cardData.comments.length) > 0 ? /*#__PURE__*/React.createElement(\"div\", {\n    className: \"d-flex\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 277,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"mr-3 font-size-md\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 278,\n      columnNumber: 6\n    }\n  }, /*#__PURE__*/React.createElement(CommentOutlined, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 279,\n      columnNumber: 7\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"w-100\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 281,\n      columnNumber: 6\n    }\n  }, /*#__PURE__*/React.createElement(\"h4\", {\n    className: \"mb-3\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 282,\n      columnNumber: 7\n    }\n  }, \"Comments (\", commentsList.length, \")\"), commentsList.map(elm => /*#__PURE__*/React.createElement(\"div\", {\n    className: \"mb-3 d-flex\",\n    key: elm.id,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 285,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"mt-2\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 286,\n      columnNumber: 10\n    }\n  }, /*#__PURE__*/React.createElement(Avatar, {\n    src: elm.src,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 287,\n      columnNumber: 11\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"ml-2 bg-gray-lightest p-3 rounded w-100\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 289,\n      columnNumber: 10\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"d-flex align-items-center mb-2\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 290,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"h4\", {\n    className: \"mb-0\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 291,\n      columnNumber: 12\n    }\n  }, elm.name), /*#__PURE__*/React.createElement(\"span\", {\n    className: \"mx-1\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 292,\n      columnNumber: 12\n    }\n  }, \" | \"), /*#__PURE__*/React.createElement(\"span\", {\n    className: \"font-size-sm text-dark\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 293,\n      columnNumber: 12\n    }\n  }, moment(elm.date).format('DD MMMM YYYY'))), /*#__PURE__*/React.createElement(\"p\", {\n    className: \"mb-0\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 295,\n      columnNumber: 11\n    }\n  }, elm.message)))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"mb-3 d-flex\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 300,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Avatar, {\n    src: \"/img/avatars/thumb-1.jpg\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 301,\n      columnNumber: 8\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"ml-2 bg-gray-lightest p-3 rounded w-100\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 302,\n      columnNumber: 8\n    }\n  }, /*#__PURE__*/React.createElement(Input, {\n    ref: commentInput,\n    placeholder: \"Write comment\",\n    suffix: /*#__PURE__*/React.createElement(\"div\", {\n      onClick: () => submitComment(),\n      className: \"cursor-pointer font-weight-semibold text-primary\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 307,\n        columnNumber: 11\n      }\n    }, \"Send\"),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 303,\n      columnNumber: 9\n    }\n  }))))) : null, /*#__PURE__*/React.createElement(Form.Item, {\n    className: \"text-right mb-0\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 321,\n      columnNumber: 4\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    type: \"primary\",\n    htmlType: \"submit\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 322,\n      columnNumber: 5\n    }\n  }, \"Change\")));\n};\n\nconst AddBoardForm = ({\n  onSubmit\n}) => {\n  return /*#__PURE__*/React.createElement(Form, {\n    layout: \"inline\",\n    name: \"add-board-ref\",\n    onFinish: onSubmit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 330,\n      columnNumber: 3\n    }\n  }, /*#__PURE__*/React.createElement(Form.Item, {\n    name: \"boardTitle\",\n    label: \"Board Title\",\n    rules: [() => ({\n      validator(rule, value) {\n        if (scrumboardData[value]) {\n          return Promise.reject('Board already exist!');\n        }\n\n        return Promise.resolve();\n      }\n\n    })],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 331,\n      columnNumber: 4\n    }\n  }, /*#__PURE__*/React.createElement(Input, {\n    autoComplete: \"off\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 344,\n      columnNumber: 5\n    }\n  })), /*#__PURE__*/React.createElement(Form.Item, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 346,\n      columnNumber: 4\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    type: \"primary\",\n    htmlType: \"submit\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 347,\n      columnNumber: 5\n    }\n  }, \"Add\")));\n};\n\nconst ModalForm = ({\n  visible,\n  modalMode,\n  cardData,\n  listId,\n  onClose,\n  onModalSubmit\n}) => {\n  const showClosable = modalMode === modalModeTypes(1) ? false : true;\n  const modalWidth = modalMode === modalModeTypes(1) ? 800 : 425;\n\n  const submit = (values, mode) => {\n    onModalSubmit(values, mode);\n    onClose();\n  };\n\n  return /*#__PURE__*/React.createElement(Modal, {\n    title: getModalTitle(modalMode),\n    visible: visible,\n    closable: showClosable,\n    footer: null,\n    width: modalWidth,\n    style: modalMode === modalModeTypes(1) ? {\n      top: 20\n    } : null,\n    destroyOnClose: true,\n    onCancel: () => onClose(),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 364,\n      columnNumber: 3\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    style: modalMode === modalModeTypes(1) ? {\n      maxHeight: '85vh',\n      overflowY: 'auto',\n      overflowX: 'hidden'\n    } : null,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 374,\n      columnNumber: 4\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: modalMode === modalModeTypes(1) ? 'mr-2 ml-2' : null,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 375,\n      columnNumber: 5\n    }\n  }, (() => {\n    switch (modalMode) {\n      case modalModeTypes(0):\n        return /*#__PURE__*/React.createElement(AddCardForm, {\n          onSubmit: values => submit(values, modalModeTypes(0)),\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 380,\n            columnNumber: 17\n          }\n        });\n\n      case modalModeTypes(1):\n        return /*#__PURE__*/React.createElement(UpdateCardForm, {\n          cardData: cardData,\n          listId: listId,\n          onSubmit: values => submit(values, modalModeTypes(1)),\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 383,\n            columnNumber: 11\n          }\n        });\n\n      case modalModeTypes(2):\n        return /*#__PURE__*/React.createElement(AddBoardForm, {\n          onSubmit: values => submit(values, modalModeTypes(2)),\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 390,\n            columnNumber: 17\n          }\n        });\n\n      default:\n        return null;\n    }\n  })())));\n};\n\nexport default ModalForm;","map":{"version":3,"sources":["/Users/dhruvaagrawal/Desktop/Work/Projects/Webdev.nosync/Twitter/app/src/views/app-views/journeys/journey-ivr/taskTracker/ModalForm.js"],"names":["React","useState","useEffect","useContext","useRef","Modal","Form","Input","Button","Select","DatePicker","Tag","Badge","Divider","Card","Row","Col","Menu","Dropdown","Avatar","FileTextOutlined","PaperClipOutlined","EllipsisOutlined","StarOutlined","DeleteOutlined","StarFilled","CommentOutlined","modalModeTypes","AssigneeAvatar","getLabelsColor","getCover","createCommentObject","DATE_FORMAT_DD_MM_YYYY","scrumboardData","memberIds","labels","moment","ScrumboardContext","Option","memberTagRender","props","value","labelTagRender","getModalTitle","type","AddCardForm","onSubmit","UpdateCardForm","cardData","listId","context","attachmentsList","setAttachmentsList","attachments","commentsList","setCommentsList","comments","cover","setCover","commentInput","initialValues","name","members","dueDate","description","onCoverChange","id","updatedCover","updateAttachment","submitUpdate","values","updatedValue","data","columns","updatadedCards","map","elm","updateColumns","updateOrdered","Object","keys","removeCover","submitComment","message","current","state","currentListId","newComment","updatedComment","label","length","padding","src","size","e","preventDefault","transform","date","format","AddBoardForm","validator","rule","Promise","reject","resolve","ModalForm","visible","modalMode","onClose","onModalSubmit","showClosable","modalWidth","submit","mode","top","maxHeight","overflowY","overflowX"],"mappings":"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","sourcesContent":["import React, { useState, useEffect, useContext, useRef } from 'react'\nimport { \n\tModal, \n\tForm, \n\tInput, \n\tButton, \n\tSelect, \n\tDatePicker, \n\tTag, \n\tBadge, \n\tDivider, \n\tCard, \n\tRow, \n\tCol, \n\tMenu, \n\tDropdown,\n\tAvatar \n} from 'antd';\nimport { \n\tFileTextOutlined, \n\tPaperClipOutlined, \n\tEllipsisOutlined, \n\tStarOutlined, \n\tDeleteOutlined, \n\tStarFilled, \n\tCommentOutlined \n} from '@ant-design/icons';\nimport { modalModeTypes, AssigneeAvatar, getLabelsColor, getCover, createCommentObject } from './utils';\nimport { DATE_FORMAT_DD_MM_YYYY } from 'constants/DateConstant';\nimport { scrumboardData, memberIds, labels } from './ScrumboardData';\nimport moment from 'moment';\nimport { ScrumboardContext } from './ScrumboardContext'\n\nconst { Option } = Select;\n\nconst memberTagRender = (props) => <AssigneeAvatar id={props.value} size={25} />\n\nfunction labelTagRender(props) {\n  const { value } = props;\n  return (\n\t\t<Tag className=\"my-1\">\n\t\t\t<div className=\"d-flex align-items-center\">\n\t\t\t\t<Badge color={getLabelsColor(value)} />\n\t\t\t\t<span>{value}</span>\n\t\t\t</div>\n\t\t</Tag>\n  );\n}\n\nconst getModalTitle = type => {\n\tswitch (type) {\n\t\tcase modalModeTypes(0):\n\t\t\treturn 'New card';\n\t\tcase modalModeTypes(2):\n\t\t\treturn 'New board';\n\t\tdefault:\n\t\t\treturn;\n\t}\n} \n\nconst AddCardForm = ({onSubmit}) => {\n\treturn (\n\t\t<Form layout=\"inline\" name=\"add-card-ref\" onFinish={onSubmit}>\n\t\t\t<Form.Item name=\"cardTitle\" label=\"Card Title\">\n\t\t\t\t<Input autoComplete=\"off\" />\n\t\t\t</Form.Item>\n\t\t\t<Form.Item>\n\t\t\t\t<Button type=\"primary\" htmlType=\"submit\">Add</Button>\n\t\t\t</Form.Item>\n\t\t</Form>\n\t)\n}\n\nconst UpdateCardForm = ({onSubmit, cardData, listId}) => {\n\tconst context\t= useContext(ScrumboardContext)\n\n\tconst [attachmentsList, setAttachmentsList] = useState(cardData.attachments)\n\tconst [commentsList, setCommentsList] = useState(cardData.comments)\n\tconst [cover, setCover] = useState(cardData.cover)\n\n\tconst commentInput = useRef();\n\n\tuseEffect(() => {\n\t\tsetAttachmentsList(cardData.attachments);\n\t\tsetCommentsList(cardData.comments);\n\t\tsetCover(cardData.cover)\n\t}, [cardData.attachments, cardData.comments, cardData.cover]);\n\n\tconst initialValues = {\n\t\tname: cardData?.name,\n\t\tmembers: cardData?.members,\n\t\tdueDate: cardData?.dueDate ? moment(cardData.dueDate) : '',\n\t\tlabels: cardData?.labels,\n\t\tdescription: cardData?.description,\n\t}\n\n\tconst onCoverChange = id => {\n\t\tconst updatedCover = getCover(id, attachmentsList)\n\t\tupdateAttachment(updatedCover)\n\t}\n\n\tconst submitUpdate = values => {\n\t\tlet updatedValue = values\n\t\tupdatedValue.attachments = attachmentsList\n\t\tupdatedValue.comments = commentsList\n\t\tupdatedValue.cover = cover\n\t\tupdatedValue.id = cardData.id\n\t\tonSubmit(updatedValue)\n\t}\n\n\tconst updateAttachment = (updatedCover) => {\n\t\tconst data = context.columns\n    const updatadedCards = data[listId].map(elm => {\n      if(elm.id === cardData.id) {\n        elm.attachments = attachmentsList;\n        elm.cover = updatedCover\n      }\n      return elm\n    })\n\t\tdata[listId] = updatadedCards\n\t\tcontext.updateColumns(data)\n\t\tcontext.updateOrdered(Object.keys(data))\n\t}\n\n\tconst removeCover = () => {\n\t\tupdateAttachment('')\n\t}\n\n\tconst\tsubmitComment = () => {\n\t\tconst message = commentInput.current.state.value\n\t\tconst { currentListId, columns, updateColumns, updateOrdered } = context\n    const data = columns;\n    let newComment = createCommentObject()\n    newComment.message = message;\n    const updatedComment = data[currentListId].map(elm => {\n      if(elm.id === cardData.id) {\n        elm.comments = [...elm.comments, ...[newComment]];\n      }\n      return elm\n\t\t})\n\t\tcommentInput.current.state.value = ''\n\t\tdata[currentListId] = updatedComment\n\t\tupdateColumns(data)\n\t\tupdateOrdered(Object.keys(data))\n\t}\n\n\treturn (\n\t\t<Form name=\"edit-card-ref\" layout=\"vertical\" onFinish={submitUpdate} initialValues={initialValues}>\n\t\t\t<Form.Item name=\"name\" className=\"mb-0\">\n\t\t\t\t<Input className=\"board-card-modal input\"/>\n\t\t\t</Form.Item>\n\t\t\t<Form.Item className=\"mb-3\">\n\t\t\t\t<p>Board: <span className=\"font-weight-semibold\">{listId}</span></p>\n\t\t\t</Form.Item>\n\t\t\t<Form.Item label=\"Assigned to\" name=\"members\" className=\"blockform-col col-3\">\n\t\t\t\t<Select \n\t\t\t\t\tfilterOption={false} \n\t\t\t\t\ttagRender={memberTagRender} \n\t\t\t\t\tmode=\"tags\" \n\t\t\t\t\tremoveIcon={null}\n\t\t\t\t\tplaceholder=\"None\"\n\t\t\t\t\tclassName=\"board-card-modal select\"\n\t\t\t\t>\n\t\t\t\t\t{\n\t\t\t\t\t\tmemberIds.map(elm => (\n\t\t\t\t\t\t\t<Option key={elm} value={elm}>\n\t\t\t\t\t\t\t\t<AssigneeAvatar id={elm} name/>\n\t\t\t\t\t\t\t</Option>\n\t\t\t\t\t\t))\n\t\t\t\t\t}\n\t\t\t\t</Select>\n\t\t\t</Form.Item>\n\t\t\t<Form.Item label=\"Due Date\" name=\"dueDate\" className=\"blockform-col col-3\">\n\t\t\t\t<DatePicker placeholder=\"Due date unset\" className=\"board-card-modal date-picker w-100\" format={DATE_FORMAT_DD_MM_YYYY} />\n\t\t\t</Form.Item>\n\t\t\t<Form.Item label=\"Labels\" name=\"labels\" className=\"blockform-col col-3\">\n\t\t\t\t<Select \n\t\t\t\t\tfilterOption={false} \n\t\t\t\t\ttagRender={labelTagRender} \n\t\t\t\t\tmode=\"tags\" \n\t\t\t\t\tremoveIcon={null}\n\t\t\t\t\tplaceholder=\"None\"\n\t\t\t\t\tclassName=\"board-card-modal select\"\n\t\t\t\t>\n\t\t\t\t\t{\n\t\t\t\t\t\tlabels.map(elm => (\n\t\t\t\t\t\t\t<Option key={elm.label} value={elm.label}>\n\t\t\t\t\t\t\t\t<div className=\"d-flex align-items-center\">\n\t\t\t\t\t\t\t\t\t<Badge color={getLabelsColor(elm.label)} />\n\t\t\t\t\t\t\t\t\t<span>{elm.label}</span>\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t</Option>\n\t\t\t\t\t\t))\n\t\t\t\t\t}\n\t\t\t\t</Select>\n\t\t\t</Form.Item>\n\t\t\t<Divider className=\"mt-0\"/>\n\t\t\t<div className=\"d-flex\">\n\t\t\t\t<div className=\"mr-3 font-size-md\">\n\t\t\t\t\t<FileTextOutlined />\t\n\t\t\t\t</div>\n\t\t\t\t<div className=\"w-100\">\n\t\t\t\t\t<h4>Description</h4>\n\t\t\t\t\t<Form.Item name=\"description\">\n\t\t\t\t\t\t<Input.TextArea className=\"board-card-modal text-area\"/>\n\t\t\t\t\t</Form.Item>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t\t{\n\t\t\t\tattachmentsList?.length > 0? \n\t\t\t\t<div className=\"d-flex\">\n\t\t\t\t\t<div className=\"mr-3 font-size-md\">\n\t\t\t\t\t\t<PaperClipOutlined />\n\t\t\t\t\t</div>\n\t\t\t\t\t<div className=\"w-100\">\n\t\t\t\t\t\t<h4>Attachments</h4>\n\t\t\t\t\t\t<Row gutter={16}>\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tattachmentsList?.map(elm => (\n\t\t\t\t\t\t\t\t\t<Col sm={24} md={8} key={elm.id}>\n\t\t\t\t\t\t\t\t\t\t<Card\n\t\t\t\t\t\t\t\t\t\t\tbodyStyle={{padding: 0}}\n\t\t\t\t\t\t\t\t\t\t\tcover={\n\t\t\t\t\t\t\t\t\t\t\t\t<div className=\"p-2\">\n\t\t\t\t\t\t\t\t\t\t\t\t\t<img className=\"img-fluid\" alt=\"example\" src={elm.src} />\n\t\t\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t\t\t<div className=\"px-2 pb-2 d-flex align-items-center justify-content-between\">\n\t\t\t\t\t\t\t\t\t\t\t\t<div>\n\t\t\t\t\t\t\t\t\t\t\t\t\t<h5 className=\"mb-0\">{elm.name}</h5>\n\t\t\t\t\t\t\t\t\t\t\t\t\t<span className=\"text-muted font-size-sm\">{elm.size}</span>\n\t\t\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t\t\t\t<div className=\"d-flex\">\n\t\t\t\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tcover === elm.src ? <div className=\"mr-2 text-warning font-size-md\"><StarFilled /></div> : null\n\t\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t\t\t<Dropdown \n\t\t\t\t\t\t\t\t\t\t\t\t\t\tplacement=\"bottomRight\"\n\t\t\t\t\t\t\t\t\t\t\t\t\t\toverlay={\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<Menu>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<Menu.Item key=\"0\" onClick={() => onCoverChange(elm.id)}>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<span>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<StarOutlined />\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<span className=\"ml-2\">Set Cover</span>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</span>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</Menu.Item>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<Menu.Item key=\"1\" onClick={() => removeCover()}>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<span>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<DeleteOutlined />\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<span className=\"ml-2\">Remove</span>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</span>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</Menu.Item>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</Menu>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t} \n\t\t\t\t\t\t\t\t\t\t\t\t\t\ttrigger={['click']}>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<a className=\"font-size-md text-gray\" href=\"/#\" onClick={e => e.preventDefault()}>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<EllipsisOutlined style={{transform: 'rotate(90deg)'}}/>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t</a>\n\t\t\t\t\t\t\t\t\t\t\t\t\t</Dropdown>\n\t\t\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t\t</Card>\n\t\t\t\t\t\t\t\t\t</Col>\n\t\t\t\t\t\t\t\t))\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t</Row>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t\t:\n\t\t\t\tnull\n\t\t\t}\n\t\t\t{\n\t\t\t\tcardData?.comments.length > 0? \n\t\t\t\t<div className=\"d-flex\">\n\t\t\t\t\t<div className=\"mr-3 font-size-md\">\n\t\t\t\t\t\t<CommentOutlined />\n\t\t\t\t\t</div>\n\t\t\t\t\t<div className=\"w-100\">\n\t\t\t\t\t\t<h4 className=\"mb-3\">Comments ({commentsList.length})</h4>\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tcommentsList.map(elm => \n\t\t\t\t\t\t\t\t<div className=\"mb-3 d-flex\" key={elm.id}>\n\t\t\t\t\t\t\t\t\t<div className=\"mt-2\">\n\t\t\t\t\t\t\t\t\t\t<Avatar src={elm.src}/>\n\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t<div className=\"ml-2 bg-gray-lightest p-3 rounded w-100\">\n\t\t\t\t\t\t\t\t\t\t<div className=\"d-flex align-items-center mb-2\">\n\t\t\t\t\t\t\t\t\t\t\t<h4 className=\"mb-0\">{elm.name}</h4>\n\t\t\t\t\t\t\t\t\t\t\t<span className=\"mx-1\"> | </span>\n\t\t\t\t\t\t\t\t\t\t\t<span className=\"font-size-sm text-dark\">{moment(elm.date).format('DD MMMM YYYY')}</span>\n\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t\t<p className=\"mb-0\">{elm.message}</p>\n\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t)\n\t\t\t\t\t\t}\n\t\t\t\t\t\t<div className=\"mb-3 d-flex\">\n\t\t\t\t\t\t\t<Avatar src=\"/img/avatars/thumb-1.jpg\"/>\n\t\t\t\t\t\t\t<div className=\"ml-2 bg-gray-lightest p-3 rounded w-100\">\n\t\t\t\t\t\t\t\t<Input\n\t\t\t\t\t\t\t\t\tref={commentInput}\n\t\t\t\t\t\t\t\t\tplaceholder=\"Write comment\"\n\t\t\t\t\t\t\t\t\tsuffix={\n\t\t\t\t\t\t\t\t\t\t<div \n\t\t\t\t\t\t\t\t\t\t\tonClick={() => submitComment()} \n\t\t\t\t\t\t\t\t\t\t\tclassName=\"cursor-pointer font-weight-semibold text-primary\">\n\t\t\t\t\t\t\t\t\t\t\tSend\n\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t\t:\n\t\t\t\tnull \n\t\t\t}\n\t\t\t<Form.Item className=\"text-right mb-0\">\n\t\t\t\t<Button type=\"primary\" htmlType=\"submit\">Change</Button>\n\t\t\t</Form.Item>\n\t\t</Form>\n\t)\t\n}\n\nconst AddBoardForm = ({onSubmit}) => {\n\treturn(\n\t\t<Form layout=\"inline\" name=\"add-board-ref\" onFinish={onSubmit}>\n\t\t\t<Form.Item \n\t\t\t\tname=\"boardTitle\" \n\t\t\t\tlabel=\"Board Title\"\n\t\t\t\trules={[() => ({\n\t\t\t\t\t\tvalidator(rule, value) {\n\t\t\t\t\t\t\tif(scrumboardData[value]) {\n\t\t\t\t\t\t\t\treturn Promise.reject('Board already exist!');\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\treturn Promise.resolve();\n\t\t\t\t\t\t},\n\t\t\t\t\t}),\n\t\t\t\t]}\n\t\t\t>\n\t\t\t\t<Input autoComplete=\"off\" />\n\t\t\t</Form.Item>\n\t\t\t<Form.Item>\n\t\t\t\t<Button type=\"primary\" htmlType=\"submit\">Add</Button>\n\t\t\t</Form.Item>\n\t\t</Form>\n\t)\n}\n\nconst ModalForm = ({ visible, modalMode, cardData, listId, onClose, onModalSubmit }) => {\n\n\tconst showClosable = modalMode === modalModeTypes(1) ? false : true\n\tconst modalWidth = modalMode === modalModeTypes(1) ? 800 : 425;\n\n\tconst submit = (values, mode) => {\n\t\tonModalSubmit(values, mode)\n\t\tonClose()\n\t};\n\n\treturn (\n\t\t<Modal\n\t\t\ttitle={getModalTitle(modalMode)}\n\t\t\tvisible={visible}\n\t\t\tclosable={showClosable}\n\t\t\tfooter={null}\n\t\t\twidth={modalWidth}\n\t\t\tstyle={modalMode === modalModeTypes(1)? {top: 20} : null}\n\t\t\tdestroyOnClose\n\t\t\tonCancel={() => onClose()}\n\t\t>\n\t\t\t<div style={modalMode === modalModeTypes(1)? {maxHeight: '85vh', overflowY: 'auto', overflowX: 'hidden'} : null}>\n\t\t\t\t<div className={modalMode === modalModeTypes(1)? 'mr-2 ml-2' : null}>\n\t\t\t\t\t{ \n\t\t\t\t\t\t(() => {\n\t\t\t\t\t\t\tswitch(modalMode) {\n\t\t\t\t\t\t\t\tcase modalModeTypes(0):\n\t\t\t\t\t\t\t\t\treturn <AddCardForm onSubmit={values => submit(values, modalModeTypes(0))}/>;\n\t\t\t\t\t\t\t\tcase modalModeTypes(1):\n\t\t\t\t\t\t\t\t\treturn (\n\t\t\t\t\t\t\t\t\t\t<UpdateCardForm \n\t\t\t\t\t\t\t\t\t\t\tcardData={cardData} \n\t\t\t\t\t\t\t\t\t\t\tlistId={listId} \n\t\t\t\t\t\t\t\t\t\t\tonSubmit={values => submit(values, modalModeTypes(1))}\n\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t\tcase modalModeTypes(2):\n\t\t\t\t\t\t\t\t\treturn <AddBoardForm onSubmit={values => submit(values, modalModeTypes(2))}/>;\n\t\t\t\t\t\t\t\tdefault:\n\t\t\t\t\t\t\t\t\treturn null;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t})()\n\t\t\t\t\t}\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t</Modal>\n\t)\n}\n\nexport default ModalForm"]},"metadata":{},"sourceType":"module"}