{"ast":null,"code":"var _jsxFileName = \"/Users/dhruvaagrawal/Desktop/Work/Spocto/CMS/app/src/views/app-views/journeys/journey-ivr/agentInfo/index.js\";\nimport React, { useContext, useState, useEffect, useRef } from 'react';\nimport { Card, Table, Tag, Tooltip, message, Typography, Button, Input, Form } from 'antd';\nimport { EyeOutlined, DeleteOutlined } from '@ant-design/icons';\nimport moment from 'moment';\nimport AvatarStatus from 'components/shared-components/AvatarStatus'; // import agentData from \"assets/data/agent-list.data.json\";\n\nconst {\n  Title\n} = Typography;\nconst EditableContext = React.createContext();\n\nconst EditableRow = ({\n  index,\n  ...props\n}) => {\n  const [form] = Form.useForm();\n  return /*#__PURE__*/React.createElement(Form, {\n    form: form,\n    component: false,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 3\n    }\n  }, /*#__PURE__*/React.createElement(EditableContext.Provider, {\n    value: form,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 4\n    }\n  }, /*#__PURE__*/React.createElement(\"tr\", Object.assign({}, props, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 5\n    }\n  }))));\n};\n\nconst EditableCell = ({\n  title,\n  editable,\n  children,\n  dataIndex,\n  record,\n  handleSave,\n  ...restProps\n}) => {\n  const [editing, setEditing] = useState(false);\n  const [agentData, setAgentData] = useState(false);\n  const inputRef = useRef();\n  const form = useContext(EditableContext);\n\n  function loadServerRows() {\n    return new Promise((resolve, reject) => {\n      fetch('http://dev2.spoctocular.com/test_api/public/api/agentdetails').then(response => response.json()).then(res => res.agentdetails).then(data => {\n        resolve({\n          rows: data.map(row => ({\n            key: row.id,\n            ...row\n          }))\n        });\n      }).catch(error => reject(error));\n    });\n  }\n\n  useEffect(() => {\n    if (editing) {\n      inputRef.current.focus();\n    }\n\n    const {\n      rows\n    } = async () => await loadServerRows();\n\n    setAgentData(rows);\n  }, [editing]);\n\n  const toggleEdit = () => {\n    setEditing(!editing);\n    form.setFieldsValue({\n      [dataIndex]: record[dataIndex]\n    });\n  };\n\n  const save = async e => {\n    try {\n      const values = await form.validateFields();\n      toggleEdit();\n      handleSave({ ...record,\n        ...values\n      });\n    } catch (errInfo) {\n      console.log('Save failed:', errInfo);\n    }\n  };\n\n  let childNode = children;\n\n  if (editable) {\n    childNode = editing ? /*#__PURE__*/React.createElement(Form.Item, {\n      style: {\n        margin: 0\n      },\n      name: dataIndex,\n      rules: [{\n        required: true,\n        message: `${title} is required.`\n      }],\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 3\n      }\n    }, /*#__PURE__*/React.createElement(Input, {\n      ref: inputRef,\n      onPressEnter: save,\n      onBlur: save,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 4\n      }\n    })) : /*#__PURE__*/React.createElement(\"div\", {\n      className: \"editable-cell-value-wrap\",\n      style: {\n        paddingRight: 24\n      },\n      onClick: toggleEdit,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 3\n      }\n    }, children);\n  }\n\n  return /*#__PURE__*/React.createElement(\"td\", Object.assign({}, restProps, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 11\n    }\n  }), childNode);\n};\n\nclass EditableTable extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.columns = [{\n      title: 'User',\n      dataIndex: 'name',\n      render: (_, record) => /*#__PURE__*/React.createElement(\"div\", {\n        className: \"d-flex\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 100,\n          columnNumber: 5\n        }\n      }, /*#__PURE__*/React.createElement(AvatarStatus, {\n        src: record.img,\n        name: record.name,\n        subTitle: record.id + \"@spocto.com\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 101,\n          columnNumber: 6\n        }\n      })),\n      sorter: {\n        compare: (a, b) => {\n          a = a.name.toLowerCase();\n          b = b.name.toLowerCase();\n          return a > b ? -1 : b > a ? 1 : 0;\n        }\n      },\n      editable: true\n    }, {\n      title: 'Role',\n      dataIndex: 'personalInfo',\n      render: role => /*#__PURE__*/React.createElement(Tag, {\n        className: \"text-capitalize\",\n        color: role.title === 'Admin' ? 'red' : role.title === 'Agent Manager' ? 'blue' : 'cyan',\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 117,\n          columnNumber: 5\n        }\n      }, role.title),\n      sorter: {\n        compare: (a, b) => a.personalInfo.title.length - b.personalInfo.title.length\n      }\n    }, {\n      title: 'Active Chats',\n      dataIndex: 'activeChats',\n      render: num => /*#__PURE__*/React.createElement(Tag, {\n        color: 'red',\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 127,\n          columnNumber: 13\n        }\n      }, num),\n      sorter: {\n        compare: (a, b) => a.activeChats.length - b.activeChats.length\n      }\n    }];\n    this.state = {\n      dataSource: agentData,\n      count: 2,\n      userProfileVisible: false,\n      selectedUser: null\n    };\n\n    this.showUserProfile = userInfo => {\n      this.setState({\n        userProfileVisible: true,\n        selectedUser: userInfo\n      });\n    };\n\n    this.closeUserProfile = () => {\n      this.setState({\n        userProfileVisible: false,\n        selectedUser: null\n      });\n    };\n\n    this.deleteUser = key => {\n      const dataSource = [...this.state.dataSource];\n      this.setState({\n        dataSource: dataSource.filter(item => item.id !== key)\n      });\n      message.success({\n        content: `Deleted user ${key}`,\n        duration: 2\n      });\n    };\n\n    this.handleAdd = () => {\n      const {\n        count,\n        dataSource\n      } = this.state;\n      const newData = {\n        key: count,\n        name: `Edward King ${count}`,\n        role: 'Executive',\n        address: `London, Park Lane no. ${count}`\n      };\n      this.setState({\n        dataSource: [...dataSource, newData],\n        count: count + 1\n      });\n    };\n\n    this.handleSave = row => {\n      const newData = [...this.state.dataSource];\n      const index = newData.findIndex(item => row.key === item.key);\n      const item = newData[index];\n      newData.splice(index, 1, { ...item,\n        ...row\n      });\n      this.setState({\n        dataSource: newData\n      });\n    };\n  }\n\n  render() {\n    const {\n      dataSource\n    } = this.state;\n    const components = {\n      body: {\n        row: EditableRow,\n        cell: EditableCell\n      }\n    };\n    const columns = this.columns.map(col => {\n      if (!col.editable) {\n        return col;\n      }\n\n      return { ...col,\n        onCell: record => ({\n          record,\n          editable: col.editable,\n          dataIndex: col.dataIndex,\n          title: col.title,\n          handleSave: this.handleSave\n        })\n      };\n    });\n    return /*#__PURE__*/React.createElement(Card, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 216,\n        columnNumber: 4\n      }\n    }, /*#__PURE__*/React.createElement(Title, {\n      style: {\n        textAlign: 'center',\n        fontSize: '2rem',\n        marginTop: '2%'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 217,\n        columnNumber: 5\n      }\n    }, \"Agent Task Info\"), /*#__PURE__*/React.createElement(Table, {\n      components: components,\n      rowClassName: () => 'editable-row',\n      bordered: true,\n      dataSource: dataSource,\n      columns: columns,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 225,\n        columnNumber: 5\n      }\n    }));\n  }\n\n}\n\nexport default EditableTable;","map":{"version":3,"sources":["/Users/dhruvaagrawal/Desktop/Work/Spocto/CMS/app/src/views/app-views/journeys/journey-ivr/agentInfo/index.js"],"names":["React","useContext","useState","useEffect","useRef","Card","Table","Tag","Tooltip","message","Typography","Button","Input","Form","EyeOutlined","DeleteOutlined","moment","AvatarStatus","Title","EditableContext","createContext","EditableRow","index","props","form","useForm","EditableCell","title","editable","children","dataIndex","record","handleSave","restProps","editing","setEditing","agentData","setAgentData","inputRef","loadServerRows","Promise","resolve","reject","fetch","then","response","json","res","agentdetails","data","rows","map","row","key","id","catch","error","current","focus","toggleEdit","setFieldsValue","save","e","values","validateFields","errInfo","console","log","childNode","margin","required","paddingRight","EditableTable","Component","columns","render","_","img","name","sorter","compare","a","b","toLowerCase","role","personalInfo","length","num","activeChats","state","dataSource","count","userProfileVisible","selectedUser","showUserProfile","userInfo","setState","closeUserProfile","deleteUser","filter","item","success","content","duration","handleAdd","newData","address","findIndex","splice","components","body","cell","col","onCell","textAlign","fontSize","marginTop"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,UAAhB,EAA4BC,QAA5B,EAAsCC,SAAtC,EAAiDC,MAAjD,QAA+D,OAA/D;AACA,SAASC,IAAT,EAAeC,KAAf,EAAsBC,GAAtB,EAA2BC,OAA3B,EAAoCC,OAApC,EAA6CC,UAA7C,EAAyDC,MAAzD,EAAiEC,KAAjE,EAAwEC,IAAxE,QAAoF,MAApF;AACA,SAASC,WAAT,EAAsBC,cAAtB,QAA4C,mBAA5C;AACA,OAAOC,MAAP,MAAmB,QAAnB;AACA,OAAOC,YAAP,MAAyB,2CAAzB,C,CACA;;AAEA,MAAM;AAAEC,EAAAA;AAAF,IAAYR,UAAlB;AAEA,MAAMS,eAAe,GAAGnB,KAAK,CAACoB,aAAN,EAAxB;;AAEA,MAAMC,WAAW,GAAG,CAAC;AAAEC,EAAAA,KAAF;AAAS,KAAGC;AAAZ,CAAD,KAAyB;AAC1C,QAAM,CAACC,IAAD,IAASX,IAAI,CAACY,OAAL,EAAf;AACA,sBACD,oBAAC,IAAD;AAAM,IAAA,IAAI,EAAED,IAAZ;AAAkB,IAAA,SAAS,EAAE,KAA7B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACC,oBAAC,eAAD,CAAiB,QAAjB;AAA0B,IAAA,KAAK,EAAEA,IAAjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACC,4CAAQD,KAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KADD,CADD,CADC;AAOF,CATD;;AAWA,MAAMG,YAAY,GAAG,CAAC;AAAEC,EAAAA,KAAF;AAASC,EAAAA,QAAT;AAAmBC,EAAAA,QAAnB;AAA6BC,EAAAA,SAA7B;AAAwCC,EAAAA,MAAxC;AAAgDC,EAAAA,UAAhD;AAA4D,KAAGC;AAA/D,CAAD,KAAgF;AAEpG,QAAM,CAACC,OAAD,EAAUC,UAAV,IAAwBjC,QAAQ,CAAC,KAAD,CAAtC;AACA,QAAM,CAACkC,SAAD,EAAYC,YAAZ,IAA4BnC,QAAQ,CAAC,KAAD,CAA1C;AACA,QAAMoC,QAAQ,GAAGlC,MAAM,EAAvB;AACA,QAAMoB,IAAI,GAAGvB,UAAU,CAACkB,eAAD,CAAvB;;AAEA,WAASoB,cAAT,GAA0B;AACnB,WAAO,IAAIC,OAAJ,CAAY,CAACC,OAAD,EAAUC,MAAV,KAAqB;AACpCC,MAAAA,KAAK,CAAC,8DAAD,CAAL,CACCC,IADD,CACOC,QAAQ,IAAIA,QAAQ,CAACC,IAAT,EADnB,EAECF,IAFD,CAEOG,GAAG,IAAIA,GAAG,CAACC,YAFlB,EAGCJ,IAHD,CAGMK,IAAI,IAAI;AACVR,QAAAA,OAAO,CAAC;AACJS,UAAAA,IAAI,EAAED,IAAI,CAACE,GAAL,CAAUC,GAAD,KAAU;AAAEC,YAAAA,GAAG,EAAED,GAAG,CAACE,EAAX;AAAe,eAAGF;AAAlB,WAAV,CAAT;AADF,SAAD,CAAP;AAGH,OAPD,EAQCG,KARD,CAQQC,KAAD,IAAWd,MAAM,CAACc,KAAD,CARxB;AASH,KAVM,CAAP;AAWH;;AAEJrD,EAAAA,SAAS,CAAC,MAAM;AACf,QAAI+B,OAAJ,EAAa;AACZI,MAAAA,QAAQ,CAACmB,OAAT,CAAiBC,KAAjB;AACA;;AACD,UAAM;AAAER,MAAAA;AAAF,QAAW,YAAY,MAAMX,cAAc,EAAjD;;AACAF,IAAAA,YAAY,CAACa,IAAD,CAAZ;AACA,GANQ,EAMN,CAAChB,OAAD,CANM,CAAT;;AAQA,QAAMyB,UAAU,GAAG,MAAM;AACxBxB,IAAAA,UAAU,CAAC,CAACD,OAAF,CAAV;AACAV,IAAAA,IAAI,CAACoC,cAAL,CAAoB;AACnB,OAAC9B,SAAD,GAAaC,MAAM,CAACD,SAAD;AADA,KAApB;AAGA,GALD;;AAOA,QAAM+B,IAAI,GAAG,MAAOC,CAAP,IAAa;AACzB,QAAI;AACJ,YAAMC,MAAM,GAAG,MAAMvC,IAAI,CAACwC,cAAL,EAArB;AACAL,MAAAA,UAAU;AACV3B,MAAAA,UAAU,CAAC,EAAE,GAAGD,MAAL;AAAa,WAAGgC;AAAhB,OAAD,CAAV;AACC,KAJD,CAIE,OAAOE,OAAP,EAAgB;AACjBC,MAAAA,OAAO,CAACC,GAAR,CAAY,cAAZ,EAA4BF,OAA5B;AACA;AACD,GARD;;AAUA,MAAIG,SAAS,GAAGvC,QAAhB;;AAEA,MAAID,QAAJ,EAAc;AACbwC,IAAAA,SAAS,GAAGlC,OAAO,gBACnB,oBAAC,IAAD,CAAM,IAAN;AACC,MAAA,KAAK,EAAE;AAAEmC,QAAAA,MAAM,EAAE;AAAV,OADR;AAEC,MAAA,IAAI,EAAEvC,SAFP;AAGC,MAAA,KAAK,EAAE,CAAE;AAAEwC,QAAAA,QAAQ,EAAE,IAAZ;AAAkB7D,QAAAA,OAAO,EAAG,GAAEkB,KAAM;AAApC,OAAF,CAHR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAKC,oBAAC,KAAD;AAAO,MAAA,GAAG,EAAEW,QAAZ;AAAsB,MAAA,YAAY,EAAEuB,IAApC;AAA0C,MAAA,MAAM,EAAEA,IAAlD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MALD,CADmB,gBASnB;AACC,MAAA,SAAS,EAAC,0BADX;AAEC,MAAA,KAAK,EAAE;AAAEU,QAAAA,YAAY,EAAE;AAAhB,OAFR;AAGC,MAAA,OAAO,EAAEZ,UAHV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAKE9B,QALF,CATA;AAiBA;;AAEC,sBAAO,4CAAQI,SAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAoBmC,SAApB,CAAP;AACF,CArED;;AAuEA,MAAMI,aAAN,SAA4BxE,KAAK,CAACyE,SAAlC,CAA4C;AAAA;AAAA;AAAA,SAC3CC,OAD2C,GACjC,CACT;AACC/C,MAAAA,KAAK,EAAE,MADR;AAECG,MAAAA,SAAS,EAAE,MAFZ;AAGC6C,MAAAA,MAAM,EAAE,CAACC,CAAD,EAAI7C,MAAJ,kBACP;AAAK,QAAA,SAAS,EAAC,QAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACC,oBAAC,YAAD;AAAc,QAAA,GAAG,EAAEA,MAAM,CAAC8C,GAA1B;AAA+B,QAAA,IAAI,EAAE9C,MAAM,CAAC+C,IAA5C;AAAkD,QAAA,QAAQ,EAAE/C,MAAM,CAACuB,EAAP,GAAY,aAAxE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADD,CAJF;AAQCyB,MAAAA,MAAM,EAAE;AACPC,QAAAA,OAAO,EAAE,CAACC,CAAD,EAAIC,CAAJ,KAAU;AAClBD,UAAAA,CAAC,GAAGA,CAAC,CAACH,IAAF,CAAOK,WAAP,EAAJ;AACAD,UAAAA,CAAC,GAAGA,CAAC,CAACJ,IAAF,CAAOK,WAAP,EAAJ;AACA,iBAAOF,CAAC,GAAGC,CAAJ,GAAQ,CAAC,CAAT,GAAaA,CAAC,GAAGD,CAAJ,GAAQ,CAAR,GAAY,CAAhC;AACA;AALM,OART;AAeCrD,MAAAA,QAAQ,EAAE;AAfX,KADS,EAkBT;AACCD,MAAAA,KAAK,EAAE,MADR;AAECG,MAAAA,SAAS,EAAE,cAFZ;AAGC6C,MAAAA,MAAM,EAAES,IAAI,iBACX,oBAAC,GAAD;AAAK,QAAA,SAAS,EAAE,iBAAhB;AAAkC,QAAA,KAAK,EAAEA,IAAI,CAACzD,KAAL,KAAe,OAAf,GAAyB,KAAzB,GAAiCyD,IAAI,CAACzD,KAAL,KAAe,eAAf,GAAiC,MAAjC,GAA0C,MAApH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAA8HyD,IAAI,CAACzD,KAAnI,CAJF;AAMCoD,MAAAA,MAAM,EAAE;AACPC,QAAAA,OAAO,EAAE,CAACC,CAAD,EAAIC,CAAJ,KAAUD,CAAC,CAACI,YAAF,CAAe1D,KAAf,CAAqB2D,MAArB,GAA8BJ,CAAC,CAACG,YAAF,CAAe1D,KAAf,CAAqB2D;AAD/D;AANT,KAlBS,EA4BH;AACL3D,MAAAA,KAAK,EAAE,cADF;AAELG,MAAAA,SAAS,EAAE,aAFN;AAGL6C,MAAAA,MAAM,EAAEY,GAAG,iBACF,oBAAC,GAAD;AAAK,QAAA,KAAK,EAAE,KAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAqBA,GAArB,CAJJ;AAMIR,MAAAA,MAAM,EAAE;AAChBC,QAAAA,OAAO,EAAE,CAACC,CAAD,EAAIC,CAAJ,KAAUD,CAAC,CAACO,WAAF,CAAcF,MAAd,GAAuBJ,CAAC,CAACM,WAAF,CAAcF;AADxC;AANZ,KA5BG,CADiC;AAAA,SAyC3CG,KAzC2C,GAyCnC;AACPC,MAAAA,UAAU,EAAEtD,SADL;AAEPuD,MAAAA,KAAK,EAAE,CAFA;AAGPC,MAAAA,kBAAkB,EAAE,KAHb;AAIPC,MAAAA,YAAY,EAAE;AAJP,KAzCmC;;AAAA,SAgD3CC,eAhD2C,GAgDzBC,QAAQ,IAAI;AAC7B,WAAKC,QAAL,CAAc;AACbJ,QAAAA,kBAAkB,EAAE,IADP;AAEbC,QAAAA,YAAY,EAAEE;AAFD,OAAd;AAIA,KArD0C;;AAAA,SAuD3CE,gBAvD2C,GAuDxB,MAAM;AACxB,WAAKD,QAAL,CAAc;AACbJ,QAAAA,kBAAkB,EAAE,KADP;AAEbC,QAAAA,YAAY,EAAE;AAFD,OAAd;AAIA,KA5D0C;;AAAA,SA8D3CK,UA9D2C,GA8D9B7C,GAAG,IAAI;AACnB,YAAMqC,UAAU,GAAG,CAAC,GAAG,KAAKD,KAAL,CAAWC,UAAf,CAAnB;AACA,WAAKM,QAAL,CAAc;AACbN,QAAAA,UAAU,EAAEA,UAAU,CAACS,MAAX,CAAkBC,IAAI,IAAIA,IAAI,CAAC9C,EAAL,KAAYD,GAAtC;AADC,OAAd;AAGA5C,MAAAA,OAAO,CAAC4F,OAAR,CAAgB;AAAEC,QAAAA,OAAO,EAAG,gBAAejD,GAAI,EAA/B;AAAkCkD,QAAAA,QAAQ,EAAE;AAA5C,OAAhB;AACA,KApE0C;;AAAA,SAsE3CC,SAtE2C,GAsE/B,MAAM;AACjB,YAAM;AAAEb,QAAAA,KAAF;AAASD,QAAAA;AAAT,UAAwB,KAAKD,KAAnC;AACA,YAAMgB,OAAO,GAAG;AACfpD,QAAAA,GAAG,EAAEsC,KADU;AAEfb,QAAAA,IAAI,EAAG,eAAca,KAAM,EAFZ;AAGfP,QAAAA,IAAI,EAAE,WAHS;AAIfsB,QAAAA,OAAO,EAAG,yBAAwBf,KAAM;AAJzB,OAAhB;AAMA,WAAKK,QAAL,CAAc;AACbN,QAAAA,UAAU,EAAE,CAAC,GAAGA,UAAJ,EAAgBe,OAAhB,CADC;AAEbd,QAAAA,KAAK,EAAEA,KAAK,GAAG;AAFF,OAAd;AAIA,KAlF0C;;AAAA,SAoF3C3D,UApF2C,GAoF7BoB,GAAD,IAAS;AACrB,YAAMqD,OAAO,GAAG,CAAC,GAAG,KAAKhB,KAAL,CAAWC,UAAf,CAAhB;AACA,YAAMpE,KAAK,GAAGmF,OAAO,CAACE,SAAR,CAAmBP,IAAD,IAAUhD,GAAG,CAACC,GAAJ,KAAY+C,IAAI,CAAC/C,GAA7C,CAAd;AACA,YAAM+C,IAAI,GAAGK,OAAO,CAACnF,KAAD,CAApB;AACAmF,MAAAA,OAAO,CAACG,MAAR,CAAetF,KAAf,EAAsB,CAAtB,EAAyB,EAAE,GAAG8E,IAAL;AAAW,WAAGhD;AAAd,OAAzB;AACA,WAAK4C,QAAL,CAAc;AACbN,QAAAA,UAAU,EAAEe;AADC,OAAd;AAGA,KA5F0C;AAAA;;AA8FzC9B,EAAAA,MAAM,GAAG;AAEV,UAAM;AAAEe,MAAAA;AAAF,QAAiB,KAAKD,KAA5B;AACA,UAAMoB,UAAU,GAAG;AAClBC,MAAAA,IAAI,EAAE;AACL1D,QAAAA,GAAG,EAAE/B,WADA;AAEL0F,QAAAA,IAAI,EAAErF;AAFD;AADY,KAAnB;AAOG,UAAMgD,OAAO,GAAG,KAAKA,OAAL,CAAavB,GAAb,CAAkB6D,GAAD,IAAS;AAC5C,UAAI,CAACA,GAAG,CAACpF,QAAT,EAAmB;AAClB,eAAOoF,GAAP;AACA;;AAED,aAAO,EACN,GAAGA,GADG;AAENC,QAAAA,MAAM,EAAGlF,MAAD,KAAa;AACpBA,UAAAA,MADoB;AAEpBH,UAAAA,QAAQ,EAAEoF,GAAG,CAACpF,QAFM;AAGpBE,UAAAA,SAAS,EAAEkF,GAAG,CAAClF,SAHK;AAIpBH,UAAAA,KAAK,EAAEqF,GAAG,CAACrF,KAJS;AAKpBK,UAAAA,UAAU,EAAE,KAAKA;AALG,SAAb;AAFF,OAAP;AAUA,KAfkB,CAAhB;AAiBH,wBACC,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACC,oBAAC,KAAD;AAAO,MAAA,KAAK,EAAE;AAAEkF,QAAAA,SAAS,EAAE,QAAb;AAAuBC,QAAAA,QAAQ,EAAE,MAAjC;AAAyCC,QAAAA,SAAS,EAAE;AAApD,OAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yBADD,eASC,oBAAC,KAAD;AACC,MAAA,UAAU,EAAEP,UADb;AAEC,MAAA,YAAY,EAAE,MAAM,cAFrB;AAGC,MAAA,QAAQ,MAHT;AAIC,MAAA,UAAU,EAAEnB,UAJb;AAKC,MAAA,OAAO,EAAEhB,OALV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MATD,CADD;AAmBE;;AA5IwC;;AA+I5C,eAAeF,aAAf","sourcesContent":["import React, { useContext, useState, useEffect, useRef } from 'react';\nimport { Card, Table, Tag, Tooltip, message, Typography, Button, Input, Form } from 'antd';\nimport { EyeOutlined, DeleteOutlined } from '@ant-design/icons';\nimport moment from 'moment';\nimport AvatarStatus from 'components/shared-components/AvatarStatus';\n// import agentData from \"assets/data/agent-list.data.json\";\n\nconst { Title } = Typography\n\nconst EditableContext = React.createContext();\n\nconst EditableRow = ({ index, ...props }) => {\n  \tconst [form] = Form.useForm();\n  \treturn (\n\t\t<Form form={form} component={false}>\n\t\t\t<EditableContext.Provider value={form}>\n\t\t\t\t<tr {...props} />\n\t\t\t</EditableContext.Provider>\n\t\t</Form>\n  \t);\n};\n\nconst EditableCell = ({ title, editable, children, dataIndex, record, handleSave, ...restProps }) => {\n\n\tconst [editing, setEditing] = useState(false);\n\tconst [agentData, setAgentData] = useState(false);\n\tconst inputRef = useRef();\n\tconst form = useContext(EditableContext);\n\n\tfunction loadServerRows() {\n        return new Promise((resolve, reject) => {\n            fetch('http://dev2.spoctocular.com/test_api/public/api/agentdetails')\n            .then( response => response.json() )\n            .then( res => res.agentdetails )\n            .then(data => {\n                resolve({\n                    rows: data.map((row) => ({ key: row.id, ...row }))\n                });\n            })\n            .catch((error) => reject(error));\n        });\n    }\n\n\tuseEffect(() => {\n\t\tif (editing) {\n\t\t\tinputRef.current.focus();\n\t\t}\n\t\tconst { rows } = async () => await loadServerRows()\n\t\tsetAgentData(rows)\n\t}, [editing]);\n\n\tconst toggleEdit = () => {\n\t\tsetEditing(!editing);\n\t\tform.setFieldsValue({\n\t\t\t[dataIndex]: record[dataIndex],\n\t\t});\n\t};\n\n\tconst save = async (e) => {\n\t\ttry {\n\t\tconst values = await form.validateFields();\n\t\ttoggleEdit();\n\t\thandleSave({ ...record, ...values });\n\t\t} catch (errInfo) {\n\t\t\tconsole.log('Save failed:', errInfo);\n\t\t}\n\t};\n\n\tlet childNode = children;\n\n\tif (editable) {\n\t\tchildNode = editing ? (\n\t\t<Form.Item\n\t\t\tstyle={{ margin: 0 }}\n\t\t\tname={dataIndex}\n\t\t\trules={[ { required: true, message: `${title} is required.` } ]}\n\t\t>\n\t\t\t<Input ref={inputRef} onPressEnter={save} onBlur={save} />\n\t\t</Form.Item>\n\t\t) : (\n\t\t<div\n\t\t\tclassName=\"editable-cell-value-wrap\"\n\t\t\tstyle={{ paddingRight: 24 }}\n\t\t\tonClick={toggleEdit}\n\t\t>\n\t\t\t{children}\n\t\t</div>\n\t\t);\n\t}\n\n  \treturn <td {...restProps}>{childNode}</td>;\n};\n\nclass EditableTable extends React.Component {\n\tcolumns = [\n\t\t{\n\t\t\ttitle: 'User',\n\t\t\tdataIndex: 'name',\n\t\t\trender: (_, record) => (\n\t\t\t\t<div className=\"d-flex\">\n\t\t\t\t\t<AvatarStatus src={record.img} name={record.name} subTitle={record.id + \"@spocto.com\"}/>\n\t\t\t\t</div>\n\t\t\t),\n\t\t\tsorter: {\n\t\t\t\tcompare: (a, b) => {\n\t\t\t\t\ta = a.name.toLowerCase();\n\t\t\t\t\tb = b.name.toLowerCase();\n\t\t\t\t\treturn a > b ? -1 : b > a ? 1 : 0;\n\t\t\t\t},\n\t\t\t},\n\t\t\teditable: true\n\t\t},\n\t\t{\n\t\t\ttitle: 'Role',\n\t\t\tdataIndex: 'personalInfo',\n\t\t\trender: role => (\n\t\t\t\t<Tag className =\"text-capitalize\" color={role.title === 'Admin' ? 'red' : role.title === 'Agent Manager' ? 'blue' : 'cyan' }>{role.title}</Tag>\n\t\t\t),\n\t\t\tsorter: {\n\t\t\t\tcompare: (a, b) => a.personalInfo.title.length - b.personalInfo.title.length,\n\t\t\t}\n        },\n        {\n\t\t\ttitle: 'Active Chats',\n\t\t\tdataIndex: 'activeChats',\n\t\t\trender: num => (\n            <Tag color={'red'}>{ num }</Tag>\n\t\t\t),\n            sorter: {\n\t\t\t\tcompare: (a, b) => a.activeChats.length - b.activeChats.length,\n\t\t\t}\n\t\t},\n\t];\n\n\tstate = {\n\t\tdataSource: agentData,\n\t\tcount: 2,\n\t\tuserProfileVisible: false,\n\t\tselectedUser: null\n\t};\n\n\tshowUserProfile = userInfo => {\n\t\tthis.setState({\n\t\t\tuserProfileVisible: true,\n\t\t\tselectedUser: userInfo\n\t\t});\n\t};\n\t\n\tcloseUserProfile = () => {\n\t\tthis.setState({\n\t\t\tuserProfileVisible: false,\n\t\t\tselectedUser: null\n    \t});\n\t}\n\n\tdeleteUser = key => {\n\t\tconst dataSource = [...this.state.dataSource];\n\t\tthis.setState({\n\t\t\tdataSource: dataSource.filter(item => item.id !== key),\n\t\t})\n\t\tmessage.success({ content: `Deleted user ${key}`, duration: 2 });\n\t}\n\t\t\n\thandleAdd = () => {\n\t\tconst { count, dataSource } = this.state;\n\t\tconst newData = {\n\t\t\tkey: count,\n\t\t\tname: `Edward King ${count}`,\n\t\t\trole: 'Executive',\n\t\t\taddress: `London, Park Lane no. ${count}`,\n\t\t};\n\t\tthis.setState({\n\t\t\tdataSource: [...dataSource, newData],\n\t\t\tcount: count + 1,\n\t\t});\n\t};\n  \n\thandleSave = (row) => {\n\t\tconst newData = [...this.state.dataSource];\n\t\tconst index = newData.findIndex((item) => row.key === item.key);\n\t\tconst item = newData[index];\n\t\tnewData.splice(index, 1, { ...item, ...row });\n\t\tthis.setState({\n\t\t\tdataSource: newData,\n\t\t});\n\t};\n\n  \trender() {\n\n\t\tconst { dataSource } = this.state;\n\t\tconst components = {\n\t\t\tbody: {\n\t\t\t\trow: EditableRow,\n\t\t\t\tcell: EditableCell,\n\t\t\t},\n\t\t};\n\n    \tconst columns = this.columns.map((col) => {\n\t\t\tif (!col.editable) {\n\t\t\t\treturn col;\n\t\t\t}\n\n\t\t\treturn {\n\t\t\t\t...col,\n\t\t\t\tonCell: (record) => ({\n\t\t\t\t\trecord,\n\t\t\t\t\teditable: col.editable,\n\t\t\t\t\tdataIndex: col.dataIndex,\n\t\t\t\t\ttitle: col.title,\n\t\t\t\t\thandleSave: this.handleSave,\n\t\t\t\t}),\n\t\t\t};\n\t\t});\n\t\t\n\t\treturn (\n\t\t\t<Card>\n\t\t\t\t<Title style={{ textAlign: 'center', fontSize: '2rem', marginTop: '2%' }}>Agent Task Info</Title>\n\t\t\t\t{/* <Button\n\t\t\t\t\tonClick={this.handleAdd}\n\t\t\t\t\ttype=\"primary\"\n\t\t\t\t\tstyle={{ marginBottom: 16 }}\n\t\t\t\t>\n\t\t\t\t\tAdd a row\n\t\t\t\t</Button> */}\n\t\t\t\t<Table\n\t\t\t\t\tcomponents={components}\n\t\t\t\t\trowClassName={() => 'editable-row'}\n\t\t\t\t\tbordered\n\t\t\t\t\tdataSource={dataSource}\n\t\t\t\t\tcolumns={columns}\n\t\t\t\t/>\n\t\t\t</Card>\n\t\t);\n  \t}\n}\n\nexport default EditableTable"]},"metadata":{},"sourceType":"module"}