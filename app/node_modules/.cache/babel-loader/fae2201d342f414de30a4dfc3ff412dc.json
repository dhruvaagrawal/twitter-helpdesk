{"ast":null,"code":"var _jsxFileName = \"/Users/dhruvaagrawal/Desktop/Work/Projects/Webdev.nosync/Twitter/app/src/layouts/app-layout/index.js\";\nimport React from 'react';\nimport { Layout, Grid } from 'antd';\nimport { connect } from 'react-redux';\nimport SideNav from 'components/layout-components/SideNav';\nimport TopNav from 'components/layout-components/TopNav';\nimport MobileNav from 'components/layout-components/MobileNav';\nimport HeaderNav from 'components/layout-components/HeaderNav';\nimport PageHeader from 'components/layout-components/PageHeader';\nimport Footer from 'components/layout-components/Footer';\nimport AppViews from 'views/app-views';\nimport navigationConfig from \"configs/NavigationConfig\";\nimport { SIDE_NAV_WIDTH, SIDE_NAV_COLLAPSED_WIDTH, NAV_TYPE_SIDE, NAV_TYPE_TOP } from 'constants/ThemeConstant';\nimport utils from 'utils';\nconst {\n  Content\n} = Layout;\nconst {\n  useBreakpoint\n} = Grid;\nexport const AppLayout = ({\n  navCollapsed,\n  navType,\n  location\n}) => {\n  const currentRouteInfo = utils.getRouteInfo(navigationConfig, location.pathname);\n  const screens = utils.getBreakPoint(useBreakpoint());\n  const isMobile = !screens.includes('lg');\n  const isNavSide = navType === NAV_TYPE_SIDE;\n  const isNavTop = navType === NAV_TYPE_TOP;\n\n  const getLayoutGutter = () => {\n    if (isNavTop || isMobile) {\n      return 0;\n    }\n\n    return navCollapsed ? SIDE_NAV_COLLAPSED_WIDTH : SIDE_NAV_WIDTH;\n  };\n\n  return /*#__PURE__*/React.createElement(Layout, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(HeaderNav, {\n    isMobile: isMobile,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }\n  }), isNavTop && !isMobile ? /*#__PURE__*/React.createElement(TopNav, {\n    routeInfo: currentRouteInfo,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 34\n    }\n  }) : null, /*#__PURE__*/React.createElement(Layout, {\n    className: \"app-container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }\n  }, isNavSide && !isMobile ? /*#__PURE__*/React.createElement(SideNav, {\n    routeInfo: currentRouteInfo,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 37\n    }\n  }) : null, /*#__PURE__*/React.createElement(Layout, {\n    className: \"app-layout\",\n    style: {\n      paddingLeft: getLayoutGutter()\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: `app-content ${isNavTop ? 'layout-top-nav' : ''}`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(PageHeader, {\n    display: currentRouteInfo === null || currentRouteInfo === void 0 ? void 0 : currentRouteInfo.breadcrumb,\n    title: currentRouteInfo === null || currentRouteInfo === void 0 ? void 0 : currentRouteInfo.title,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(Content, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(AppViews, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 15\n    }\n  }))), /*#__PURE__*/React.createElement(Footer, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 11\n    }\n  }))), isMobile && /*#__PURE__*/React.createElement(MobileNav, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 20\n    }\n  }));\n};\n\nconst mapStateToProps = ({\n  theme\n}) => {\n  const {\n    navCollapsed,\n    navType,\n    locale\n  } = theme;\n  return {\n    navCollapsed,\n    navType,\n    locale\n  };\n};\n\nexport default connect(mapStateToProps)(React.memo(AppLayout));","map":{"version":3,"sources":["/Users/dhruvaagrawal/Desktop/Work/Projects/Webdev.nosync/Twitter/app/src/layouts/app-layout/index.js"],"names":["React","Layout","Grid","connect","SideNav","TopNav","MobileNav","HeaderNav","PageHeader","Footer","AppViews","navigationConfig","SIDE_NAV_WIDTH","SIDE_NAV_COLLAPSED_WIDTH","NAV_TYPE_SIDE","NAV_TYPE_TOP","utils","Content","useBreakpoint","AppLayout","navCollapsed","navType","location","currentRouteInfo","getRouteInfo","pathname","screens","getBreakPoint","isMobile","includes","isNavSide","isNavTop","getLayoutGutter","paddingLeft","breadcrumb","title","mapStateToProps","theme","locale","memo"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport { Layout, Grid } from 'antd';\r\nimport { connect } from 'react-redux';\r\nimport SideNav from 'components/layout-components/SideNav';\r\nimport TopNav from 'components/layout-components/TopNav';\r\nimport MobileNav from 'components/layout-components/MobileNav'\r\nimport HeaderNav from 'components/layout-components/HeaderNav';\r\nimport PageHeader from 'components/layout-components/PageHeader';\r\nimport Footer from 'components/layout-components/Footer';\r\nimport AppViews from 'views/app-views';\r\nimport navigationConfig from \"configs/NavigationConfig\";\r\nimport { \r\n  SIDE_NAV_WIDTH, \r\n  SIDE_NAV_COLLAPSED_WIDTH,\r\n  NAV_TYPE_SIDE,\r\n  NAV_TYPE_TOP\r\n} from 'constants/ThemeConstant';\r\nimport utils from 'utils';\r\n\r\nconst { Content } = Layout;\r\nconst { useBreakpoint } = Grid;\r\n\r\nexport const AppLayout = ({ navCollapsed, navType, location }) => {\r\n  const currentRouteInfo = utils.getRouteInfo(navigationConfig, location.pathname)\r\n  const screens = utils.getBreakPoint(useBreakpoint());\r\n  const isMobile = !screens.includes('lg')\r\n  const isNavSide = navType === NAV_TYPE_SIDE\r\n  const isNavTop = navType === NAV_TYPE_TOP\r\n  const getLayoutGutter = () => {\r\n    if(isNavTop || isMobile) {\r\n      return 0\r\n    }\r\n    return navCollapsed ? SIDE_NAV_COLLAPSED_WIDTH : SIDE_NAV_WIDTH\r\n  }\r\n  return (\r\n    <Layout>\r\n      <HeaderNav isMobile={isMobile}/>\r\n      {(isNavTop && !isMobile) ? <TopNav routeInfo={currentRouteInfo}/> : null}\r\n      <Layout className=\"app-container\">\r\n        {(isNavSide && !isMobile) ? <SideNav routeInfo={currentRouteInfo}/> : null }\r\n        <Layout className=\"app-layout\" style={{paddingLeft: getLayoutGutter()}}>\r\n          <div className={`app-content ${isNavTop ? 'layout-top-nav' : ''}`}>\r\n            <PageHeader display={currentRouteInfo?.breadcrumb} title={currentRouteInfo?.title} />\r\n            <Content>\r\n              <AppViews />\r\n            </Content>\r\n          </div>\r\n          <Footer />\r\n        </Layout>\r\n      </Layout>\r\n      {isMobile && <MobileNav />}\r\n    </Layout>\r\n  )\r\n}\r\n\r\nconst mapStateToProps = ({ theme }) => {\r\n  const { navCollapsed, navType, locale } =  theme;\r\n  return { navCollapsed, navType, locale }\r\n};\r\n\r\nexport default connect(mapStateToProps)(React.memo(AppLayout));"]},"metadata":{},"sourceType":"module"}