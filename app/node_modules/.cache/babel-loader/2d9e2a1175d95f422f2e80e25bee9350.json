{"ast":null,"code":"var _jsxFileName = \"/Users/dhruvaagrawal/Desktop/Work/Spocto/CMS/app/src/components/layout-components/HeaderNav.js\";\nimport React, { useState } from \"react\";\nimport { connect } from \"react-redux\";\nimport { Menu, Layout } from \"antd\";\nimport { MenuFoldOutlined, MenuUnfoldOutlined, SearchOutlined } from '@ant-design/icons';\nimport Logo from './Logo';\nimport NavSearch from './NavSearch';\nimport SearchInput from './NavSearch/SearchInput.js';\nimport { toggleCollapsedNav, onMobileNavToggle } from 'redux/actions/Theme';\nimport { NAV_TYPE_TOP, SIDE_NAV_COLLAPSED_WIDTH, SIDE_NAV_WIDTH } from 'constants/ThemeConstant';\nimport utils from 'utils';\nimport NavProfile from \"./NavProfile\";\nimport NavNotification from \"./NavNotification\";\nconst {\n  Header\n} = Layout;\nexport const HeaderNav = props => {\n  const {\n    navCollapsed,\n    mobileNav,\n    navType,\n    headerNavColor,\n    toggleCollapsedNav,\n    onMobileNavToggle,\n    isMobile\n  } = props;\n  const [searchActive, setSearchActive] = useState(false);\n\n  const onSearchActive = () => {\n    setSearchActive(true);\n  };\n\n  const onSearchClose = () => {\n    setSearchActive(false);\n  };\n\n  const onToggle = () => {\n    if (!isMobile) {\n      toggleCollapsedNav(!navCollapsed);\n    } else {\n      onMobileNavToggle(!mobileNav);\n    }\n  };\n\n  const isNavTop = navType === NAV_TYPE_TOP ? true : false;\n  const mode = utils.getColorContrast(headerNavColor);\n\n  const getNavWidth = () => {\n    if (isNavTop || isMobile) {\n      return '0px';\n    }\n\n    if (navCollapsed) {\n      return `${SIDE_NAV_COLLAPSED_WIDTH}px`;\n    } else {\n      return `${SIDE_NAV_WIDTH}px`;\n    }\n  };\n\n  return /*#__PURE__*/React.createElement(Header, {\n    className: `app-header ${mode}`,\n    style: {\n      backgroundColor: headerNavColor\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: `app-header-wrapper ${isNavTop ? 'layout-top-nav' : ''}`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Logo, {\n    logoType: mode,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"nav\",\n    style: {\n      width: `calc(100% - ${getNavWidth()})`\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"nav-left\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Menu, {\n    mode: \"horizontal\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 13\n    }\n  }, isNavTop && !isMobile ? null : /*#__PURE__*/React.createElement(Menu.Item, {\n    key: \"0\",\n    onClick: () => {\n      onToggle();\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 17\n    }\n  }, navCollapsed || isMobile ? /*#__PURE__*/React.createElement(MenuUnfoldOutlined, {\n    className: \"nav-icon\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 47\n    }\n  }) : /*#__PURE__*/React.createElement(MenuFoldOutlined, {\n    className: \"nav-icon\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 93\n    }\n  })), isMobile ? /*#__PURE__*/React.createElement(Menu.Item, {\n    key: \"1\",\n    onClick: () => {\n      onSearchActive();\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(SearchOutlined, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 19\n    }\n  })) : /*#__PURE__*/React.createElement(Menu.Item, {\n    key: \"1\",\n    style: {\n      cursor: 'auto'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(SearchInput, {\n    mode: mode,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 19\n    }\n  })))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"nav-right\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(NavNotification, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(NavProfile, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 13\n    }\n  })), /*#__PURE__*/React.createElement(NavSearch, {\n    active: searchActive,\n    close: onSearchClose,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 11\n    }\n  }))));\n};\n\nconst mapStateToProps = ({\n  theme\n}) => {\n  const {\n    navCollapsed,\n    navType,\n    headerNavColor,\n    mobileNav\n  } = theme;\n  return {\n    navCollapsed,\n    navType,\n    headerNavColor,\n    mobileNav\n  };\n};\n\nexport default connect(mapStateToProps, {\n  toggleCollapsedNav,\n  onMobileNavToggle\n})(HeaderNav);","map":{"version":3,"sources":["/Users/dhruvaagrawal/Desktop/Work/Spocto/CMS/app/src/components/layout-components/HeaderNav.js"],"names":["React","useState","connect","Menu","Layout","MenuFoldOutlined","MenuUnfoldOutlined","SearchOutlined","Logo","NavSearch","SearchInput","toggleCollapsedNav","onMobileNavToggle","NAV_TYPE_TOP","SIDE_NAV_COLLAPSED_WIDTH","SIDE_NAV_WIDTH","utils","NavProfile","NavNotification","Header","HeaderNav","props","navCollapsed","mobileNav","navType","headerNavColor","isMobile","searchActive","setSearchActive","onSearchActive","onSearchClose","onToggle","isNavTop","mode","getColorContrast","getNavWidth","backgroundColor","width","cursor","mapStateToProps","theme"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { Menu, Layout } from \"antd\";\r\nimport { MenuFoldOutlined, MenuUnfoldOutlined, SearchOutlined } from '@ant-design/icons';\r\nimport Logo from './Logo';\r\nimport NavSearch  from './NavSearch';\r\nimport SearchInput from './NavSearch/SearchInput.js'\r\nimport { toggleCollapsedNav, onMobileNavToggle } from 'redux/actions/Theme';\r\nimport { NAV_TYPE_TOP, SIDE_NAV_COLLAPSED_WIDTH, SIDE_NAV_WIDTH } from 'constants/ThemeConstant';\r\nimport utils from 'utils'\r\nimport NavProfile from \"./NavProfile\";\r\nimport NavNotification from \"./NavNotification\";\r\n\r\nconst { Header } = Layout;\r\n\r\nexport const HeaderNav = props => {\r\n  const { navCollapsed, mobileNav, navType, headerNavColor, toggleCollapsedNav, onMobileNavToggle, isMobile } = props;\r\n  const [searchActive, setSearchActive] = useState(false)\r\n\r\n  const onSearchActive = () => {\r\n    setSearchActive(true)\r\n  }\r\n\r\n  const onSearchClose = () => {\r\n    setSearchActive(false)\r\n  }\r\n\r\n  const onToggle = () => {\r\n    if(!isMobile) {\r\n      toggleCollapsedNav(!navCollapsed)\r\n    } else {\r\n      onMobileNavToggle(!mobileNav)\r\n    }\r\n  }\r\n\r\n  const isNavTop = navType === NAV_TYPE_TOP ? true : false\r\n  const mode = utils.getColorContrast(headerNavColor)\r\n  const getNavWidth = () => {\r\n    if(isNavTop || isMobile) {\r\n      return '0px'\r\n    }\r\n    if(navCollapsed) {\r\n      return `${SIDE_NAV_COLLAPSED_WIDTH}px`\r\n    } else {\r\n      return `${SIDE_NAV_WIDTH}px`\r\n    }\r\n  }\r\n  return (\r\n    <Header className={`app-header ${mode}`} style={{backgroundColor: headerNavColor}}>\r\n      <div className={`app-header-wrapper ${isNavTop ? 'layout-top-nav' : ''}`}>\r\n        <Logo logoType={mode}/>\r\n        <div className=\"nav\" style={{width: `calc(100% - ${getNavWidth()})`}}>\r\n          <div className=\"nav-left\">\r\n            <Menu mode=\"horizontal\">\r\n            {\r\n                isNavTop && !isMobile ?\r\n                null\r\n                :\r\n                <Menu.Item key=\"0\" onClick={() => {onToggle()}}>\r\n                  {navCollapsed || isMobile ? <MenuUnfoldOutlined className=\"nav-icon\" /> : <MenuFoldOutlined className=\"nav-icon\" />}\r\n                </Menu.Item>\r\n              }\r\n              {\r\n                isMobile ?\r\n                <Menu.Item key=\"1\" onClick={() => {onSearchActive()}}>\r\n                  <SearchOutlined />\r\n                </Menu.Item>\r\n                :\r\n                <Menu.Item key=\"1\" style={{cursor: 'auto'}}>\r\n                  <SearchInput mode={mode} />\r\n                </Menu.Item>\r\n              }\r\n            </Menu>\r\n          </div>\r\n          <div className=\"nav-right\">\r\n            <NavNotification />\r\n            <NavProfile />\r\n          </div>\r\n          <NavSearch active={searchActive} close={onSearchClose}/>\r\n        </div>\r\n      </div>\r\n    </Header>\r\n  )\r\n}\r\n\r\nconst mapStateToProps = ({ theme }) => {\r\n  const { navCollapsed, navType, headerNavColor, mobileNav } =  theme;\r\n  return { navCollapsed, navType, headerNavColor, mobileNav }\r\n};\r\n\r\nexport default connect(mapStateToProps, {toggleCollapsedNav, onMobileNavToggle})(HeaderNav);"]},"metadata":{},"sourceType":"module"}